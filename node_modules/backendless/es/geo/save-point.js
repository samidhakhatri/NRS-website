"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.savePoint = savePoint;

var _utils = _interopRequireDefault(require("../utils"));

var _point = _interopRequireDefault(require("./point"));

function savePoint(geoPoint, asyncHandler) {
  if (!_utils["default"].isNumber(geoPoint.latitude) || !_utils["default"].isNumber(geoPoint.longitude)) {
    throw new Error('Latitude or longitude not a number');
  }

  geoPoint.categories = _utils["default"].castArray(geoPoint.categories || ['Default']);

  if (asyncHandler) {
    asyncHandler = _utils["default"].wrapAsync(asyncHandler, parseResponse);
  }

  var method = geoPoint.objectId ? this.app.request.Methods.PATCH : this.app.request.Methods.POST;
  var url = geoPoint.objectId ? this.app.urls.geoPoint(geoPoint.objectId) : this.app.urls.geoPoints();
  var result = this.app.request.send({
    method: method,
    url: url,
    data: geoPoint,
    isAsync: !!asyncHandler,
    asyncHandler: asyncHandler
  });

  if (asyncHandler) {
    return result;
  }

  return parseResponse(result);
}

function parseResponse(resp) {
  var geoPoint = new _point["default"]();
  geoPoint.categories = resp.geopoint.categories;
  geoPoint.latitude = resp.geopoint.latitude;
  geoPoint.longitude = resp.geopoint.longitude;
  geoPoint.metadata = resp.geopoint.metadata;
  geoPoint.objectId = resp.geopoint.objectId;
  return geoPoint;
}