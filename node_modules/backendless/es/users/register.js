"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.register = register;

var _utils = _interopRequireDefault(require("../utils"));

var _async = _interopRequireDefault(require("../request/async"));

var _user = _interopRequireDefault(require("./user"));

function register(user
/** async */
) {
  var responder = _utils["default"].extractResponder(arguments);

  var isAsync = !!responder;
  var result = this.app.request.post({
    url: this.app.urls.userRegister(),
    isAsync: isAsync,
    asyncHandler: responder && wrapAsync(responder),
    data: enrichWithLocaleInfo(user)
  });
  return isAsync ? result : parseResponse(result);
}

function enrichWithLocaleInfo(user) {
  if (!user.blUserLocale) {
    var clientUserLocale = getClientUserLocale();

    if (clientUserLocale) {
      user.blUserLocale = clientUserLocale;
    }
  }

  return user;
}

function getClientUserLocale() {
  if (typeof navigator === 'undefined') {
    return;
  }

  var language = '';

  if (navigator.languages && navigator.languages.length) {
    language = navigator.languages[0];
  } else {
    language = navigator.userLanguage || navigator.language || navigator.browserLanguage || navigator.systemLanguage || '';
  }

  return language.slice(0, 2).toLowerCase();
}

function parseResponse(data) {
  return _utils["default"].deepExtend(new _user["default"](), data);
}

function wrapAsync(asyncHandler) {
  var onSuccess = function onSuccess(data) {
    return asyncHandler.success(parseResponse(data));
  };

  var onError = function onError(error) {
    return asyncHandler.fault(error);
  };

  return new _async["default"](onSuccess, onError);
}