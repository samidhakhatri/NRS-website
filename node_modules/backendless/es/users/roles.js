"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getUserRoles = getUserRoles;
exports.assignRole = assignRole;
exports.unassignRole = unassignRole;

var _utils = _interopRequireDefault(require("../utils"));

var _utils2 = require("./utils");

function roleHelper(identity, rolename, asyncHandler, operation) {
  if (!identity) {
    throw new Error('User identity can not be empty');
  }

  if (!rolename) {
    throw new Error('Rolename can not be empty');
  }

  var responder = _utils["default"].extractResponder(arguments);

  return this.app.request.post({
    url: this.app.urls.userRoleOperation(operation),
    isAsync: !!responder,
    asyncHandler: responder,
    data: {
      user: identity,
      roleName: rolename
    }
  });
}

function getUserRoles()
/** async */
{
  var responder = _utils["default"].extractResponder(arguments);

  var isAsync = !!responder;
  var result = this.app.request.get({
    url: this.app.urls.userRoles(),
    isAsync: isAsync,
    asyncHandler: responder
  });
  return isAsync ? result : _utils2.parseResponse.call(this, result);
}

function assignRole(identity, rolename, asyncHandler) {
  return roleHelper.call(this, identity, rolename, asyncHandler, 'assignRole');
}

function unassignRole(identity, rolename, asyncHandler) {
  return roleHelper.call(this, identity, rolename, asyncHandler, 'unassignRole');
}