"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.logout = logout;

var _utils = _interopRequireDefault(require("../utils"));

function logout()
/** async */
{
  var context = this;

  var responder = _utils["default"].extractResponder(arguments);

  var isAsync = !!responder;
  var errorCallback = isAsync ? responder.fault : null;
  var successCallback = isAsync ? responder.success : null;
  var result = {};

  var logoutUser = function logoutUser() {
    context.app.LocalCache.remove('user-token');
    context.app.LocalCache.remove('current-user-id');
    context.app.LocalCache.remove('stayLoggedIn');
    context.setLocalCurrentUser(null);
  };

  var onLogoutSuccess = function onLogoutSuccess() {
    logoutUser();

    if (_utils["default"].isFunction(successCallback)) {
      successCallback();
    }
  };

  var onLogoutError = function onLogoutError(e) {
    if (_utils["default"].isObject(e) && [3064, 3091, 3090, 3023].indexOf(e.code) !== -1) {
      logoutUser();
    }

    if (_utils["default"].isFunction(errorCallback)) {
      errorCallback(e);
    }
  };

  if (responder) {
    responder.fault = onLogoutError;
    responder.success = onLogoutSuccess;
  }

  try {
    result = this.app.request.get({
      url: this.app.urls.userLogout(),
      isAsync: isAsync,
      asyncHandler: responder
    });
  } catch (e) {
    onLogoutError(e);
  }

  if (isAsync) {
    return result;
  } else {
    logoutUser();
  }
}