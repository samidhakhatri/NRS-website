"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.extractQueryOptions = extractQueryOptions;

var _utils = _interopRequireDefault(require("../../utils"));

//TODO: refactor me
//TODO: does make sense to move this logic into QueryBuilder?
function extractQueryOptions(options) {
  var params = [];

  if (typeof options.pageSize !== 'undefined') {
    if (options.pageSize < 1) {
      throw new Error('PageSize can not be less then 1');
    }

    params.push('pageSize=' + encodeURIComponent(options.pageSize));
  }

  if (typeof options.offset !== 'undefined') {
    if (options.offset < 0) {
      throw new Error('Offset can not be less then 0');
    }

    params.push('offset=' + encodeURIComponent(options.offset));
  }

  if (options.sortBy) {
    if (_utils["default"].isString(options.sortBy)) {
      params.push('sortBy=' + encodeURIComponent(options.sortBy));
    } else if (_utils["default"].isArray(options.sortBy)) {
      params.push('sortBy=' + _utils["default"].encodeArrayToUriComponent(options.sortBy));
    }
  }

  if (options.groupBy) {
    if (_utils["default"].isString(options.groupBy)) {
      params.push('groupBy=' + encodeURIComponent(options.groupBy));
    } else if (_utils["default"].isArray(options.groupBy)) {
      params.push('groupBy=' + _utils["default"].encodeArrayToUriComponent(options.groupBy));
    }
  }

  if (_utils["default"].isNumber(options.relationsDepth)) {
    params.push('relationsDepth=' + options.relationsDepth);
  }

  if (_utils["default"].isNumber(options.relationsPageSize)) {
    params.push('relationsPageSize=' + options.relationsPageSize);
  }

  if (options.relations) {
    if (_utils["default"].isArray(options.relations)) {
      var loadRelations = options.relations.length ? _utils["default"].encodeArrayToUriComponent(options.relations) : '*';
      params.push('loadRelations=' + loadRelations);
    }
  }

  return params.join('&');
}