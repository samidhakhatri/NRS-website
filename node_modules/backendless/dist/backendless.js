/*
 * ********************************************************************************************************************
 *  Backendless SDK for JavaScript. Version: 5.9.3
 *
 *  Copyright 2012-2020 BACKENDLESS.COM. All Rights Reserved.
 *
 *  NOTICE: All information contained herein is, and remains the property of Backendless.com and its suppliers,
 *  if any. The intellectual and technical concepts contained herein are proprietary to Backendless.com and its
 *  suppliers and may be covered by U.S. and Foreign Patents, patents in process, and are protected by trade secret
 *  or copyright law. Dissemination of this information or reproduction of this material is strictly forbidden
 *  unless prior written permission is obtained from Backendless.com.
 * ********************************************************************************************************************
 */
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["Backendless"] = factory();
	else
		root["Backendless"] = factory();
})(window, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/@babel/runtime/helpers/applyDecoratedDescriptor.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/applyDecoratedDescriptor.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {
  var desc = {};
  Object.keys(descriptor).forEach(function (key) {
    desc[key] = descriptor[key];
  });
  desc.enumerable = !!desc.enumerable;
  desc.configurable = !!desc.configurable;

  if ('value' in desc || desc.initializer) {
    desc.writable = true;
  }

  desc = decorators.slice().reverse().reduce(function (desc, decorator) {
    return decorator(target, property, desc) || desc;
  }, desc);

  if (context && desc.initializer !== void 0) {
    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;
    desc.initializer = undefined;
  }

  if (desc.initializer === void 0) {
    Object.defineProperty(target, property, desc);
    desc = null;
  }

  return desc;
}

module.exports = _applyDecoratedDescriptor;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/arrayWithHoles.js":
/*!***************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/arrayWithHoles.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _arrayWithHoles(arr) {
  if (Array.isArray(arr)) return arr;
}

module.exports = _arrayWithHoles;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js":
/*!******************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr)) {
    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {
      arr2[i] = arr[i];
    }

    return arr2;
  }
}

module.exports = _arrayWithoutHoles;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/assertThisInitialized.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/assertThisInitialized.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

module.exports = _assertThisInitialized;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/classCallCheck.js":
/*!***************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/classCallCheck.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

module.exports = _classCallCheck;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/construct.js":
/*!**********************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/construct.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var setPrototypeOf = __webpack_require__(/*! ./setPrototypeOf */ "./node_modules/@babel/runtime/helpers/setPrototypeOf.js");

function isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;

  try {
    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}

function _construct(Parent, args, Class) {
  if (isNativeReflectConstruct()) {
    module.exports = _construct = Reflect.construct;
  } else {
    module.exports = _construct = function _construct(Parent, args, Class) {
      var a = [null];
      a.push.apply(a, args);
      var Constructor = Function.bind.apply(Parent, a);
      var instance = new Constructor();
      if (Class) setPrototypeOf(instance, Class.prototype);
      return instance;
    };
  }

  return _construct.apply(null, arguments);
}

module.exports = _construct;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/createClass.js":
/*!************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/createClass.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}

module.exports = _createClass;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/defineProperty.js":
/*!***************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/defineProperty.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

module.exports = _defineProperty;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/extends.js":
/*!********************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/extends.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _extends() {
  module.exports = _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

module.exports = _extends;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/get.js":
/*!****************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/get.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var superPropBase = __webpack_require__(/*! ./superPropBase */ "./node_modules/@babel/runtime/helpers/superPropBase.js");

function _get(target, property, receiver) {
  if (typeof Reflect !== "undefined" && Reflect.get) {
    module.exports = _get = Reflect.get;
  } else {
    module.exports = _get = function _get(target, property, receiver) {
      var base = superPropBase(target, property);
      if (!base) return;
      var desc = Object.getOwnPropertyDescriptor(base, property);

      if (desc.get) {
        return desc.get.call(receiver);
      }

      return desc.value;
    };
  }

  return _get(target, property, receiver || target);
}

module.exports = _get;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/getPrototypeOf.js":
/*!***************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/getPrototypeOf.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _getPrototypeOf(o) {
  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return _getPrototypeOf(o);
}

module.exports = _getPrototypeOf;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/inherits.js":
/*!*********************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/inherits.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var setPrototypeOf = __webpack_require__(/*! ./setPrototypeOf */ "./node_modules/@babel/runtime/helpers/setPrototypeOf.js");

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) setPrototypeOf(subClass, superClass);
}

module.exports = _inherits;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/interopRequireDefault.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

module.exports = _interopRequireDefault;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/iterableToArray.js":
/*!****************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/iterableToArray.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _iterableToArray(iter) {
  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter);
}

module.exports = _iterableToArray;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/iterableToArrayLimit.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/iterableToArrayLimit.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _iterableToArrayLimit(arr, i) {
  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === "[object Arguments]")) {
    return;
  }

  var _arr = [];
  var _n = true;
  var _d = false;
  var _e = undefined;

  try {
    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);

      if (i && _arr.length === i) break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null) _i["return"]();
    } finally {
      if (_d) throw _e;
    }
  }

  return _arr;
}

module.exports = _iterableToArrayLimit;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/nonIterableRest.js":
/*!****************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/nonIterableRest.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance");
}

module.exports = _nonIterableRest;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/nonIterableSpread.js":
/*!******************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/nonIterableSpread.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance");
}

module.exports = _nonIterableSpread;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _typeof = __webpack_require__(/*! ../helpers/typeof */ "./node_modules/@babel/runtime/helpers/typeof.js");

var assertThisInitialized = __webpack_require__(/*! ./assertThisInitialized */ "./node_modules/@babel/runtime/helpers/assertThisInitialized.js");

function _possibleConstructorReturn(self, call) {
  if (call && (_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }

  return assertThisInitialized(self);
}

module.exports = _possibleConstructorReturn;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/setPrototypeOf.js":
/*!***************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/setPrototypeOf.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _setPrototypeOf(o, p) {
  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf(o, p);
}

module.exports = _setPrototypeOf;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/slicedToArray.js":
/*!**************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/slicedToArray.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var arrayWithHoles = __webpack_require__(/*! ./arrayWithHoles */ "./node_modules/@babel/runtime/helpers/arrayWithHoles.js");

var iterableToArrayLimit = __webpack_require__(/*! ./iterableToArrayLimit */ "./node_modules/@babel/runtime/helpers/iterableToArrayLimit.js");

var nonIterableRest = __webpack_require__(/*! ./nonIterableRest */ "./node_modules/@babel/runtime/helpers/nonIterableRest.js");

function _slicedToArray(arr, i) {
  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();
}

module.exports = _slicedToArray;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/superPropBase.js":
/*!**************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/superPropBase.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var getPrototypeOf = __webpack_require__(/*! ./getPrototypeOf */ "./node_modules/@babel/runtime/helpers/getPrototypeOf.js");

function _superPropBase(object, property) {
  while (!Object.prototype.hasOwnProperty.call(object, property)) {
    object = getPrototypeOf(object);
    if (object === null) break;
  }

  return object;
}

module.exports = _superPropBase;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/toArray.js":
/*!********************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/toArray.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var arrayWithHoles = __webpack_require__(/*! ./arrayWithHoles */ "./node_modules/@babel/runtime/helpers/arrayWithHoles.js");

var iterableToArray = __webpack_require__(/*! ./iterableToArray */ "./node_modules/@babel/runtime/helpers/iterableToArray.js");

var nonIterableRest = __webpack_require__(/*! ./nonIterableRest */ "./node_modules/@babel/runtime/helpers/nonIterableRest.js");

function _toArray(arr) {
  return arrayWithHoles(arr) || iterableToArray(arr) || nonIterableRest();
}

module.exports = _toArray;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/toConsumableArray.js":
/*!******************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/toConsumableArray.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var arrayWithoutHoles = __webpack_require__(/*! ./arrayWithoutHoles */ "./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js");

var iterableToArray = __webpack_require__(/*! ./iterableToArray */ "./node_modules/@babel/runtime/helpers/iterableToArray.js");

var nonIterableSpread = __webpack_require__(/*! ./nonIterableSpread */ "./node_modules/@babel/runtime/helpers/nonIterableSpread.js");

function _toConsumableArray(arr) {
  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();
}

module.exports = _toConsumableArray;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/typeof.js":
/*!*******************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/typeof.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _typeof(obj) {
  "@babel/helpers - typeof";

  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    module.exports = _typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    module.exports = _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return _typeof(obj);
}

module.exports = _typeof;

/***/ }),

/***/ "./node_modules/backendless-request/dist/backendless-request.js":
/*!**********************************************************************!*\
  !*** ./node_modules/backendless-request/dist/backendless-request.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["BackendlessRequest"] = factory();
	else
		root["BackendlessRequest"] = factory();
})(typeof self !== 'undefined' ? self : this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 2);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

/**
 * Casts `value` as an array if it's not one.
 * Equvivalent to lodash/castArray
 */
var castArray = exports.castArray = function castArray(value) {
  return Array.isArray(value) ? value : [value];
};

var isObject = exports.isObject = function isObject(value) {
  return null != value && (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object';
};

var isFormData = exports.isFormData = function isFormData(value) {
  return value && value.constructor && value.constructor.toString().trim().indexOf('function FormData') === 0;
};

var isStream = exports.isStream = function isStream(value) {
  var stream = __webpack_require__(6);

  return value instanceof stream.Stream;
};

/***/ }),
/* 1 */
/***/ (function(module, exports) {

throw new Error('This Backendless JS SDK assembly is not intended for Node.js environment. You should use "lib" folder modules instead. For any questions please contact as at http://support.backendless.com/')

/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _cache = __webpack_require__(3);

var _cache2 = _interopRequireDefault(_cache);

var _eventEmitter = __webpack_require__(4);

var _eventEmitter2 = _interopRequireDefault(_eventEmitter);

var _qs = __webpack_require__(5);

var qs = _interopRequireWildcard(_qs);

var _utils = __webpack_require__(0);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var CONTENT_TYPE_HEADER = 'Content-Type';
var CACHE_FLUSH_INTERVAL = 60000; //60 sec

var cache = new _cache2.default(CACHE_FLUSH_INTERVAL);

var ResponseError = function (_Error) {
  _inherits(ResponseError, _Error);

  function ResponseError(response) {
    _classCallCheck(this, ResponseError);

    var _this = _possibleConstructorReturn(this, (ResponseError.__proto__ || Object.getPrototypeOf(ResponseError)).call(this));

    var error = parseError(response);

    _this.message = error.message || error;
    _this.code = error.code;

    _this.status = response.status;
    _this.headers = response.headers;
    _this.body = response.body;
    return _this;
  }

  return ResponseError;
}(Error);

function parseError(res) {
  if (res.status === 502) {
    return 'No connection with server';
  }

  return res.body || 'Status Code ' + res.status + ' (' + res.statusText + ')';
}

function parseBody(res) {
  try {
    return _extends({}, res, { body: JSON.parse(res.body) });
  } catch (e) {
    return res;
  }
}

function parseHeaders(headersString) {
  var parsed = {};

  if (!headersString) {
    return parsed;
  }

  headersString.split('\n').forEach(function (line) {
    var i = line.indexOf(':');
    var key = line.substr(0, i).trim();
    var val = line.substr(i + 1).trim();

    if (key) {
      parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;
    }
  });

  return parsed;
}

var sendXmlHttpRequest = function sendXmlHttpRequest(path, method, headers, body) {
  return new Promise(function sendRequest(resolve, reject) {
    var request = new Request.XMLHttpRequest();

    request.open(method.toUpperCase(), path, true);

    request.onload = function handleLoadEvent() {
      var headers = parseHeaders(request.getAllResponseHeaders());
      var _request = request,
          status = _request.status,
          statusText = _request.statusText,
          response = _request.response,
          responseText = _request.responseText;

      var body = response || responseText;

      resolve({ status: status, statusText: statusText, headers: headers, body: body });

      request = null;
    };

    request.onerror = function handleErrorEvent() {
      reject(new Error('Network Error'));

      request = null;
    };

    request.ontimeout = function handleTimeout() {
      reject(new Error('Connection aborted due to timeout'));

      request = null;
    };

    Object.keys(headers).forEach(function (key) {
      request.setRequestHeader(key, headers[key]);
    });

    request.send(body);
  });
};

var sendNodeAPIRequest = function sendNodeAPIRequest(path, method, headers, body, encoding) {
  return new Promise(function (resolve, reject) {
    var u = __webpack_require__(7).parse(path);
    var form = (0, _utils.isFormData)(body) && body;

    var https = u.protocol === 'https:';
    var options = {
      host: u.hostname,
      port: u.port || (https ? 443 : 80),
      method: method,
      path: u.path,
      headers: headers
    };

    var _send = function _send() {
      var Buffer = __webpack_require__(1).Buffer;
      var httpClient = __webpack_require__(https ? 8 : 9);

      var req = httpClient.request(options, function (res) {
        var strings = [];
        var buffers = [];
        var bufferLength = 0;
        var body = '';

        var status = res.statusCode,
            statusText = res.statusMessage,
            headers = res.headers;


        res.on('data', function (chunk) {
          if (!Buffer.isBuffer(chunk)) {
            strings.push(chunk);
          } else if (chunk.length) {
            bufferLength += chunk.length;
            buffers.push(chunk);
          }
        });

        res.on('end', function () {
          if (bufferLength) {
            body = Buffer.concat(buffers, bufferLength);

            if (encoding != null) {
              body = body.toString(encoding);
            }
          } else if (strings.length) {
            body = strings.join();
          }

          resolve({ status: status, statusText: statusText, headers: headers, body: body });
        });

        res.on('error', reject);
      });

      req.on('error', reject);

      if (body) {
        if ((0, _utils.isStream)(body)) {
          body.pipe(req);
          return;
        }

        req.write(body);
      }

      req.end();
    };

    if (form) {
      _extends(options.headers, form.getHeaders());

      form.getLength(function (err, length) {
        if (!err && !isNaN(length)) {
          options.headers['content-length'] = length;
        }

        _send();
      });
    } else {
      if (body && !options.headers['content-length']) {
        var Buffer = __webpack_require__(1).Buffer;
        options.headers['content-length'] = Buffer.byteLength(body);
      }

      _send();
    }
  });
};

/**
 * Checks if a network request came back fine, and throws an error if not
 *
 * @param  {object} response   A response from a network request
 *
 * @return {object|undefined} Returns either the response, or throws an error
 */
function checkStatus(response) {
  if (response.status >= 200 && response.status < 300) {
    return response;
  }

  throw new ResponseError(response);
}

var REQUEST_EVENT = 'request';
var RESPONSE_EVENT = 'response';
var ERROR_EVENT = 'error';
var DONE_EVENT = 'done';

var Request = function (_EventEmitter) {
  _inherits(Request, _EventEmitter);

  function Request(path, method, body) {
    _classCallCheck(this, Request);

    var _this2 = _possibleConstructorReturn(this, (Request.__proto__ || Object.getPrototypeOf(Request)).call(this));

    _this2.method = method;
    _this2.path = path;
    _this2.body = body;
    _this2.tags = undefined;
    _this2.unwrap = true;
    _this2.cacheTTL = 0;
    _this2.headers = {};
    _this2.queryParams = {};
    _this2.encoding = 'utf8';
    return _this2;
  }

  /**
   * Sets a header
   *
   * @param {String|Object} key or map of headers
   * @param {String} [value]
   * @returns {Request}
   */


  _createClass(Request, [{
    key: 'set',
    value: function set(key, value) {
      if ((0, _utils.isObject)(key)) {
        for (var headerName in key) {
          this.set(headerName, key[headerName]);
        }
      } else if (typeof value !== 'undefined') {
        this.headers[key] = value;
      }

      return this;
    }

    /**
     * Which kind of tags this request affects.
     * Used for cache validation.
     * Non GET requests with defined tags, will clean all related to these tags caches
     *
     * @param {Array.<String>} tags
     * @returns {Request}
     */

  }, {
    key: 'cacheTags',
    value: function cacheTags() {
      for (var _len = arguments.length, tags = Array(_len), _key = 0; _key < _len; _key++) {
        tags[_key] = arguments[_key];
      }

      this.tags = tags;

      return this;
    }

    /**
     * @param {Object} queryParams
     * @returns {Request}
     */

  }, {
    key: 'query',
    value: function query(queryParams) {
      _extends(this.queryParams, queryParams);

      return this;
    }
  }, {
    key: 'form',
    value: function form(_form) {
      var _this3 = this;

      if (_form) {
        var _FormData = module.exports.FormData;

        if (_form instanceof _FormData) {
          this.body = _form;
        } else {
          (function () {
            var formData = new _FormData();

            var _loop = function _loop(formKey) {
              if (formKey) {
                (0, _utils.castArray)(_form[formKey]).forEach(function (formValue) {
                  if (formValue && formValue.hasOwnProperty('value') && formValue.hasOwnProperty('options')) {
                    formData.append(formKey, formValue.value, formValue.options);
                  } else {
                    formData.append(formKey, formValue);
                  }
                });
              }
            };

            for (var formKey in _form) {
              _loop(formKey);
            }

            _this3.body = formData;
          })();
        }
      }

      return this;
    }

    /**
     * Should we cache or use cached result
     *
     * @param {Number} ttl Time to live for cached response. 15 seconds by default
     * @returns {Request}
     */

  }, {
    key: 'useCache',
    value: function useCache() {
      var ttl = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 15000;

      this.cacheTTL = ttl;

      return this;
    }

    /**
     * Reset cache if passed TRUE and tags has been specified before
     *
     * @param {Boolean} reset - flag to reset cache or not
     * @returns {Request}
     */

  }, {
    key: 'resetCache',
    value: function resetCache(reset) {
      if (reset && this.tags) {
        cache.deleteByTags(this.tags);
      }

      return this;
    }

    /**
     * Shortcut for req.set('Content-Type', value)
     *
     * @param {String} contentType
     * @returns {Request}
     */

  }, {
    key: 'type',
    value: function type(contentType) {
      this.set(CONTENT_TYPE_HEADER, contentType);

      return this;
    }

    /**
     * Should we unwrap the response and return only body. true by default
     * @param {Boolean} unwrap
     * @returns {Request}
     */

  }, {
    key: 'unwrapBody',
    value: function unwrapBody(unwrap) {
      this.unwrap = unwrap;

      return this;
    }

    /**
     * set encoding to response
     * works only for Node js
     *
     * @param {String} encoding
     * @returns {Request}
     */

  }, {
    key: 'setEncoding',
    value: function setEncoding(encoding) {
      this.encoding = encoding;

      return this;
    }

    /**
     * Sends the requst
     *
     * @param {Object} body
     * @returns {Promise}
     */

  }, {
    key: 'send',
    value: function send(body) {
      var _this4 = this;

      this.emit(REQUEST_EVENT, this);

      var path = this.path;
      var queryString = qs.stringify(this.queryParams);

      if (queryString) {
        path += '?' + queryString;
      }

      if (this.cacheTTL) {
        var cached = cache.get(path);

        if (cached !== undefined) {
          return Promise.resolve(cached);
        }
      }

      var type = this.headers[CONTENT_TYPE_HEADER];

      if (!type && (0, _utils.isObject)(body) && !(0, _utils.isFormData)(body)) {
        this.type('application/json');
      }

      if (body) {
        var isJSON = this.headers[CONTENT_TYPE_HEADER] === 'application/json';

        body = isJSON && typeof body !== 'string' ? JSON.stringify(body) : body;
      }

      var unwrapBody = function unwrapBody(res) {
        return _this4.unwrap ? res.body : res;
      };

      /**
       * Caches the response if required
       */
      var cacheResponse = function cacheResponse(res) {
        if (_this4.cacheTTL) {
          cache.set(path, res, _this4.tags, _this4.cacheTTL);
        }

        return res;
      };

      /**
       * Deletes all relevant to req.cacheTags keys from the cache if this request method is not GET
       */
      var flushCache = function flushCache(res) {
        if (_this4.tags && _this4.method !== 'get') {
          cache.deleteByTags(_this4.tags);
        }

        return res;
      };

      if (Request.verbose) {
        console.log(this.method.toUpperCase(), decodeURIComponent(path), body, this.headers);
      }

      var request = Request.send(path, this.method.toUpperCase(), this.headers, body, this.encoding).then(parseBody).then(checkStatus).then(unwrapBody).then(cacheResponse).then(flushCache);

      request.then(function (result) {
        _this4.emit(RESPONSE_EVENT, result);
        _this4.emit(DONE_EVENT, null, result);
      }).catch(function (error) {
        _this4.emit(ERROR_EVENT, error);
        _this4.emit(DONE_EVENT, error);
      });

      return request;
    }

    /**
     * If you are too lazy to use method 'send', don't use it and stay cool :)
     *
     * @param {Function} successHandler
     * @param {Function} errorHandler
     * @returns {Promise}
     */

  }, {
    key: 'then',
    value: function then(successHandler, errorHandler) {
      this.promise = this.promise || this.send(this.body);

      return this.promise.then(successHandler, errorHandler);
    }

    /**
     * @param {Function} errorHandler
     * @returns {Promise}
     */

  }, {
    key: 'catch',
    value: function _catch(errorHandler) {
      this.promise = this.promise || this.send(this.body);

      return this.promise.catch(errorHandler);
    }
  }]);

  return Request;
}(_eventEmitter2.default);

Object.defineProperty(Request, 'FormData', {
  get: function get() {
    return typeof FormData !== 'undefined' ? FormData : __webpack_require__(10);
  }
});

Request.XMLHttpRequest = typeof XMLHttpRequest !== 'undefined' ? XMLHttpRequest : undefined;

Request.send = function (path, method, headers, body, encoding) {
  var sender = typeof Request.XMLHttpRequest !== 'undefined' ? sendXmlHttpRequest : sendNodeAPIRequest;

  return sender(path, method, headers, body, encoding);
};

Request.verbose = false;
Request.methods = ['get', 'post', 'put', 'patch', 'delete'];

Request.methods.forEach(function (method) {
  Request[method] = function (path, body) {
    return new Request(path, method, body);
  };
});

module.exports = Request;

/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var DEFAULT_TTL = 30000; // 30 sec

/**
 * @typedef {Object} CacheItem
 * @property {*} value
 * @property {Array.<RegExp|String>} tags
 * @property {Number} ttl
 */

/**
 * @param {*} value
 * @param {Array.<RegExp|String>}tags
 * @param {Number} ttl
 * @returns {CacheItem}
 */
var cacheItem = function cacheItem(value, tags, ttl) {
  return { value: value, tags: tags, ttl: ttl };
};

var currentTime = function currentTime() {
  return new Date().getTime();
};

/**
 * Returns true if tag A matches tag B :
 *  - if they are non-strictly equal
 *  - if one of them is Regexp matching the opposite
 *
 * @param {String|RegExp} a
 * @param {String|RegExp} b
 * @returns {Boolean}
 */
var tagsMatches = function tagsMatches(a, b) {
  var result = a == b; // eslint-disable-line

  if (!result && a instanceof RegExp) {
    result = a.test(b);
  }

  if (!result && b instanceof RegExp) {
    result = b.test(a);
  }

  return result;
};

/**
 * Returns true if any of A tags matches any of B tags
 *
 * @param {Array.<String|RegExp>} a
 * @param {Array.<String|RegExp>} b
 * @returns {Boolean}
 */
var tagsContainMatches = function tagsContainMatches(a, b) {
  return !!a.find(function (aTag) {
    return b.find(function (bTag) {
      return tagsMatches(aTag, bTag);
    });
  });
};

/**
 * A Cache with TTL and optional tags for the keys
 * Makes it possible to assign multiple tags for a key and delete keys by tags
 * Optionally it starts flushing timer which cleans all outdated keys
 */

var Cache = function () {

  /**
   * @param {Number?} flushInterval
   */
  function Cache(flushInterval) {
    _classCallCheck(this, Cache);

    this.flushInterval = flushInterval;

    /**
     * @type {Map.<String, CacheItem>}
     */
    this.map = new Map();
  }

  /**
   * @param {String} key
   * @returns {*}
   */


  _createClass(Cache, [{
    key: "get",
    value: function get(key) {
      var cacheItem = this.map.get(key);

      if (cacheItem) {
        if (cacheItem.ttl > currentTime()) {
          return cacheItem.value;
        } else {
          this.map.delete(key);
        }
      }
    }

    /**
     * @param {String} key
     * @param {*} value
     * @param {Array.<RegExp|String>=} tags
     * @param {Number=} ttl
     */

  }, {
    key: "set",
    value: function set(key, value, tags) {
      var ttl = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : DEFAULT_TTL;

      this.map.set(key, cacheItem(value, tags, currentTime() + ttl));

      if (this.flushInterval && !this.flushTimer) {
        this.flushTimer = setInterval(this.flush.bind(this), this.flushInterval);

        if (this.flushTimer.unref) {
          this.flushTimer.unref();
        }
      }
    }

    /**
     * @param {String} key
     */

  }, {
    key: "delete",
    value: function _delete(key) {
      this.map.delete(key);
    }

    /**
     * @param {Array.<String>} tags
     */

  }, {
    key: "deleteByTags",
    value: function deleteByTags(tags) {
      var _iteratorNormalCompletion = true;
      var _didIteratorError = false;
      var _iteratorError = undefined;

      try {
        for (var _iterator = this.map[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var _step$value = _slicedToArray(_step.value, 2),
              key = _step$value[0],
              value = _step$value[1];

          if (value.tags && tagsContainMatches(tags, value.tags)) {
            this.delete(key);
          }
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }
    }

    /**
     * Deletes all outdated keys
     */

  }, {
    key: "flush",
    value: function flush() {
      var now = currentTime();

      var _iteratorNormalCompletion2 = true;
      var _didIteratorError2 = false;
      var _iteratorError2 = undefined;

      try {
        for (var _iterator2 = this.map[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
          var _step2$value = _slicedToArray(_step2.value, 2),
              key = _step2$value[0],
              value = _step2$value[1];

          if (value.ttl < now) {
            this.delete(key);
          }
        }
      } catch (err) {
        _didIteratorError2 = true;
        _iteratorError2 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion2 && _iterator2.return) {
            _iterator2.return();
          }
        } finally {
          if (_didIteratorError2) {
            throw _iteratorError2;
          }
        }
      }
    }
  }]);

  return Cache;
}();

exports.default = Cache;

/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var EventEmitter = function () {
  function EventEmitter() {
    _classCallCheck(this, EventEmitter);

    this.events = {};
  }

  _createClass(EventEmitter, [{
    key: "on",
    value: function on(eventName, callback) {
      this.events[eventName] = this.events[eventName] || [];
      this.events[eventName].push(callback);

      return this;
    }
  }, {
    key: "off",
    value: function off(eventName, callback) {
      if (!eventName) {
        this.events = {};
      } else if (this.events[eventName]) {
        if (callback) {
          this.events[eventName] = this.events[eventName].filter(function (c) {
            return c !== callback;
          });
        } else {
          delete this.events[eventName];
        }
      }

      return this;
    }
  }, {
    key: "emit",
    value: function emit(eventName) {
      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        args[_key - 1] = arguments[_key];
      }

      if (this.events[eventName]) {
        this.events[eventName].forEach(function (callback) {
          return callback.apply(undefined, args);
        });
      }
    }
  }]);

  return EventEmitter;
}();

exports.default = EventEmitter;

/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.stringify = undefined;

var _utils = __webpack_require__(0);

/**
 * Produces a URL query string from a given obj by iterating through the object's "own properties".
 * @param {Object} obj
 * @returns {string}
 */
var stringify = exports.stringify = function stringify(obj) {
  var tokens = [];

  Object.keys(obj).forEach(function (key) {
    var value = obj[key];

    if (value !== undefined) {
      (0, _utils.castArray)(value).forEach(function (value) {
        tokens.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));
      });
    }
  });

  return tokens.join('&');
};

/***/ }),
/* 6 */
/***/ (function(module, exports) {

throw new Error('This Backendless JS SDK assembly is not intended for Node.js environment. You should use "lib" folder modules instead. For any questions please contact as at http://support.backendless.com/')

/***/ }),
/* 7 */
/***/ (function(module, exports) {

throw new Error('This Backendless JS SDK assembly is not intended for Node.js environment. You should use "lib" folder modules instead. For any questions please contact as at http://support.backendless.com/')

/***/ }),
/* 8 */
/***/ (function(module, exports) {

throw new Error('This Backendless JS SDK assembly is not intended for Node.js environment. You should use "lib" folder modules instead. For any questions please contact as at http://support.backendless.com/')

/***/ }),
/* 9 */
/***/ (function(module, exports) {

throw new Error('This Backendless JS SDK assembly is not intended for Node.js environment. You should use "lib" folder modules instead. For any questions please contact as at http://support.backendless.com/')

/***/ }),
/* 10 */
/***/ (function(module, exports) {

throw new Error('This Backendless JS SDK assembly is not intended for Node.js environment. You should use "lib" folder modules instead. For any questions please contact as at http://support.backendless.com/')

/***/ })
/******/ ]);
});
//# sourceMappingURL=backendless-request.js.map

/***/ }),

/***/ "./node_modules/backendless-rt-client/dist/backendless-rt-client.js":
/*!**************************************************************************!*\
  !*** ./node_modules/backendless-rt-client/dist/backendless-rt-client.js ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*
 * ********************************************************************************************************************
 *  Backendless RT Client for JavaScript. Version: 0.0.22
 *
 *  Copyright 2012-2018 BACKENDLESS.COM. All Rights Reserved.
 *
 *  NOTICE: All information contained herein is, and remains the property of Backendless.com and its suppliers,
 *  if any. The intellectual and technical concepts contained herein are proprietary to Backendless.com and its
 *  suppliers and may be covered by U.S. and Foreign Patents, patents in process, and are protected by trade secret
 *  or copyright law. Dissemination of this information or reproduction of this material is strictly forbidden
 *  unless prior written permission is obtained from Backendless.com.
 * ********************************************************************************************************************
 */
(function webpackUniversalModuleDefinition(root, factory) {
	if(true)
		module.exports = factory();
	else {}
})(typeof self !== 'undefined' ? self : this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 22);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || Function("return this")() || (1,eval)("this");
} catch(e) {
	// This works if the window reference is available
	if(typeof window === "object")
		g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(process) {/**
 * This is the web browser implementation of `debug()`.
 *
 * Expose `debug()` as the module.
 */

exports = module.exports = __webpack_require__(32);
exports.log = log;
exports.formatArgs = formatArgs;
exports.save = save;
exports.load = load;
exports.useColors = useColors;
exports.storage = 'undefined' != typeof chrome
               && 'undefined' != typeof chrome.storage
                  ? chrome.storage.local
                  : localstorage();

/**
 * Colors.
 */

exports.colors = [
  'lightseagreen',
  'forestgreen',
  'goldenrod',
  'dodgerblue',
  'darkorchid',
  'crimson'
];

/**
 * Currently only WebKit-based Web Inspectors, Firefox >= v31,
 * and the Firebug extension (any Firefox version) are known
 * to support "%c" CSS customizations.
 *
 * TODO: add a `localStorage` variable to explicitly enable/disable colors
 */

function useColors() {
  // NB: In an Electron preload script, document will be defined but not fully
  // initialized. Since we know we're in Chrome, we'll just detect this case
  // explicitly
  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {
    return true;
  }

  // is webkit? http://stackoverflow.com/a/16459606/376773
  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632
  return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||
    // is firebug? http://stackoverflow.com/a/398120/376773
    (typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||
    // is firefox >= v31?
    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages
    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||
    // double check webkit in userAgent just in case we are in a worker
    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/));
}

/**
 * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.
 */

exports.formatters.j = function(v) {
  try {
    return JSON.stringify(v);
  } catch (err) {
    return '[UnexpectedJSONParseError]: ' + err.message;
  }
};


/**
 * Colorize log arguments if enabled.
 *
 * @api public
 */

function formatArgs(args) {
  var useColors = this.useColors;

  args[0] = (useColors ? '%c' : '')
    + this.namespace
    + (useColors ? ' %c' : ' ')
    + args[0]
    + (useColors ? '%c ' : ' ')
    + '+' + exports.humanize(this.diff);

  if (!useColors) return;

  var c = 'color: ' + this.color;
  args.splice(1, 0, c, 'color: inherit')

  // the final "%c" is somewhat tricky, because there could be other
  // arguments passed either before or after the %c, so we need to
  // figure out the correct index to insert the CSS into
  var index = 0;
  var lastC = 0;
  args[0].replace(/%[a-zA-Z%]/g, function(match) {
    if ('%%' === match) return;
    index++;
    if ('%c' === match) {
      // we only are interested in the *last* %c
      // (the user may have provided their own)
      lastC = index;
    }
  });

  args.splice(lastC, 0, c);
}

/**
 * Invokes `console.log()` when available.
 * No-op when `console.log` is not a "function".
 *
 * @api public
 */

function log() {
  // this hackery is required for IE8/9, where
  // the `console.log` function doesn't have 'apply'
  return 'object' === typeof console
    && console.log
    && Function.prototype.apply.call(console.log, console, arguments);
}

/**
 * Save `namespaces`.
 *
 * @param {String} namespaces
 * @api private
 */

function save(namespaces) {
  try {
    if (null == namespaces) {
      exports.storage.removeItem('debug');
    } else {
      exports.storage.debug = namespaces;
    }
  } catch(e) {}
}

/**
 * Load `namespaces`.
 *
 * @return {String} returns the previously persisted debug modes
 * @api private
 */

function load() {
  var r;
  try {
    r = exports.storage.debug;
  } catch(e) {}

  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG
  if (!r && typeof process !== 'undefined' && 'env' in process) {
    r = process.env.DEBUG;
  }

  return r;
}

/**
 * Enable namespaces listed in `localStorage.debug` initially.
 */

exports.enable(load());

/**
 * Localstorage attempts to return the localstorage.
 *
 * This is necessary because safari throws
 * when a user disables cookies/localstorage
 * and you attempt to access it.
 *
 * @return {LocalStorage}
 * @api private
 */

function localstorage() {
  try {
    return window.localStorage;
  } catch (e) {}
}

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(31)))

/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {


/**
 * Expose `Emitter`.
 */

if (true) {
  module.exports = Emitter;
}

/**
 * Initialize a new `Emitter`.
 *
 * @api public
 */

function Emitter(obj) {
  if (obj) return mixin(obj);
};

/**
 * Mixin the emitter properties.
 *
 * @param {Object} obj
 * @return {Object}
 * @api private
 */

function mixin(obj) {
  for (var key in Emitter.prototype) {
    obj[key] = Emitter.prototype[key];
  }
  return obj;
}

/**
 * Listen on the given `event` with `fn`.
 *
 * @param {String} event
 * @param {Function} fn
 * @return {Emitter}
 * @api public
 */

Emitter.prototype.on =
Emitter.prototype.addEventListener = function(event, fn){
  this._callbacks = this._callbacks || {};
  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])
    .push(fn);
  return this;
};

/**
 * Adds an `event` listener that will be invoked a single
 * time then automatically removed.
 *
 * @param {String} event
 * @param {Function} fn
 * @return {Emitter}
 * @api public
 */

Emitter.prototype.once = function(event, fn){
  function on() {
    this.off(event, on);
    fn.apply(this, arguments);
  }

  on.fn = fn;
  this.on(event, on);
  return this;
};

/**
 * Remove the given callback for `event` or all
 * registered callbacks.
 *
 * @param {String} event
 * @param {Function} fn
 * @return {Emitter}
 * @api public
 */

Emitter.prototype.off =
Emitter.prototype.removeListener =
Emitter.prototype.removeAllListeners =
Emitter.prototype.removeEventListener = function(event, fn){
  this._callbacks = this._callbacks || {};

  // all
  if (0 == arguments.length) {
    this._callbacks = {};
    return this;
  }

  // specific event
  var callbacks = this._callbacks['$' + event];
  if (!callbacks) return this;

  // remove all handlers
  if (1 == arguments.length) {
    delete this._callbacks['$' + event];
    return this;
  }

  // remove specific handler
  var cb;
  for (var i = 0; i < callbacks.length; i++) {
    cb = callbacks[i];
    if (cb === fn || cb.fn === fn) {
      callbacks.splice(i, 1);
      break;
    }
  }
  return this;
};

/**
 * Emit `event` with the given args.
 *
 * @param {String} event
 * @param {Mixed} ...
 * @return {Emitter}
 */

Emitter.prototype.emit = function(event){
  this._callbacks = this._callbacks || {};
  var args = [].slice.call(arguments, 1)
    , callbacks = this._callbacks['$' + event];

  if (callbacks) {
    callbacks = callbacks.slice(0);
    for (var i = 0, len = callbacks.length; i < len; ++i) {
      callbacks[i].apply(this, args);
    }
  }

  return this;
};

/**
 * Return array of callbacks for `event`.
 *
 * @param {String} event
 * @return {Array}
 * @api public
 */

Emitter.prototype.listeners = function(event){
  this._callbacks = this._callbacks || {};
  return this._callbacks['$' + event] || [];
};

/**
 * Check if this emitter has `event` handlers.
 *
 * @param {String} event
 * @return {Boolean}
 * @api public
 */

Emitter.prototype.hasListeners = function(event){
  return !! this.listeners(event).length;
};


/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {/**
 * Module dependencies.
 */

var keys = __webpack_require__(38);
var hasBinary = __webpack_require__(39);
var sliceBuffer = __webpack_require__(41);
var after = __webpack_require__(42);
var utf8 = __webpack_require__(43);

var base64encoder;
if (global && global.ArrayBuffer) {
  base64encoder = __webpack_require__(45);
}

/**
 * Check if we are running an android browser. That requires us to use
 * ArrayBuffer with polling transports...
 *
 * http://ghinda.net/jpeg-blob-ajax-android/
 */

var isAndroid = typeof navigator !== 'undefined' && /Android/i.test(navigator.userAgent);

/**
 * Check if we are running in PhantomJS.
 * Uploading a Blob with PhantomJS does not work correctly, as reported here:
 * https://github.com/ariya/phantomjs/issues/11395
 * @type boolean
 */
var isPhantomJS = typeof navigator !== 'undefined' && /PhantomJS/i.test(navigator.userAgent);

/**
 * When true, avoids using Blobs to encode payloads.
 * @type boolean
 */
var dontSendBlobs = isAndroid || isPhantomJS;

/**
 * Current protocol version.
 */

exports.protocol = 3;

/**
 * Packet types.
 */

var packets = exports.packets = {
    open:     0    // non-ws
  , close:    1    // non-ws
  , ping:     2
  , pong:     3
  , message:  4
  , upgrade:  5
  , noop:     6
};

var packetslist = keys(packets);

/**
 * Premade error packet.
 */

var err = { type: 'error', data: 'parser error' };

/**
 * Create a blob api even for blob builder when vendor prefixes exist
 */

var Blob = __webpack_require__(46);

/**
 * Encodes a packet.
 *
 *     <packet type id> [ <data> ]
 *
 * Example:
 *
 *     5hello world
 *     3
 *     4
 *
 * Binary is encoded in an identical principle
 *
 * @api private
 */

exports.encodePacket = function (packet, supportsBinary, utf8encode, callback) {
  if (typeof supportsBinary === 'function') {
    callback = supportsBinary;
    supportsBinary = false;
  }

  if (typeof utf8encode === 'function') {
    callback = utf8encode;
    utf8encode = null;
  }

  var data = (packet.data === undefined)
    ? undefined
    : packet.data.buffer || packet.data;

  if (global.ArrayBuffer && data instanceof ArrayBuffer) {
    return encodeArrayBuffer(packet, supportsBinary, callback);
  } else if (Blob && data instanceof global.Blob) {
    return encodeBlob(packet, supportsBinary, callback);
  }

  // might be an object with { base64: true, data: dataAsBase64String }
  if (data && data.base64) {
    return encodeBase64Object(packet, callback);
  }

  // Sending data as a utf-8 string
  var encoded = packets[packet.type];

  // data fragment is optional
  if (undefined !== packet.data) {
    encoded += utf8encode ? utf8.encode(String(packet.data), { strict: false }) : String(packet.data);
  }

  return callback('' + encoded);

};

function encodeBase64Object(packet, callback) {
  // packet data is an object { base64: true, data: dataAsBase64String }
  var message = 'b' + exports.packets[packet.type] + packet.data.data;
  return callback(message);
}

/**
 * Encode packet helpers for binary types
 */

function encodeArrayBuffer(packet, supportsBinary, callback) {
  if (!supportsBinary) {
    return exports.encodeBase64Packet(packet, callback);
  }

  var data = packet.data;
  var contentArray = new Uint8Array(data);
  var resultBuffer = new Uint8Array(1 + data.byteLength);

  resultBuffer[0] = packets[packet.type];
  for (var i = 0; i < contentArray.length; i++) {
    resultBuffer[i+1] = contentArray[i];
  }

  return callback(resultBuffer.buffer);
}

function encodeBlobAsArrayBuffer(packet, supportsBinary, callback) {
  if (!supportsBinary) {
    return exports.encodeBase64Packet(packet, callback);
  }

  var fr = new FileReader();
  fr.onload = function() {
    packet.data = fr.result;
    exports.encodePacket(packet, supportsBinary, true, callback);
  };
  return fr.readAsArrayBuffer(packet.data);
}

function encodeBlob(packet, supportsBinary, callback) {
  if (!supportsBinary) {
    return exports.encodeBase64Packet(packet, callback);
  }

  if (dontSendBlobs) {
    return encodeBlobAsArrayBuffer(packet, supportsBinary, callback);
  }

  var length = new Uint8Array(1);
  length[0] = packets[packet.type];
  var blob = new Blob([length.buffer, packet.data]);

  return callback(blob);
}

/**
 * Encodes a packet with binary data in a base64 string
 *
 * @param {Object} packet, has `type` and `data`
 * @return {String} base64 encoded message
 */

exports.encodeBase64Packet = function(packet, callback) {
  var message = 'b' + exports.packets[packet.type];
  if (Blob && packet.data instanceof global.Blob) {
    var fr = new FileReader();
    fr.onload = function() {
      var b64 = fr.result.split(',')[1];
      callback(message + b64);
    };
    return fr.readAsDataURL(packet.data);
  }

  var b64data;
  try {
    b64data = String.fromCharCode.apply(null, new Uint8Array(packet.data));
  } catch (e) {
    // iPhone Safari doesn't let you apply with typed arrays
    var typed = new Uint8Array(packet.data);
    var basic = new Array(typed.length);
    for (var i = 0; i < typed.length; i++) {
      basic[i] = typed[i];
    }
    b64data = String.fromCharCode.apply(null, basic);
  }
  message += global.btoa(b64data);
  return callback(message);
};

/**
 * Decodes a packet. Changes format to Blob if requested.
 *
 * @return {Object} with `type` and `data` (if any)
 * @api private
 */

exports.decodePacket = function (data, binaryType, utf8decode) {
  if (data === undefined) {
    return err;
  }
  // String data
  if (typeof data === 'string') {
    if (data.charAt(0) === 'b') {
      return exports.decodeBase64Packet(data.substr(1), binaryType);
    }

    if (utf8decode) {
      data = tryDecode(data);
      if (data === false) {
        return err;
      }
    }
    var type = data.charAt(0);

    if (Number(type) != type || !packetslist[type]) {
      return err;
    }

    if (data.length > 1) {
      return { type: packetslist[type], data: data.substring(1) };
    } else {
      return { type: packetslist[type] };
    }
  }

  var asArray = new Uint8Array(data);
  var type = asArray[0];
  var rest = sliceBuffer(data, 1);
  if (Blob && binaryType === 'blob') {
    rest = new Blob([rest]);
  }
  return { type: packetslist[type], data: rest };
};

function tryDecode(data) {
  try {
    data = utf8.decode(data, { strict: false });
  } catch (e) {
    return false;
  }
  return data;
}

/**
 * Decodes a packet encoded in a base64 string
 *
 * @param {String} base64 encoded message
 * @return {Object} with `type` and `data` (if any)
 */

exports.decodeBase64Packet = function(msg, binaryType) {
  var type = packetslist[msg.charAt(0)];
  if (!base64encoder) {
    return { type: type, data: { base64: true, data: msg.substr(1) } };
  }

  var data = base64encoder.decode(msg.substr(1));

  if (binaryType === 'blob' && Blob) {
    data = new Blob([data]);
  }

  return { type: type, data: data };
};

/**
 * Encodes multiple messages (payload).
 *
 *     <length>:data
 *
 * Example:
 *
 *     11:hello world2:hi
 *
 * If any contents are binary, they will be encoded as base64 strings. Base64
 * encoded strings are marked with a b before the length specifier
 *
 * @param {Array} packets
 * @api private
 */

exports.encodePayload = function (packets, supportsBinary, callback) {
  if (typeof supportsBinary === 'function') {
    callback = supportsBinary;
    supportsBinary = null;
  }

  var isBinary = hasBinary(packets);

  if (supportsBinary && isBinary) {
    if (Blob && !dontSendBlobs) {
      return exports.encodePayloadAsBlob(packets, callback);
    }

    return exports.encodePayloadAsArrayBuffer(packets, callback);
  }

  if (!packets.length) {
    return callback('0:');
  }

  function setLengthHeader(message) {
    return message.length + ':' + message;
  }

  function encodeOne(packet, doneCallback) {
    exports.encodePacket(packet, !isBinary ? false : supportsBinary, false, function(message) {
      doneCallback(null, setLengthHeader(message));
    });
  }

  map(packets, encodeOne, function(err, results) {
    return callback(results.join(''));
  });
};

/**
 * Async array map using after
 */

function map(ary, each, done) {
  var result = new Array(ary.length);
  var next = after(ary.length, done);

  var eachWithIndex = function(i, el, cb) {
    each(el, function(error, msg) {
      result[i] = msg;
      cb(error, result);
    });
  };

  for (var i = 0; i < ary.length; i++) {
    eachWithIndex(i, ary[i], next);
  }
}

/*
 * Decodes data when a payload is maybe expected. Possible binary contents are
 * decoded from their base64 representation
 *
 * @param {String} data, callback method
 * @api public
 */

exports.decodePayload = function (data, binaryType, callback) {
  if (typeof data !== 'string') {
    return exports.decodePayloadAsBinary(data, binaryType, callback);
  }

  if (typeof binaryType === 'function') {
    callback = binaryType;
    binaryType = null;
  }

  var packet;
  if (data === '') {
    // parser error - ignoring payload
    return callback(err, 0, 1);
  }

  var length = '', n, msg;

  for (var i = 0, l = data.length; i < l; i++) {
    var chr = data.charAt(i);

    if (chr !== ':') {
      length += chr;
      continue;
    }

    if (length === '' || (length != (n = Number(length)))) {
      // parser error - ignoring payload
      return callback(err, 0, 1);
    }

    msg = data.substr(i + 1, n);

    if (length != msg.length) {
      // parser error - ignoring payload
      return callback(err, 0, 1);
    }

    if (msg.length) {
      packet = exports.decodePacket(msg, binaryType, false);

      if (err.type === packet.type && err.data === packet.data) {
        // parser error in individual packet - ignoring payload
        return callback(err, 0, 1);
      }

      var ret = callback(packet, i + n, l);
      if (false === ret) return;
    }

    // advance cursor
    i += n;
    length = '';
  }

  if (length !== '') {
    // parser error - ignoring payload
    return callback(err, 0, 1);
  }

};

/**
 * Encodes multiple messages (payload) as binary.
 *
 * <1 = binary, 0 = string><number from 0-9><number from 0-9>[...]<number
 * 255><data>
 *
 * Example:
 * 1 3 255 1 2 3, if the binary contents are interpreted as 8 bit integers
 *
 * @param {Array} packets
 * @return {ArrayBuffer} encoded payload
 * @api private
 */

exports.encodePayloadAsArrayBuffer = function(packets, callback) {
  if (!packets.length) {
    return callback(new ArrayBuffer(0));
  }

  function encodeOne(packet, doneCallback) {
    exports.encodePacket(packet, true, true, function(data) {
      return doneCallback(null, data);
    });
  }

  map(packets, encodeOne, function(err, encodedPackets) {
    var totalLength = encodedPackets.reduce(function(acc, p) {
      var len;
      if (typeof p === 'string'){
        len = p.length;
      } else {
        len = p.byteLength;
      }
      return acc + len.toString().length + len + 2; // string/binary identifier + separator = 2
    }, 0);

    var resultArray = new Uint8Array(totalLength);

    var bufferIndex = 0;
    encodedPackets.forEach(function(p) {
      var isString = typeof p === 'string';
      var ab = p;
      if (isString) {
        var view = new Uint8Array(p.length);
        for (var i = 0; i < p.length; i++) {
          view[i] = p.charCodeAt(i);
        }
        ab = view.buffer;
      }

      if (isString) { // not true binary
        resultArray[bufferIndex++] = 0;
      } else { // true binary
        resultArray[bufferIndex++] = 1;
      }

      var lenStr = ab.byteLength.toString();
      for (var i = 0; i < lenStr.length; i++) {
        resultArray[bufferIndex++] = parseInt(lenStr[i]);
      }
      resultArray[bufferIndex++] = 255;

      var view = new Uint8Array(ab);
      for (var i = 0; i < view.length; i++) {
        resultArray[bufferIndex++] = view[i];
      }
    });

    return callback(resultArray.buffer);
  });
};

/**
 * Encode as Blob
 */

exports.encodePayloadAsBlob = function(packets, callback) {
  function encodeOne(packet, doneCallback) {
    exports.encodePacket(packet, true, true, function(encoded) {
      var binaryIdentifier = new Uint8Array(1);
      binaryIdentifier[0] = 1;
      if (typeof encoded === 'string') {
        var view = new Uint8Array(encoded.length);
        for (var i = 0; i < encoded.length; i++) {
          view[i] = encoded.charCodeAt(i);
        }
        encoded = view.buffer;
        binaryIdentifier[0] = 0;
      }

      var len = (encoded instanceof ArrayBuffer)
        ? encoded.byteLength
        : encoded.size;

      var lenStr = len.toString();
      var lengthAry = new Uint8Array(lenStr.length + 1);
      for (var i = 0; i < lenStr.length; i++) {
        lengthAry[i] = parseInt(lenStr[i]);
      }
      lengthAry[lenStr.length] = 255;

      if (Blob) {
        var blob = new Blob([binaryIdentifier.buffer, lengthAry.buffer, encoded]);
        doneCallback(null, blob);
      }
    });
  }

  map(packets, encodeOne, function(err, results) {
    return callback(new Blob(results));
  });
};

/*
 * Decodes data when a payload is maybe expected. Strings are decoded by
 * interpreting each byte as a key code for entries marked to start with 0. See
 * description of encodePayloadAsBinary
 *
 * @param {ArrayBuffer} data, callback method
 * @api public
 */

exports.decodePayloadAsBinary = function (data, binaryType, callback) {
  if (typeof binaryType === 'function') {
    callback = binaryType;
    binaryType = null;
  }

  var bufferTail = data;
  var buffers = [];

  while (bufferTail.byteLength > 0) {
    var tailArray = new Uint8Array(bufferTail);
    var isString = tailArray[0] === 0;
    var msgLength = '';

    for (var i = 1; ; i++) {
      if (tailArray[i] === 255) break;

      // 310 = char length of Number.MAX_VALUE
      if (msgLength.length > 310) {
        return callback(err, 0, 1);
      }

      msgLength += tailArray[i];
    }

    bufferTail = sliceBuffer(bufferTail, 2 + msgLength.length);
    msgLength = parseInt(msgLength);

    var msg = sliceBuffer(bufferTail, 0, msgLength);
    if (isString) {
      try {
        msg = String.fromCharCode.apply(null, new Uint8Array(msg));
      } catch (e) {
        // iPhone Safari doesn't let you apply to typed arrays
        var typed = new Uint8Array(msg);
        msg = '';
        for (var i = 0; i < typed.length; i++) {
          msg += String.fromCharCode(typed[i]);
        }
      }
    }

    buffers.push(msg);
    bufferTail = sliceBuffer(bufferTail, msgLength);
  }

  var total = buffers.length;
  buffers.forEach(function(buffer, i) {
    callback(exports.decodePacket(buffer, binaryType, true), i, total);
  });
};

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
var NativeSocketEvents = exports.NativeSocketEvents = {
  CONNECTING: 'connecting',
  CONNECT: 'connect',
  CONNECT_ERROR: 'connect_error',
  CONNECT_TIMEOUT: 'connect_timeout',
  DISCONNECT: 'disconnect',
  RECONNECT: 'reconnect',
  RECONNECT_ATTEMPT: 'reconnect_attempt',
  RECONNECTING: 'reconnecting',
  RECONNECT_ERROR: 'reconnect_error',
  RECONNECT_FAILED: 'reconnect_failed',
  ERROR: 'error',
  PING: 'ping',
  PONG: 'pong'
};

var RTSocketEvents = exports.RTSocketEvents = {
  SUB_ON: 'SUB_ON',
  SUB_OFF: 'SUB_OFF',
  SUB_RES: 'SUB_RES',
  SUB_READY: 'SUB_READY',

  MET_REQ: 'MET_REQ',
  MET_RES: 'MET_RES'
};

var RTSubscriptionTypes = exports.RTSubscriptionTypes = {
  OBJECTS_CHANGES: 'OBJECTS_CHANGES',

  PUB_SUB_CONNECT: 'PUB_SUB_CONNECT',
  PUB_SUB_MESSAGES: 'PUB_SUB_MESSAGES',
  PUB_SUB_COMMANDS: 'PUB_SUB_COMMANDS',
  PUB_SUB_USERS: 'PUB_SUB_USERS',

  RSO_CONNECT: 'RSO_CONNECT',
  RSO_CHANGES: 'RSO_CHANGES',
  RSO_CLEARED: 'RSO_CLEARED',
  RSO_COMMANDS: 'RSO_COMMANDS',
  RSO_INVOKE: 'RSO_INVOKE',
  RSO_USERS: 'RSO_USERS',

  //-----------------------------------------//
  //----------- FOR CONSOLE ONLY ------------//

  LOGGING_MESSAGES: 'LOGGING_MESSAGES',
  CONSOLE_MESSAGES: 'CONSOLE_MESSAGES',
  DEVELOPER_MESSAGES: 'DEVELOPER_MESSAGES'

  //----------- FOR CONSOLE ONLY ------------//
  //-----------------------------------------//
};

var RTMethodTypes = exports.RTMethodTypes = {
  SET_USER_TOKEN: 'SET_USER_TOKEN',

  RSO_GET: 'RSO_GET',
  RSO_SET: 'RSO_SET',
  RSO_CLEAR: 'RSO_CLEAR',
  RSO_COMMAND: 'RSO_COMMAND',
  RSO_INVOKE: 'RSO_INVOKE',

  PUB_SUB_COMMAND: 'PUB_SUB_COMMAND'
};

/***/ }),
/* 5 */
/***/ (function(module, exports) {

/**
 * Compiles a querystring
 * Returns string representation of the object
 *
 * @param {Object}
 * @api private
 */

exports.encode = function (obj) {
  var str = '';

  for (var i in obj) {
    if (obj.hasOwnProperty(i)) {
      if (str.length) str += '&';
      str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);
    }
  }

  return str;
};

/**
 * Parses a simple querystring into an object
 *
 * @param {String} qs
 * @api private
 */

exports.decode = function(qs){
  var qry = {};
  var pairs = qs.split('&');
  for (var i = 0, l = pairs.length; i < l; i++) {
    var pair = pairs[i].split('=');
    qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);
  }
  return qry;
};


/***/ }),
/* 6 */
/***/ (function(module, exports) {


module.exports = function(a, b){
  var fn = function(){};
  fn.prototype = b.prototype;
  a.prototype = new fn;
  a.prototype.constructor = a;
};

/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/* eslint-disable */

/**
 * Since JS Clients don't use binary data through sockets
 * we do not need to use socket.io-parser module inside the socket.io-client
 *
 * The custom SocketIO Parser is based on both modules:
 *  - socket.io-json-parser
 *  - socket.io-parser
 */

var Emitter = __webpack_require__(2);

exports.protocol = 4;

exports.types = ['CONNECT', 'DISCONNECT', 'EVENT', 'ACK', 'ERROR', 'BINARY_EVENT', 'BINARY_ACK'];

exports.CONNECT = 0;
exports.DISCONNECT = 1;
exports.EVENT = 2;
exports.ACK = 3;
exports.ERROR = 4;
exports.BINARY_EVENT = 5;
exports.BINARY_ACK = 6;

exports.Encoder = Encoder;
exports.Decoder = Decoder;

function Encoder() {}

/**
 * Encode a packet as a single string if non-binary, or as a
 * buffer sequence, depending on packet type.
 *
 * @param {Object} obj - packet object
 * @param {Function} callback - function to handle encodings (likely engine.write)
 * @return Calls callback with Array of encodings
 * @api public
 */

Encoder.prototype.encode = function (obj, callback) {
  callback([encodeAsString(obj)]);
};

/**
 * Encode packet as string.
 *
 * @param {Object} packet
 * @return {String} encoded
 * @api private
 */

function encodeAsString(obj) {

  // first is type
  var str = '' + obj.type;

  // attachments if we have them
  if (exports.BINARY_EVENT === obj.type || exports.BINARY_ACK === obj.type) {
    str += obj.attachments + '-';
  }

  // if we have a namespace other than `/`
  // we append it followed by a comma `,`
  if (obj.nsp && '/' !== obj.nsp) {
    str += obj.nsp + ',';
  }

  // immediately followed by the id
  if (null != obj.id) {
    str += obj.id;
  }

  // json data
  if (null != obj.data) {
    str += JSON.stringify(obj.data);
  }

  return str;
}

function Decoder() {}

Emitter(Decoder.prototype);

/**
 * Decodes an ecoded packet string into packet JSON.
 *
 * @param {String} obj - encoded packet
 * @return {Object} packet
 * @api public
 */

Decoder.prototype.add = function (obj) {
  if (typeof obj === 'string') {
    this.emit('decoded', decodeString(obj));
  } else {
    throw new Error('Unknown type: ' + obj);
  }
};

/**
 * Decode a packet String (JSON data)
 *
 * @param {String} str
 * @return {Object} packet
 * @api private
 */

function decodeString(str) {
  var i = 0;
  // look up type
  var p = {
    type: Number(str.charAt(0))
  };

  if (null == exports.types[p.type]) return error();

  // look up attachments if type binary
  if (exports.BINARY_EVENT === p.type || exports.BINARY_ACK === p.type) {
    var buf = '';
    while (str.charAt(++i) !== '-') {
      buf += str.charAt(i);
      if (i == str.length) break;
    }
    if (buf != Number(buf) || str.charAt(i) !== '-') {
      throw new Error('Illegal attachments');
    }
    p.attachments = Number(buf);
  }

  // look up namespace (if any)
  if ('/' === str.charAt(i + 1)) {
    p.nsp = '';
    while (++i) {
      var c = str.charAt(i);
      if (',' === c) break;
      p.nsp += c;
      if (i === str.length) break;
    }
  } else {
    p.nsp = '/';
  }

  // look up id
  var next = str.charAt(i + 1);
  if ('' !== next && Number(next) == next) {
    p.id = '';
    while (++i) {
      var c = str.charAt(i);
      if (null == c || Number(c) != c) {
        --i;
        break;
      }
      p.id += str.charAt(i);
      if (i === str.length) break;
    }
    p.id = Number(p.id);
  }

  // look up json data
  if (str.charAt(++i)) {
    p = tryParse(p, str.substr(i));
  }

  return p;
}

function tryParse(p, str) {
  try {
    p.data = JSON.parse(str);
  } catch (e) {
    return error();
  }
  return p;
}

/**
 * Deallocates a parser's resources
 *
 * @api public
 */

Decoder.prototype.destroy = function () {};

function error() {
  return {
    type: exports.ERROR,
    data: 'parser error'
  };
}

/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {// browser shim for xmlhttprequest module

var hasCORS = __webpack_require__(36);

module.exports = function (opts) {
  var xdomain = opts.xdomain;

  // scheme must be same when usign XDomainRequest
  // http://blogs.msdn.com/b/ieinternals/archive/2010/05/13/xdomainrequest-restrictions-limitations-and-workarounds.aspx
  var xscheme = opts.xscheme;

  // XDomainRequest has a flow of not sending cookie, therefore it should be disabled as a default.
  // https://github.com/Automattic/engine.io-client/pull/217
  var enablesXDR = opts.enablesXDR;

  // XMLHttpRequest can be disabled on IE
  try {
    if ('undefined' !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {
      return new XMLHttpRequest();
    }
  } catch (e) { }

  // Use XDomainRequest for IE8 if enablesXDR is true
  // because loading bar keeps flashing when using jsonp-polling
  // https://github.com/yujiosaka/socke.io-ie8-loading-example
  try {
    if ('undefined' !== typeof XDomainRequest && !xscheme && enablesXDR) {
      return new XDomainRequest();
    }
  } catch (e) { }

  if (!xdomain) {
    try {
      return new global[['Active'].concat('Object').join('X')]('Microsoft.XMLHTTP');
    } catch (e) { }
  }
};

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * Module dependencies.
 */

var parser = __webpack_require__(3);
var Emitter = __webpack_require__(2);

/**
 * Module exports.
 */

module.exports = Transport;

/**
 * Transport abstract constructor.
 *
 * @param {Object} options.
 * @api private
 */

function Transport (opts) {
  this.path = opts.path;
  this.hostname = opts.hostname;
  this.port = opts.port;
  this.secure = opts.secure;
  this.query = opts.query;
  this.timestampParam = opts.timestampParam;
  this.timestampRequests = opts.timestampRequests;
  this.readyState = '';
  this.agent = opts.agent || false;
  this.socket = opts.socket;
  this.enablesXDR = opts.enablesXDR;

  // SSL options for Node.js client
  this.pfx = opts.pfx;
  this.key = opts.key;
  this.passphrase = opts.passphrase;
  this.cert = opts.cert;
  this.ca = opts.ca;
  this.ciphers = opts.ciphers;
  this.rejectUnauthorized = opts.rejectUnauthorized;
  this.forceNode = opts.forceNode;

  // other options for Node.js client
  this.extraHeaders = opts.extraHeaders;
  this.localAddress = opts.localAddress;
}

/**
 * Mix in `Emitter`.
 */

Emitter(Transport.prototype);

/**
 * Emits an error.
 *
 * @param {String} str
 * @return {Transport} for chaining
 * @api public
 */

Transport.prototype.onError = function (msg, desc) {
  var err = new Error(msg);
  err.type = 'TransportError';
  err.description = desc;
  this.emit('error', err);
  return this;
};

/**
 * Opens the transport.
 *
 * @api public
 */

Transport.prototype.open = function () {
  if ('closed' === this.readyState || '' === this.readyState) {
    this.readyState = 'opening';
    this.doOpen();
  }

  return this;
};

/**
 * Closes the transport.
 *
 * @api private
 */

Transport.prototype.close = function () {
  if ('opening' === this.readyState || 'open' === this.readyState) {
    this.doClose();
    this.onClose();
  }

  return this;
};

/**
 * Sends multiple packets.
 *
 * @param {Array} packets
 * @api private
 */

Transport.prototype.send = function (packets) {
  if ('open' === this.readyState) {
    this.write(packets);
  } else {
    throw new Error('Transport not open');
  }
};

/**
 * Called upon open
 *
 * @api private
 */

Transport.prototype.onOpen = function () {
  this.readyState = 'open';
  this.writable = true;
  this.emit('open');
};

/**
 * Called with data.
 *
 * @param {String} data
 * @api private
 */

Transport.prototype.onData = function (data) {
  var packet = parser.decodePacket(data, this.socket.binaryType);
  this.onPacket(packet);
};

/**
 * Called with a decoded packet.
 */

Transport.prototype.onPacket = function (packet) {
  this.emit('packet', packet);
};

/**
 * Called upon close.
 *
 * @api private
 */

Transport.prototype.onClose = function () {
  this.readyState = 'closed';
  this.emit('close');
};


/***/ }),
/* 10 */
/***/ (function(module, exports) {

(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(true)
		!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	else {}
})(typeof self !== 'undefined' ? self : this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 2);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

/**
 * Casts `value` as an array if it's not one.
 * Equvivalent to lodash/castArray
 */
var castArray = exports.castArray = function castArray(value) {
  return Array.isArray(value) ? value : [value];
};

var isObject = exports.isObject = function isObject(value) {
  return null != value && (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object';
};

var isFormData = exports.isFormData = function isFormData(value) {
  return value && value.constructor && value.constructor.toString().trim().indexOf('function FormData') === 0;
};

var isStream = exports.isStream = function isStream(value) {
  var stream = __webpack_require__(6);

  return value instanceof stream.Stream;
};

/***/ }),
/* 1 */
/***/ (function(module, exports) {

throw new Error('This Backendless JS SDK assembly is not intended for Node.js environment. You should use "lib" folder modules instead. For any questions please contact as at http://support.backendless.com/')

/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _cache = __webpack_require__(3);

var _cache2 = _interopRequireDefault(_cache);

var _eventEmitter = __webpack_require__(4);

var _eventEmitter2 = _interopRequireDefault(_eventEmitter);

var _qs = __webpack_require__(5);

var qs = _interopRequireWildcard(_qs);

var _utils = __webpack_require__(0);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var CONTENT_TYPE_HEADER = 'Content-Type';
var CACHE_FLUSH_INTERVAL = 60000; //60 sec

var cache = new _cache2.default(CACHE_FLUSH_INTERVAL);

var ResponseError = function (_Error) {
  _inherits(ResponseError, _Error);

  function ResponseError(response) {
    _classCallCheck(this, ResponseError);

    var _this = _possibleConstructorReturn(this, (ResponseError.__proto__ || Object.getPrototypeOf(ResponseError)).call(this));

    var error = parseError(response);

    _this.message = error.message || error;
    _this.code = error.code;

    _this.status = response.status;
    _this.headers = response.headers;
    _this.body = response.body;
    return _this;
  }

  return ResponseError;
}(Error);

function parseError(res) {
  if (res.status === 502) {
    return 'No connection with server';
  }

  return res.body || 'Status Code ' + res.status + ' (' + res.statusText + ')';
}

function parseBody(res) {
  try {
    return _extends({}, res, { body: JSON.parse(res.body) });
  } catch (e) {
    return res;
  }
}

function parseHeaders(headersString) {
  var parsed = {};

  if (!headersString) {
    return parsed;
  }

  headersString.split('\n').forEach(function (line) {
    var i = line.indexOf(':');
    var key = line.substr(0, i).trim();
    var val = line.substr(i + 1).trim();

    if (key) {
      parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;
    }
  });

  return parsed;
}

var sendXmlHttpRequest = function sendXmlHttpRequest(path, method, headers, body) {
  return new Promise(function sendRequest(resolve, reject) {
    var request = new Request.XMLHttpRequest();

    request.open(method.toUpperCase(), path, true);

    request.onload = function handleLoadEvent() {
      var headers = parseHeaders(request.getAllResponseHeaders());
      var _request = request,
          status = _request.status,
          statusText = _request.statusText,
          response = _request.response,
          responseText = _request.responseText;

      var body = response || responseText;

      resolve({ status: status, statusText: statusText, headers: headers, body: body });

      request = null;
    };

    request.onerror = function handleErrorEvent() {
      reject(new Error('Network Error'));

      request = null;
    };

    request.ontimeout = function handleTimeout() {
      reject(new Error('Connection aborted due to timeout'));

      request = null;
    };

    Object.keys(headers).forEach(function (key) {
      request.setRequestHeader(key, headers[key]);
    });

    request.send(body);
  });
};

var sendNodeAPIRequest = function sendNodeAPIRequest(path, method, headers, body, encoding) {
  return new Promise(function (resolve, reject) {
    var u = __webpack_require__(7).parse(path);
    var form = (0, _utils.isFormData)(body) && body;

    var https = u.protocol === 'https:';
    var options = {
      host: u.hostname,
      port: u.port || (https ? 443 : 80),
      method: method,
      path: u.path,
      headers: headers
    };

    var _send = function _send() {
      var Buffer = __webpack_require__(1).Buffer;
      var httpClient = __webpack_require__(https ? 8 : 9);

      var req = httpClient.request(options, function (res) {
        var strings = [];
        var buffers = [];
        var bufferLength = 0;
        var body = '';

        var status = res.statusCode,
            statusText = res.statusMessage,
            headers = res.headers;


        res.on('data', function (chunk) {
          if (!Buffer.isBuffer(chunk)) {
            strings.push(chunk);
          } else if (chunk.length) {
            bufferLength += chunk.length;
            buffers.push(chunk);
          }
        });

        res.on('end', function () {
          if (bufferLength) {
            body = Buffer.concat(buffers, bufferLength);

            if (encoding != null) {
              body = body.toString(encoding);
            }
          } else if (strings.length) {
            body = strings.join();
          }

          resolve({ status: status, statusText: statusText, headers: headers, body: body });
        });

        res.on('error', reject);
      });

      req.on('error', reject);

      if (body) {
        if ((0, _utils.isStream)(body)) {
          body.pipe(req);
          return;
        }

        req.write(body);
      }

      req.end();
    };

    if (form) {
      _extends(options.headers, form.getHeaders());

      form.getLength(function (err, length) {
        if (!err && !isNaN(length)) {
          options.headers['content-length'] = length;
        }

        _send();
      });
    } else {
      if (body && !options.headers['content-length']) {
        var Buffer = __webpack_require__(1).Buffer;
        options.headers['content-length'] = Buffer.byteLength(body);
      }

      _send();
    }
  });
};

/**
 * Checks if a network request came back fine, and throws an error if not
 *
 * @param  {object} response   A response from a network request
 *
 * @return {object|undefined} Returns either the response, or throws an error
 */
function checkStatus(response) {
  if (response.status >= 200 && response.status < 300) {
    return response;
  }

  throw new ResponseError(response);
}

var REQUEST_EVENT = 'request';
var RESPONSE_EVENT = 'response';
var ERROR_EVENT = 'error';
var DONE_EVENT = 'done';

var Request = function (_EventEmitter) {
  _inherits(Request, _EventEmitter);

  function Request(path, method, body) {
    _classCallCheck(this, Request);

    var _this2 = _possibleConstructorReturn(this, (Request.__proto__ || Object.getPrototypeOf(Request)).call(this));

    _this2.method = method;
    _this2.path = path;
    _this2.body = body;
    _this2.tags = undefined;
    _this2.unwrap = true;
    _this2.cacheTTL = 0;
    _this2.headers = {};
    _this2.queryParams = {};
    _this2.encoding = 'utf8';
    return _this2;
  }

  /**
   * Sets a header
   *
   * @param {String|Object} key or map of headers
   * @param {String} [value]
   * @returns {Request}
   */


  _createClass(Request, [{
    key: 'set',
    value: function set(key, value) {
      if ((0, _utils.isObject)(key)) {
        for (var headerName in key) {
          this.set(headerName, key[headerName]);
        }
      } else if (typeof value !== 'undefined') {
        this.headers[key] = value;
      }

      return this;
    }

    /**
     * Which kind of tags this request affects.
     * Used for cache validation.
     * Non GET requests with defined tags, will clean all related to these tags caches
     *
     * @param {Array.<String>} tags
     * @returns {Request}
     */

  }, {
    key: 'cacheTags',
    value: function cacheTags() {
      for (var _len = arguments.length, tags = Array(_len), _key = 0; _key < _len; _key++) {
        tags[_key] = arguments[_key];
      }

      this.tags = tags;

      return this;
    }

    /**
     * @param {Object} queryParams
     * @returns {Request}
     */

  }, {
    key: 'query',
    value: function query(queryParams) {
      _extends(this.queryParams, queryParams);

      return this;
    }
  }, {
    key: 'form',
    value: function form(_form) {
      var _this3 = this;

      if (_form) {
        var _FormData = module.exports.FormData;

        if (_form instanceof _FormData) {
          this.body = _form;
        } else {
          (function () {
            var formData = new _FormData();

            var _loop = function _loop(formKey) {
              if (formKey) {
                (0, _utils.castArray)(_form[formKey]).forEach(function (formValue) {
                  if (formValue && formValue.hasOwnProperty('value') && formValue.hasOwnProperty('options')) {
                    formData.append(formKey, formValue.value, formValue.options);
                  } else {
                    formData.append(formKey, formValue);
                  }
                });
              }
            };

            for (var formKey in _form) {
              _loop(formKey);
            }

            _this3.body = formData;
          })();
        }
      }

      return this;
    }

    /**
     * Should we cache or use cached result
     *
     * @param {Number} ttl Time to live for cached response. 15 seconds by default
     * @returns {Request}
     */

  }, {
    key: 'useCache',
    value: function useCache() {
      var ttl = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 15000;

      this.cacheTTL = ttl;

      return this;
    }

    /**
     * Reset cache if passed TRUE and tags has been specified before
     *
     * @param {Boolean} reset - flag to reset cache or not
     * @returns {Request}
     */

  }, {
    key: 'resetCache',
    value: function resetCache(reset) {
      if (reset && this.tags) {
        cache.deleteByTags(this.tags);
      }

      return this;
    }

    /**
     * Shortcut for req.set('Content-Type', value)
     *
     * @param {String} contentType
     * @returns {Request}
     */

  }, {
    key: 'type',
    value: function type(contentType) {
      this.set(CONTENT_TYPE_HEADER, contentType);

      return this;
    }

    /**
     * Should we unwrap the response and return only body. true by default
     * @param {Boolean} unwrap
     * @returns {Request}
     */

  }, {
    key: 'unwrapBody',
    value: function unwrapBody(unwrap) {
      this.unwrap = unwrap;

      return this;
    }

    /**
     * set encoding to response
     * works only for Node js
     *
     * @param {String} encoding
     * @returns {Request}
     */

  }, {
    key: 'setEncoding',
    value: function setEncoding(encoding) {
      this.encoding = encoding;

      return this;
    }

    /**
     * Sends the requst
     *
     * @param {Object} body
     * @returns {Promise}
     */

  }, {
    key: 'send',
    value: function send(body) {
      var _this4 = this;

      this.emit(REQUEST_EVENT, this);

      var path = this.path;
      var queryString = qs.stringify(this.queryParams);

      if (queryString) {
        path += '?' + queryString;
      }

      if (this.cacheTTL) {
        var cached = cache.get(path);

        if (cached !== undefined) {
          return Promise.resolve(cached);
        }
      }

      var type = this.headers[CONTENT_TYPE_HEADER];

      if (!type && (0, _utils.isObject)(body) && !(0, _utils.isFormData)(body)) {
        this.type('application/json');
      }

      if (body) {
        var isJSON = this.headers[CONTENT_TYPE_HEADER] === 'application/json';

        body = isJSON && typeof body !== 'string' ? JSON.stringify(body) : body;
      }

      var unwrapBody = function unwrapBody(res) {
        return _this4.unwrap ? res.body : res;
      };

      /**
       * Caches the response if required
       */
      var cacheResponse = function cacheResponse(res) {
        if (_this4.cacheTTL) {
          cache.set(path, res, _this4.tags, _this4.cacheTTL);
        }

        return res;
      };

      /**
       * Deletes all relevant to req.cacheTags keys from the cache if this request method is not GET
       */
      var flushCache = function flushCache(res) {
        if (_this4.tags && _this4.method !== 'get') {
          cache.deleteByTags(_this4.tags);
        }

        return res;
      };

      if (Request.verbose) {
        console.log(this.method.toUpperCase(), decodeURIComponent(path), body, this.headers);
      }

      var request = Request.send(path, this.method.toUpperCase(), this.headers, body, this.encoding).then(parseBody).then(checkStatus).then(unwrapBody).then(cacheResponse).then(flushCache);

      request.then(function (result) {
        _this4.emit(RESPONSE_EVENT, result);
        _this4.emit(DONE_EVENT, null, result);
      }).catch(function (error) {
        _this4.emit(ERROR_EVENT, error);
        _this4.emit(DONE_EVENT, error);
      });

      return request;
    }

    /**
     * If you are too lazy to use method 'send', don't use it and stay cool :)
     *
     * @param {Function} successHandler
     * @param {Function} errorHandler
     * @returns {Promise}
     */

  }, {
    key: 'then',
    value: function then(successHandler, errorHandler) {
      this.promise = this.promise || this.send(this.body);

      return this.promise.then(successHandler, errorHandler);
    }

    /**
     * @param {Function} errorHandler
     * @returns {Promise}
     */

  }, {
    key: 'catch',
    value: function _catch(errorHandler) {
      this.promise = this.promise || this.send(this.body);

      return this.promise.catch(errorHandler);
    }
  }]);

  return Request;
}(_eventEmitter2.default);

Object.defineProperty(Request, 'FormData', {
  get: function get() {
    return typeof FormData !== 'undefined' ? FormData : __webpack_require__(10);
  }
});

Request.XMLHttpRequest = typeof XMLHttpRequest !== 'undefined' ? XMLHttpRequest : undefined;

Request.send = function (path, method, headers, body, encoding) {
  var sender = typeof Request.XMLHttpRequest !== 'undefined' ? sendXmlHttpRequest : sendNodeAPIRequest;

  return sender(path, method, headers, body, encoding);
};

Request.verbose = false;
Request.methods = ['get', 'post', 'put', 'patch', 'delete'];

Request.methods.forEach(function (method) {
  Request[method] = function (path, body) {
    return new Request(path, method, body);
  };
});

module.exports = Request;

/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var DEFAULT_TTL = 30000; // 30 sec

/**
 * @typedef {Object} CacheItem
 * @property {*} value
 * @property {Array.<RegExp|String>} tags
 * @property {Number} ttl
 */

/**
 * @param {*} value
 * @param {Array.<RegExp|String>}tags
 * @param {Number} ttl
 * @returns {CacheItem}
 */
var cacheItem = function cacheItem(value, tags, ttl) {
  return { value: value, tags: tags, ttl: ttl };
};

var currentTime = function currentTime() {
  return new Date().getTime();
};

/**
 * Returns true if tag A matches tag B :
 *  - if they are non-strictly equal
 *  - if one of them is Regexp matching the opposite
 *
 * @param {String|RegExp} a
 * @param {String|RegExp} b
 * @returns {Boolean}
 */
var tagsMatches = function tagsMatches(a, b) {
  var result = a == b; // eslint-disable-line

  if (!result && a instanceof RegExp) {
    result = a.test(b);
  }

  if (!result && b instanceof RegExp) {
    result = b.test(a);
  }

  return result;
};

/**
 * Returns true if any of A tags matches any of B tags
 *
 * @param {Array.<String|RegExp>} a
 * @param {Array.<String|RegExp>} b
 * @returns {Boolean}
 */
var tagsContainMatches = function tagsContainMatches(a, b) {
  return !!a.find(function (aTag) {
    return b.find(function (bTag) {
      return tagsMatches(aTag, bTag);
    });
  });
};

/**
 * A Cache with TTL and optional tags for the keys
 * Makes it possible to assign multiple tags for a key and delete keys by tags
 * Optionally it starts flushing timer which cleans all outdated keys
 */

var Cache = function () {

  /**
   * @param {Number?} flushInterval
   */
  function Cache(flushInterval) {
    _classCallCheck(this, Cache);

    this.flushInterval = flushInterval;

    /**
     * @type {Map.<String, CacheItem>}
     */
    this.map = new Map();
  }

  /**
   * @param {String} key
   * @returns {*}
   */


  _createClass(Cache, [{
    key: "get",
    value: function get(key) {
      var cacheItem = this.map.get(key);

      if (cacheItem) {
        if (cacheItem.ttl > currentTime()) {
          return cacheItem.value;
        } else {
          this.map.delete(key);
        }
      }
    }

    /**
     * @param {String} key
     * @param {*} value
     * @param {Array.<RegExp|String>=} tags
     * @param {Number=} ttl
     */

  }, {
    key: "set",
    value: function set(key, value, tags) {
      var ttl = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : DEFAULT_TTL;

      this.map.set(key, cacheItem(value, tags, currentTime() + ttl));

      if (this.flushInterval && !this.flushTimer) {
        this.flushTimer = setInterval(this.flush.bind(this), this.flushInterval);

        if (this.flushTimer.unref) {
          this.flushTimer.unref();
        }
      }
    }

    /**
     * @param {String} key
     */

  }, {
    key: "delete",
    value: function _delete(key) {
      this.map.delete(key);
    }

    /**
     * @param {Array.<String>} tags
     */

  }, {
    key: "deleteByTags",
    value: function deleteByTags(tags) {
      var _iteratorNormalCompletion = true;
      var _didIteratorError = false;
      var _iteratorError = undefined;

      try {
        for (var _iterator = this.map[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var _step$value = _slicedToArray(_step.value, 2),
              key = _step$value[0],
              value = _step$value[1];

          if (value.tags && tagsContainMatches(tags, value.tags)) {
            this.delete(key);
          }
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }
    }

    /**
     * Deletes all outdated keys
     */

  }, {
    key: "flush",
    value: function flush() {
      var now = currentTime();

      var _iteratorNormalCompletion2 = true;
      var _didIteratorError2 = false;
      var _iteratorError2 = undefined;

      try {
        for (var _iterator2 = this.map[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
          var _step2$value = _slicedToArray(_step2.value, 2),
              key = _step2$value[0],
              value = _step2$value[1];

          if (value.ttl < now) {
            this.delete(key);
          }
        }
      } catch (err) {
        _didIteratorError2 = true;
        _iteratorError2 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion2 && _iterator2.return) {
            _iterator2.return();
          }
        } finally {
          if (_didIteratorError2) {
            throw _iteratorError2;
          }
        }
      }
    }
  }]);

  return Cache;
}();

exports.default = Cache;

/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var EventEmitter = function () {
  function EventEmitter() {
    _classCallCheck(this, EventEmitter);

    this.events = {};
  }

  _createClass(EventEmitter, [{
    key: "on",
    value: function on(eventName, callback) {
      this.events[eventName] = this.events[eventName] || [];
      this.events[eventName].push(callback);

      return this;
    }
  }, {
    key: "off",
    value: function off(eventName, callback) {
      if (!eventName) {
        this.events = {};
      } else if (this.events[eventName]) {
        if (callback) {
          this.events[eventName] = this.events[eventName].filter(function (c) {
            return c !== callback;
          });
        } else {
          delete this.events[eventName];
        }
      }

      return this;
    }
  }, {
    key: "emit",
    value: function emit(eventName) {
      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        args[_key - 1] = arguments[_key];
      }

      if (this.events[eventName]) {
        this.events[eventName].forEach(function (callback) {
          return callback.apply(undefined, args);
        });
      }
    }
  }]);

  return EventEmitter;
}();

exports.default = EventEmitter;

/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.stringify = undefined;

var _utils = __webpack_require__(0);

/**
 * Produces a URL query string from a given obj by iterating through the object's "own properties".
 * @param {Object} obj
 * @returns {string}
 */
var stringify = exports.stringify = function stringify(obj) {
  var tokens = [];

  Object.keys(obj).forEach(function (key) {
    var value = obj[key];

    if (value !== undefined) {
      (0, _utils.castArray)(value).forEach(function (value) {
        tokens.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));
      });
    }
  });

  return tokens.join('&');
};

/***/ }),
/* 6 */
/***/ (function(module, exports) {

throw new Error('This Backendless JS SDK assembly is not intended for Node.js environment. You should use "lib" folder modules instead. For any questions please contact as at http://support.backendless.com/')

/***/ }),
/* 7 */
/***/ (function(module, exports) {

throw new Error('This Backendless JS SDK assembly is not intended for Node.js environment. You should use "lib" folder modules instead. For any questions please contact as at http://support.backendless.com/')

/***/ }),
/* 8 */
/***/ (function(module, exports) {

throw new Error('This Backendless JS SDK assembly is not intended for Node.js environment. You should use "lib" folder modules instead. For any questions please contact as at http://support.backendless.com/')

/***/ }),
/* 9 */
/***/ (function(module, exports) {

throw new Error('This Backendless JS SDK assembly is not intended for Node.js environment. You should use "lib" folder modules instead. For any questions please contact as at http://support.backendless.com/')

/***/ }),
/* 10 */
/***/ (function(module, exports) {

throw new Error('This Backendless JS SDK assembly is not intended for Node.js environment. You should use "lib" folder modules instead. For any questions please contact as at http://support.backendless.com/')

/***/ })
/******/ ]);
});
//# sourceMappingURL=backendless-request.js.map

/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
var CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';

var Utils = {
  generateUID: function generateUID() {
    //TODO: find a better solution for generate UID
    var hash = '';

    for (var i = 0; i < 8; i++) {
      hash += CHARS.charAt(Math.floor(Math.random() * CHARS.length));
    }

    return hash + Date.now();
  }
};

exports.default = Utils;

/***/ }),
/* 12 */
/***/ (function(module, exports) {

/**
 * Parses an URI
 *
 * @author Steven Levithan <stevenlevithan.com> (MIT license)
 * @api private
 */

var re = /^(?:(?![^:@]+:[^:@\/]*@)(http|https|ws|wss):\/\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\/?#]*)(?::(\d*))?)(((\/(?:[^?#](?![^?#\/]*\.[^?#\/.]+(?:[?#]|$)))*\/?)?([^?#\/]*))(?:\?([^#]*))?(?:#(.*))?)/;

var parts = [
    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'
];

module.exports = function parseuri(str) {
    var src = str,
        b = str.indexOf('['),
        e = str.indexOf(']');

    if (b != -1 && e != -1) {
        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);
    }

    var m = re.exec(str || ''),
        uri = {},
        i = 14;

    while (i--) {
        uri[parts[i]] = m[i] || '';
    }

    if (b != -1 && e != -1) {
        uri.source = src;
        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');
        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');
        uri.ipv6uri = true;
    }

    return uri;
};


/***/ }),
/* 13 */
/***/ (function(module, exports, __webpack_require__) {


/**
 * Module dependencies.
 */

var eio = __webpack_require__(34);
var Socket = __webpack_require__(18);
var Emitter = __webpack_require__(2);
var parser = __webpack_require__(7);
var on = __webpack_require__(19);
var bind = __webpack_require__(20);
var debug = __webpack_require__(1)('socket.io-client:manager');
var indexOf = __webpack_require__(17);
var Backoff = __webpack_require__(51);

/**
 * IE6+ hasOwnProperty
 */

var has = Object.prototype.hasOwnProperty;

/**
 * Module exports
 */

module.exports = Manager;

/**
 * `Manager` constructor.
 *
 * @param {String} engine instance or engine uri/opts
 * @param {Object} options
 * @api public
 */

function Manager (uri, opts) {
  if (!(this instanceof Manager)) return new Manager(uri, opts);
  if (uri && ('object' === typeof uri)) {
    opts = uri;
    uri = undefined;
  }
  opts = opts || {};

  opts.path = opts.path || '/socket.io';
  this.nsps = {};
  this.subs = [];
  this.opts = opts;
  this.reconnection(opts.reconnection !== false);
  this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);
  this.reconnectionDelay(opts.reconnectionDelay || 1000);
  this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);
  this.randomizationFactor(opts.randomizationFactor || 0.5);
  this.backoff = new Backoff({
    min: this.reconnectionDelay(),
    max: this.reconnectionDelayMax(),
    jitter: this.randomizationFactor()
  });
  this.timeout(null == opts.timeout ? 20000 : opts.timeout);
  this.readyState = 'closed';
  this.uri = uri;
  this.connecting = [];
  this.lastPing = null;
  this.encoding = false;
  this.packetBuffer = [];
  var _parser = opts.parser || parser;
  this.encoder = new _parser.Encoder();
  this.decoder = new _parser.Decoder();
  this.autoConnect = opts.autoConnect !== false;
  if (this.autoConnect) this.open();
}

/**
 * Propagate given event to sockets and emit on `this`
 *
 * @api private
 */

Manager.prototype.emitAll = function () {
  this.emit.apply(this, arguments);
  for (var nsp in this.nsps) {
    if (has.call(this.nsps, nsp)) {
      this.nsps[nsp].emit.apply(this.nsps[nsp], arguments);
    }
  }
};

/**
 * Update `socket.id` of all sockets
 *
 * @api private
 */

Manager.prototype.updateSocketIds = function () {
  for (var nsp in this.nsps) {
    if (has.call(this.nsps, nsp)) {
      this.nsps[nsp].id = this.generateId(nsp);
    }
  }
};

/**
 * generate `socket.id` for the given `nsp`
 *
 * @param {String} nsp
 * @return {String}
 * @api private
 */

Manager.prototype.generateId = function (nsp) {
  return (nsp === '/' ? '' : (nsp + '#')) + this.engine.id;
};

/**
 * Mix in `Emitter`.
 */

Emitter(Manager.prototype);

/**
 * Sets the `reconnection` config.
 *
 * @param {Boolean} true/false if it should automatically reconnect
 * @return {Manager} self or value
 * @api public
 */

Manager.prototype.reconnection = function (v) {
  if (!arguments.length) return this._reconnection;
  this._reconnection = !!v;
  return this;
};

/**
 * Sets the reconnection attempts config.
 *
 * @param {Number} max reconnection attempts before giving up
 * @return {Manager} self or value
 * @api public
 */

Manager.prototype.reconnectionAttempts = function (v) {
  if (!arguments.length) return this._reconnectionAttempts;
  this._reconnectionAttempts = v;
  return this;
};

/**
 * Sets the delay between reconnections.
 *
 * @param {Number} delay
 * @return {Manager} self or value
 * @api public
 */

Manager.prototype.reconnectionDelay = function (v) {
  if (!arguments.length) return this._reconnectionDelay;
  this._reconnectionDelay = v;
  this.backoff && this.backoff.setMin(v);
  return this;
};

Manager.prototype.randomizationFactor = function (v) {
  if (!arguments.length) return this._randomizationFactor;
  this._randomizationFactor = v;
  this.backoff && this.backoff.setJitter(v);
  return this;
};

/**
 * Sets the maximum delay between reconnections.
 *
 * @param {Number} delay
 * @return {Manager} self or value
 * @api public
 */

Manager.prototype.reconnectionDelayMax = function (v) {
  if (!arguments.length) return this._reconnectionDelayMax;
  this._reconnectionDelayMax = v;
  this.backoff && this.backoff.setMax(v);
  return this;
};

/**
 * Sets the connection timeout. `false` to disable
 *
 * @return {Manager} self or value
 * @api public
 */

Manager.prototype.timeout = function (v) {
  if (!arguments.length) return this._timeout;
  this._timeout = v;
  return this;
};

/**
 * Starts trying to reconnect if reconnection is enabled and we have not
 * started reconnecting yet
 *
 * @api private
 */

Manager.prototype.maybeReconnectOnOpen = function () {
  // Only try to reconnect if it's the first time we're connecting
  if (!this.reconnecting && this._reconnection && this.backoff.attempts === 0) {
    // keeps reconnection from firing twice for the same reconnection loop
    this.reconnect();
  }
};

/**
 * Sets the current transport `socket`.
 *
 * @param {Function} optional, callback
 * @return {Manager} self
 * @api public
 */

Manager.prototype.open =
Manager.prototype.connect = function (fn, opts) {
  debug('readyState %s', this.readyState);
  if (~this.readyState.indexOf('open')) return this;

  debug('opening %s', this.uri);
  this.engine = eio(this.uri, this.opts);
  var socket = this.engine;
  var self = this;
  this.readyState = 'opening';
  this.skipReconnect = false;

  // emit `open`
  var openSub = on(socket, 'open', function () {
    self.onopen();
    fn && fn();
  });

  // emit `connect_error`
  var errorSub = on(socket, 'error', function (data) {
    debug('connect_error');
    self.cleanup();
    self.readyState = 'closed';
    self.emitAll('connect_error', data);
    if (fn) {
      var err = new Error('Connection error');
      err.data = data;
      fn(err);
    } else {
      // Only do this if there is no fn to handle the error
      self.maybeReconnectOnOpen();
    }
  });

  // emit `connect_timeout`
  if (false !== this._timeout) {
    var timeout = this._timeout;
    debug('connect attempt will timeout after %d', timeout);

    // set timer
    var timer = setTimeout(function () {
      debug('connect attempt timed out after %d', timeout);
      openSub.destroy();
      socket.close();
      socket.emit('error', 'timeout');
      self.emitAll('connect_timeout', timeout);
    }, timeout);

    this.subs.push({
      destroy: function () {
        clearTimeout(timer);
      }
    });
  }

  this.subs.push(openSub);
  this.subs.push(errorSub);

  return this;
};

/**
 * Called upon transport open.
 *
 * @api private
 */

Manager.prototype.onopen = function () {
  debug('open');

  // clear old subs
  this.cleanup();

  // mark as open
  this.readyState = 'open';
  this.emit('open');

  // add new subs
  var socket = this.engine;
  this.subs.push(on(socket, 'data', bind(this, 'ondata')));
  this.subs.push(on(socket, 'ping', bind(this, 'onping')));
  this.subs.push(on(socket, 'pong', bind(this, 'onpong')));
  this.subs.push(on(socket, 'error', bind(this, 'onerror')));
  this.subs.push(on(socket, 'close', bind(this, 'onclose')));
  this.subs.push(on(this.decoder, 'decoded', bind(this, 'ondecoded')));
};

/**
 * Called upon a ping.
 *
 * @api private
 */

Manager.prototype.onping = function () {
  this.lastPing = new Date();
  this.emitAll('ping');
};

/**
 * Called upon a packet.
 *
 * @api private
 */

Manager.prototype.onpong = function () {
  this.emitAll('pong', new Date() - this.lastPing);
};

/**
 * Called with data.
 *
 * @api private
 */

Manager.prototype.ondata = function (data) {
  this.decoder.add(data);
};

/**
 * Called when parser fully decodes a packet.
 *
 * @api private
 */

Manager.prototype.ondecoded = function (packet) {
  this.emit('packet', packet);
};

/**
 * Called upon socket error.
 *
 * @api private
 */

Manager.prototype.onerror = function (err) {
  debug('error', err);
  this.emitAll('error', err);
};

/**
 * Creates a new socket for the given `nsp`.
 *
 * @return {Socket}
 * @api public
 */

Manager.prototype.socket = function (nsp, opts) {
  var socket = this.nsps[nsp];
  if (!socket) {
    socket = new Socket(this, nsp, opts);
    this.nsps[nsp] = socket;
    var self = this;
    socket.on('connecting', onConnecting);
    socket.on('connect', function () {
      socket.id = self.generateId(nsp);
    });

    if (this.autoConnect) {
      // manually call here since connecting event is fired before listening
      onConnecting();
    }
  }

  function onConnecting () {
    if (!~indexOf(self.connecting, socket)) {
      self.connecting.push(socket);
    }
  }

  return socket;
};

/**
 * Called upon a socket close.
 *
 * @param {Socket} socket
 */

Manager.prototype.destroy = function (socket) {
  var index = indexOf(this.connecting, socket);
  if (~index) this.connecting.splice(index, 1);
  if (this.connecting.length) return;

  this.close();
};

/**
 * Writes a packet.
 *
 * @param {Object} packet
 * @api private
 */

Manager.prototype.packet = function (packet) {
  debug('writing packet %j', packet);
  var self = this;
  if (packet.query && packet.type === 0) packet.nsp += '?' + packet.query;

  if (!self.encoding) {
    // encode, then write to engine with result
    self.encoding = true;
    this.encoder.encode(packet, function (encodedPackets) {
      for (var i = 0; i < encodedPackets.length; i++) {
        self.engine.write(encodedPackets[i], packet.options);
      }
      self.encoding = false;
      self.processPacketQueue();
    });
  } else { // add packet to the queue
    self.packetBuffer.push(packet);
  }
};

/**
 * If packet buffer is non-empty, begins encoding the
 * next packet in line.
 *
 * @api private
 */

Manager.prototype.processPacketQueue = function () {
  if (this.packetBuffer.length > 0 && !this.encoding) {
    var pack = this.packetBuffer.shift();
    this.packet(pack);
  }
};

/**
 * Clean up transport subscriptions and packet buffer.
 *
 * @api private
 */

Manager.prototype.cleanup = function () {
  debug('cleanup');

  var subsLength = this.subs.length;
  for (var i = 0; i < subsLength; i++) {
    var sub = this.subs.shift();
    sub.destroy();
  }

  this.packetBuffer = [];
  this.encoding = false;
  this.lastPing = null;

  this.decoder.destroy();
};

/**
 * Close the current socket.
 *
 * @api private
 */

Manager.prototype.close =
Manager.prototype.disconnect = function () {
  debug('disconnect');
  this.skipReconnect = true;
  this.reconnecting = false;
  if ('opening' === this.readyState) {
    // `onclose` will not fire because
    // an open event never happened
    this.cleanup();
  }
  this.backoff.reset();
  this.readyState = 'closed';
  if (this.engine) this.engine.close();
};

/**
 * Called upon engine close.
 *
 * @api private
 */

Manager.prototype.onclose = function (reason) {
  debug('onclose');

  this.cleanup();
  this.backoff.reset();
  this.readyState = 'closed';
  this.emit('close', reason);

  if (this._reconnection && !this.skipReconnect) {
    this.reconnect();
  }
};

/**
 * Attempt a reconnection.
 *
 * @api private
 */

Manager.prototype.reconnect = function () {
  if (this.reconnecting || this.skipReconnect) return this;

  var self = this;

  if (this.backoff.attempts >= this._reconnectionAttempts) {
    debug('reconnect failed');
    this.backoff.reset();
    this.emitAll('reconnect_failed');
    this.reconnecting = false;
  } else {
    var delay = this.backoff.duration();
    debug('will wait %dms before reconnect attempt', delay);

    this.reconnecting = true;
    var timer = setTimeout(function () {
      if (self.skipReconnect) return;

      debug('attempting reconnect');
      self.emitAll('reconnect_attempt', self.backoff.attempts);
      self.emitAll('reconnecting', self.backoff.attempts);

      // check again for the case socket closed in above events
      if (self.skipReconnect) return;

      self.open(function (err) {
        if (err) {
          debug('reconnect attempt error');
          self.reconnecting = false;
          self.reconnect();
          self.emitAll('reconnect_error', err.data);
        } else {
          debug('reconnect success');
          self.onreconnect();
        }
      });
    }, delay);

    this.subs.push({
      destroy: function () {
        clearTimeout(timer);
      }
    });
  }
};

/**
 * Called upon successful reconnect.
 *
 * @api private
 */

Manager.prototype.onreconnect = function () {
  var attempt = this.backoff.attempts;
  this.reconnecting = false;
  this.backoff.reset();
  this.updateSocketIds();
  this.emitAll('reconnect', attempt);
};


/***/ }),
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {/**
 * Module dependencies
 */

var XMLHttpRequest = __webpack_require__(8);
var XHR = __webpack_require__(37);
var JSONP = __webpack_require__(47);
var websocket = __webpack_require__(48);

/**
 * Export transports.
 */

exports.polling = polling;
exports.websocket = websocket;

/**
 * Polling transport polymorphic constructor.
 * Decides on xhr vs jsonp based on feature detection.
 *
 * @api private
 */

function polling (opts) {
  var xhr;
  var xd = false;
  var xs = false;
  var jsonp = false !== opts.jsonp;

  if (global.location) {
    var isSSL = 'https:' === location.protocol;
    var port = location.port;

    // some user agents have empty `location.port`
    if (!port) {
      port = isSSL ? 443 : 80;
    }

    xd = opts.hostname !== location.hostname || port !== opts.port;
    xs = opts.secure !== isSSL;
  }

  opts.xdomain = xd;
  opts.xscheme = xs;
  xhr = new XMLHttpRequest(opts);

  if ('open' in xhr && !opts.forceJSONP) {
    return new XHR(opts);
  } else {
    if (!jsonp) throw new Error('JSONP disabled');
    return new JSONP(opts);
  }
}

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 15 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * Module dependencies.
 */

var Transport = __webpack_require__(9);
var parseqs = __webpack_require__(5);
var parser = __webpack_require__(3);
var inherit = __webpack_require__(6);
var yeast = __webpack_require__(16);
var debug = __webpack_require__(1)('engine.io-client:polling');

/**
 * Module exports.
 */

module.exports = Polling;

/**
 * Is XHR2 supported?
 */

var hasXHR2 = (function () {
  var XMLHttpRequest = __webpack_require__(8);
  var xhr = new XMLHttpRequest({ xdomain: false });
  return null != xhr.responseType;
})();

/**
 * Polling interface.
 *
 * @param {Object} opts
 * @api private
 */

function Polling (opts) {
  var forceBase64 = (opts && opts.forceBase64);
  if (!hasXHR2 || forceBase64) {
    this.supportsBinary = false;
  }
  Transport.call(this, opts);
}

/**
 * Inherits from Transport.
 */

inherit(Polling, Transport);

/**
 * Transport name.
 */

Polling.prototype.name = 'polling';

/**
 * Opens the socket (triggers polling). We write a PING message to determine
 * when the transport is open.
 *
 * @api private
 */

Polling.prototype.doOpen = function () {
  this.poll();
};

/**
 * Pauses polling.
 *
 * @param {Function} callback upon buffers are flushed and transport is paused
 * @api private
 */

Polling.prototype.pause = function (onPause) {
  var self = this;

  this.readyState = 'pausing';

  function pause () {
    debug('paused');
    self.readyState = 'paused';
    onPause();
  }

  if (this.polling || !this.writable) {
    var total = 0;

    if (this.polling) {
      debug('we are currently polling - waiting to pause');
      total++;
      this.once('pollComplete', function () {
        debug('pre-pause polling complete');
        --total || pause();
      });
    }

    if (!this.writable) {
      debug('we are currently writing - waiting to pause');
      total++;
      this.once('drain', function () {
        debug('pre-pause writing complete');
        --total || pause();
      });
    }
  } else {
    pause();
  }
};

/**
 * Starts polling cycle.
 *
 * @api public
 */

Polling.prototype.poll = function () {
  debug('polling');
  this.polling = true;
  this.doPoll();
  this.emit('poll');
};

/**
 * Overloads onData to detect payloads.
 *
 * @api private
 */

Polling.prototype.onData = function (data) {
  var self = this;
  debug('polling got data %s', data);
  var callback = function (packet, index, total) {
    // if its the first message we consider the transport open
    if ('opening' === self.readyState) {
      self.onOpen();
    }

    // if its a close packet, we close the ongoing requests
    if ('close' === packet.type) {
      self.onClose();
      return false;
    }

    // otherwise bypass onData and handle the message
    self.onPacket(packet);
  };

  // decode payload
  parser.decodePayload(data, this.socket.binaryType, callback);

  // if an event did not trigger closing
  if ('closed' !== this.readyState) {
    // if we got data we're not polling
    this.polling = false;
    this.emit('pollComplete');

    if ('open' === this.readyState) {
      this.poll();
    } else {
      debug('ignoring poll - transport state "%s"', this.readyState);
    }
  }
};

/**
 * For polling, send a close packet.
 *
 * @api private
 */

Polling.prototype.doClose = function () {
  var self = this;

  function close () {
    debug('writing close packet');
    self.write([{ type: 'close' }]);
  }

  if ('open' === this.readyState) {
    debug('transport open - closing');
    close();
  } else {
    // in case we're trying to close while
    // handshaking is in progress (GH-164)
    debug('transport not open - deferring close');
    this.once('open', close);
  }
};

/**
 * Writes a packets payload.
 *
 * @param {Array} data packets
 * @param {Function} drain callback
 * @api private
 */

Polling.prototype.write = function (packets) {
  var self = this;
  this.writable = false;
  var callbackfn = function () {
    self.writable = true;
    self.emit('drain');
  };

  parser.encodePayload(packets, this.supportsBinary, function (data) {
    self.doWrite(data, callbackfn);
  });
};

/**
 * Generates uri for connection.
 *
 * @api private
 */

Polling.prototype.uri = function () {
  var query = this.query || {};
  var schema = this.secure ? 'https' : 'http';
  var port = '';

  // cache busting is forced
  if (false !== this.timestampRequests) {
    query[this.timestampParam] = yeast();
  }

  if (!this.supportsBinary && !query.sid) {
    query.b64 = 1;
  }

  query = parseqs.encode(query);

  // avoid port if default for schema
  if (this.port && (('https' === schema && Number(this.port) !== 443) ||
     ('http' === schema && Number(this.port) !== 80))) {
    port = ':' + this.port;
  }

  // prepend ? to query
  if (query.length) {
    query = '?' + query;
  }

  var ipv6 = this.hostname.indexOf(':') !== -1;
  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;
};


/***/ }),
/* 16 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split('')
  , length = 64
  , map = {}
  , seed = 0
  , i = 0
  , prev;

/**
 * Return a string representing the specified number.
 *
 * @param {Number} num The number to convert.
 * @returns {String} The string representation of the number.
 * @api public
 */
function encode(num) {
  var encoded = '';

  do {
    encoded = alphabet[num % length] + encoded;
    num = Math.floor(num / length);
  } while (num > 0);

  return encoded;
}

/**
 * Return the integer value specified by the given string.
 *
 * @param {String} str The string to convert.
 * @returns {Number} The integer value represented by the string.
 * @api public
 */
function decode(str) {
  var decoded = 0;

  for (i = 0; i < str.length; i++) {
    decoded = decoded * length + map[str.charAt(i)];
  }

  return decoded;
}

/**
 * Yeast: A tiny growing id generator.
 *
 * @returns {String} A unique id.
 * @api public
 */
function yeast() {
  var now = encode(+new Date());

  if (now !== prev) return seed = 0, prev = now;
  return now +'.'+ encode(seed++);
}

//
// Map each character to its index.
//
for (; i < length; i++) map[alphabet[i]] = i;

//
// Expose the `yeast`, `encode` and `decode` functions.
//
yeast.encode = encode;
yeast.decode = decode;
module.exports = yeast;


/***/ }),
/* 17 */
/***/ (function(module, exports) {


var indexOf = [].indexOf;

module.exports = function(arr, obj){
  if (indexOf) return arr.indexOf(obj);
  for (var i = 0; i < arr.length; ++i) {
    if (arr[i] === obj) return i;
  }
  return -1;
};

/***/ }),
/* 18 */
/***/ (function(module, exports, __webpack_require__) {


/**
 * Module dependencies.
 */

var parser = __webpack_require__(7);
var Emitter = __webpack_require__(2);
var toArray = __webpack_require__(50);
var on = __webpack_require__(19);
var bind = __webpack_require__(20);
var debug = __webpack_require__(1)('socket.io-client:socket');
var parseqs = __webpack_require__(5);

/**
 * Module exports.
 */

module.exports = exports = Socket;

/**
 * Internal events (blacklisted).
 * These events can't be emitted by the user.
 *
 * @api private
 */

var events = {
  connect: 1,
  connect_error: 1,
  connect_timeout: 1,
  connecting: 1,
  disconnect: 1,
  error: 1,
  reconnect: 1,
  reconnect_attempt: 1,
  reconnect_failed: 1,
  reconnect_error: 1,
  reconnecting: 1,
  ping: 1,
  pong: 1
};

/**
 * Shortcut to `Emitter#emit`.
 */

var emit = Emitter.prototype.emit;

/**
 * `Socket` constructor.
 *
 * @api public
 */

function Socket (io, nsp, opts) {
  this.io = io;
  this.nsp = nsp;
  this.json = this; // compat
  this.ids = 0;
  this.acks = {};
  this.receiveBuffer = [];
  this.sendBuffer = [];
  this.connected = false;
  this.disconnected = true;
  if (opts && opts.query) {
    this.query = opts.query;
  }
  if (this.io.autoConnect) this.open();
}

/**
 * Mix in `Emitter`.
 */

Emitter(Socket.prototype);

/**
 * Subscribe to open, close and packet events
 *
 * @api private
 */

Socket.prototype.subEvents = function () {
  if (this.subs) return;

  var io = this.io;
  this.subs = [
    on(io, 'open', bind(this, 'onopen')),
    on(io, 'packet', bind(this, 'onpacket')),
    on(io, 'close', bind(this, 'onclose'))
  ];
};

/**
 * "Opens" the socket.
 *
 * @api public
 */

Socket.prototype.open =
Socket.prototype.connect = function () {
  if (this.connected) return this;

  this.subEvents();
  this.io.open(); // ensure open
  if ('open' === this.io.readyState) this.onopen();
  this.emit('connecting');
  return this;
};

/**
 * Sends a `message` event.
 *
 * @return {Socket} self
 * @api public
 */

Socket.prototype.send = function () {
  var args = toArray(arguments);
  args.unshift('message');
  this.emit.apply(this, args);
  return this;
};

/**
 * Override `emit`.
 * If the event is in `events`, it's emitted normally.
 *
 * @param {String} event name
 * @return {Socket} self
 * @api public
 */

Socket.prototype.emit = function (ev) {
  if (events.hasOwnProperty(ev)) {
    emit.apply(this, arguments);
    return this;
  }

  var args = toArray(arguments);
  var packet = { type: parser.EVENT, data: args };

  packet.options = {};
  packet.options.compress = !this.flags || false !== this.flags.compress;

  // event ack callback
  if ('function' === typeof args[args.length - 1]) {
    debug('emitting packet with ack id %d', this.ids);
    this.acks[this.ids] = args.pop();
    packet.id = this.ids++;
  }

  if (this.connected) {
    this.packet(packet);
  } else {
    this.sendBuffer.push(packet);
  }

  delete this.flags;

  return this;
};

/**
 * Sends a packet.
 *
 * @param {Object} packet
 * @api private
 */

Socket.prototype.packet = function (packet) {
  packet.nsp = this.nsp;
  this.io.packet(packet);
};

/**
 * Called upon engine `open`.
 *
 * @api private
 */

Socket.prototype.onopen = function () {
  debug('transport is open - connecting');

  // write connect packet if necessary
  if ('/' !== this.nsp) {
    if (this.query) {
      var query = typeof this.query === 'object' ? parseqs.encode(this.query) : this.query;
      debug('sending connect packet with query %s', query);
      this.packet({type: parser.CONNECT, query: query});
    } else {
      this.packet({type: parser.CONNECT});
    }
  }
};

/**
 * Called upon engine `close`.
 *
 * @param {String} reason
 * @api private
 */

Socket.prototype.onclose = function (reason) {
  debug('close (%s)', reason);
  this.connected = false;
  this.disconnected = true;
  delete this.id;
  this.emit('disconnect', reason);
};

/**
 * Called with socket packet.
 *
 * @param {Object} packet
 * @api private
 */

Socket.prototype.onpacket = function (packet) {
  if (packet.nsp !== this.nsp) return;

  switch (packet.type) {
    case parser.CONNECT:
      this.onconnect();
      break;

    case parser.EVENT:
      this.onevent(packet);
      break;

    case parser.BINARY_EVENT:
      this.onevent(packet);
      break;

    case parser.ACK:
      this.onack(packet);
      break;

    case parser.BINARY_ACK:
      this.onack(packet);
      break;

    case parser.DISCONNECT:
      this.ondisconnect();
      break;

    case parser.ERROR:
      this.emit('error', packet.data);
      break;
  }
};

/**
 * Called upon a server event.
 *
 * @param {Object} packet
 * @api private
 */

Socket.prototype.onevent = function (packet) {
  var args = packet.data || [];
  debug('emitting event %j', args);

  if (null != packet.id) {
    debug('attaching ack callback to event');
    args.push(this.ack(packet.id));
  }

  if (this.connected) {
    emit.apply(this, args);
  } else {
    this.receiveBuffer.push(args);
  }
};

/**
 * Produces an ack callback to emit with an event.
 *
 * @api private
 */

Socket.prototype.ack = function (id) {
  var self = this;
  var sent = false;
  return function () {
    // prevent double callbacks
    if (sent) return;
    sent = true;
    var args = toArray(arguments);
    debug('sending ack %j', args);

    self.packet({
      type: parser.ACK,
      id: id,
      data: args
    });
  };
};

/**
 * Called upon a server acknowlegement.
 *
 * @param {Object} packet
 * @api private
 */

Socket.prototype.onack = function (packet) {
  var ack = this.acks[packet.id];
  if ('function' === typeof ack) {
    debug('calling ack %s with %j', packet.id, packet.data);
    ack.apply(this, packet.data);
    delete this.acks[packet.id];
  } else {
    debug('bad ack %s', packet.id);
  }
};

/**
 * Called upon server connect.
 *
 * @api private
 */

Socket.prototype.onconnect = function () {
  this.connected = true;
  this.disconnected = false;
  this.emit('connect');
  this.emitBuffered();
};

/**
 * Emit buffered events (received and emitted).
 *
 * @api private
 */

Socket.prototype.emitBuffered = function () {
  var i;
  for (i = 0; i < this.receiveBuffer.length; i++) {
    emit.apply(this, this.receiveBuffer[i]);
  }
  this.receiveBuffer = [];

  for (i = 0; i < this.sendBuffer.length; i++) {
    this.packet(this.sendBuffer[i]);
  }
  this.sendBuffer = [];
};

/**
 * Called upon server disconnect.
 *
 * @api private
 */

Socket.prototype.ondisconnect = function () {
  debug('server disconnect (%s)', this.nsp);
  this.destroy();
  this.onclose('io server disconnect');
};

/**
 * Called upon forced client/server side disconnections,
 * this method ensures the manager stops tracking us and
 * that reconnections don't get triggered for this.
 *
 * @api private.
 */

Socket.prototype.destroy = function () {
  if (this.subs) {
    // clean subscriptions to avoid reconnections
    for (var i = 0; i < this.subs.length; i++) {
      this.subs[i].destroy();
    }
    this.subs = null;
  }

  this.io.destroy(this);
};

/**
 * Disconnects the socket manually.
 *
 * @return {Socket} self
 * @api public
 */

Socket.prototype.close =
Socket.prototype.disconnect = function () {
  if (this.connected) {
    debug('performing disconnect (%s)', this.nsp);
    this.packet({ type: parser.DISCONNECT });
  }

  // remove socket from pool
  this.destroy();

  if (this.connected) {
    // fire events
    this.onclose('io client disconnect');
  }
  return this;
};

/**
 * Sets the compress flag.
 *
 * @param {Boolean} if `true`, compresses the sending data
 * @return {Socket} self
 * @api public
 */

Socket.prototype.compress = function (compress) {
  this.flags = this.flags || {};
  this.flags.compress = compress;
  return this;
};


/***/ }),
/* 19 */
/***/ (function(module, exports) {


/**
 * Module exports.
 */

module.exports = on;

/**
 * Helper for subscriptions.
 *
 * @param {Object|EventEmitter} obj with `Emitter` mixin or `EventEmitter`
 * @param {String} event name
 * @param {Function} callback
 * @api public
 */

function on (obj, ev, fn) {
  obj.on(ev, fn);
  return {
    destroy: function () {
      obj.removeListener(ev, fn);
    }
  };
}


/***/ }),
/* 20 */
/***/ (function(module, exports) {

/**
 * Slice reference.
 */

var slice = [].slice;

/**
 * Bind `obj` to `fn`.
 *
 * @param {Object} obj
 * @param {Function|String} fn or string
 * @return {Function}
 * @api public
 */

module.exports = function(obj, fn){
  if ('string' == typeof fn) fn = obj[fn];
  if ('function' != typeof fn) throw new Error('bind() requires a function');
  var args = slice.call(arguments, 2);
  return function(){
    return fn.apply(obj, args.concat(slice.call(arguments)));
  }
};


/***/ }),
/* 21 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var RTListeners = function () {
  function RTListeners() {
    _classCallCheck(this, RTListeners);

    this.subscriptions = {};
    this.simpleListeners = {};
  }

  _createClass(RTListeners, [{
    key: "addSubscription",
    value: function addSubscription(type, subscriberFn, _ref) {
      var _this = this;

      var callback = _ref.callback,
          onError = _ref.onError,
          onReady = _ref.onReady,
          parser = _ref.parser,
          params = _ref.params;

      var subscriptionsStack = this.subscriptions[type] = this.subscriptions[type] || [];

      var subscription = subscriberFn(_extends({}, params, this.getSubscriptionOptions()), {
        parser: parser,
        onData: callback,
        onError: onError,
        onReady: onReady,
        onStop: function onStop() {
          _this.subscriptions[type] = subscriptionsStack.filter(function (s) {
            return s.subscription !== subscription;
          });
        }
      });

      var subscriptionStore = {
        callback: callback,
        params: params,
        subscription: subscription,
        stop: function stop() {
          return subscription.stop();
        }
      };

      subscriptionsStack.push(subscriptionStore);

      return subscriptionStore;
    }
  }, {
    key: "getSubscriptionOptions",
    value: function getSubscriptionOptions() {
      return {};
    }
  }, {
    key: "stopSubscription",
    value: function stopSubscription(type, _ref2) {
      var callback = _ref2.callback,
          matcher = _ref2.matcher;

      var subscriptionsStack = this.subscriptions[type] = this.subscriptions[type] || [];

      if (matcher) {
        subscriptionsStack.forEach(function (subscriptionStore) {
          if (matcher(subscriptionStore)) {
            subscriptionStore.subscription.stop();
          }
        });
      } else {
        subscriptionsStack.forEach(function (subscriptionStore) {
          if (!callback || subscriptionStore.callback === callback) {
            subscriptionStore.subscription.stop();
          }
        });
      }
    }
  }, {
    key: "addSimpleListener",
    value: function addSimpleListener(type, callback) {
      var listenersStack = this.simpleListeners[type] = this.simpleListeners[type] || [];

      listenersStack.push(callback);
    }
  }, {
    key: "removeSimpleListener",
    value: function removeSimpleListener(type, callback) {
      if (this.simpleListeners[type]) {
        this.simpleListeners[type] = callback ? this.simpleListeners[type].filter(function (cb) {
          return cb !== callback;
        }) : [];
      }
    }
  }, {
    key: "runSimpleListeners",
    value: function runSimpleListeners(type) {
      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        args[_key - 1] = arguments[_key];
      }

      if (this.simpleListeners[type]) {
        this.simpleListeners[type].forEach(function (callback) {
          return callback.apply(undefined, args);
        });
      }
    }
  }, {
    key: "removeAllListeners",
    value: function removeAllListeners() {
      var _this2 = this;

      Object.keys(this.subscriptions).forEach(function (listenerType) {
        _this2.subscriptions[listenerType].forEach(function (_ref3) {
          var subscription = _ref3.subscription;
          return subscription.stop();
        });
      });

      this.simpleListeners = {};
    }
  }]);

  return RTListeners;
}();

exports.default = RTListeners;

/***/ }),
/* 22 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.RTScopeConnector = exports.RTListeners = undefined;

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _backendlessRequest = __webpack_require__(10);

var _backendlessRequest2 = _interopRequireDefault(_backendlessRequest);

var _client = __webpack_require__(23);

var _client2 = _interopRequireDefault(_client);

var _listeners = __webpack_require__(21);

var _listeners2 = _interopRequireDefault(_listeners);

var _scopeConnector = __webpack_require__(52);

var _scopeConnector2 = _interopRequireDefault(_scopeConnector);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var root = (typeof self === 'undefined' ? 'undefined' : _typeof(self)) === 'object' && self.self === self && self || (typeof global === 'undefined' ? 'undefined' : _typeof(global)) === 'object' && global.global === global && global;

_client2.default.Request = _backendlessRequest2.default;
_client2.default.Listeners = _listeners2.default;
_client2.default.ScopeConnector = _scopeConnector2.default;

if (root) {
  root.BackendlessRTClient = _client2.default;
}

module.exports = _client2.default;

exports.default = _client2.default;
var RTListeners = exports.RTListeners = _listeners2.default;
var RTScopeConnector = exports.RTScopeConnector = _scopeConnector2.default;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 23 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _constants = __webpack_require__(4);

var _config = __webpack_require__(24);

var _config2 = _interopRequireDefault(_config);

var _subscriptions = __webpack_require__(25);

var _subscriptions2 = _interopRequireDefault(_subscriptions);

var _methods = __webpack_require__(26);

var _methods2 = _interopRequireDefault(_methods);

var _session = __webpack_require__(27);

var _session2 = _interopRequireDefault(_session);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var CONNECTION_MANAGE_EVENTS = [_constants.NativeSocketEvents.CONNECTING, _constants.NativeSocketEvents.CONNECT, _constants.NativeSocketEvents.CONNECT_ERROR, _constants.NativeSocketEvents.DISCONNECT, _constants.NativeSocketEvents.RECONNECT_ATTEMPT];

var RTClient = function () {
  function RTClient(config) {
    var _this = this;

    _classCallCheck(this, RTClient);

    this.onConnectError = function () {
      if (!_this.subscriptions.hasActivity() && !_this.methods.hasActivity()) {
        _this.disconnect('There are no active subscriptions and methods');

        _this.connectible = true;
      }
    };

    this.connectOnMethod = function (method) {
      return function () {
        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }

        if (_this.connectible) {
          var rtSocketPromise = _this.provideConnection();

          if (_this.connected) {
            rtSocketPromise.then(function (rtSocket) {
              return rtSocket[method].apply(rtSocket, args);
            });
          }
        }
      };
    };

    this.on = this.connectOnMethod('on');
    this.emit = this.connectOnMethod('emit');

    this.onSessionDisconnect = function () {
      _this.subscriptions.stop();
      _this.methods.stop();

      delete _this.session;

      _this.provideConnection();
    };

    this.emitSocketEventListeners = function (event) {
      for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
        args[_key2 - 1] = arguments[_key2];
      }

      if (_this.socketEvents[event]) {
        _this.socketEvents[event].forEach(function (callback) {
          return callback.apply(undefined, args);
        });
      }
    };

    this.addConnectingEventListener = function (callback) {
      return _this.addSocketEventListener(_constants.NativeSocketEvents.CONNECTING, callback);
    };

    this.removeConnectingEventListener = function (callback) {
      return _this.removeSocketEventListener(_constants.NativeSocketEvents.CONNECTING, callback);
    };

    this.addConnectEventListener = function (callback) {
      return _this.addSocketEventListener(_constants.NativeSocketEvents.CONNECT, callback);
    };

    this.removeConnectEventListener = function (callback) {
      return _this.removeSocketEventListener(_constants.NativeSocketEvents.CONNECT, callback);
    };

    this.addConnectErrorEventListener = function (callback) {
      return _this.addSocketEventListener(_constants.NativeSocketEvents.CONNECT_ERROR, callback);
    };

    this.removeConnectErrorEventListener = function (callback) {
      return _this.removeSocketEventListener(_constants.NativeSocketEvents.CONNECT_ERROR, callback);
    };

    this.addDisconnectEventListener = function (callback) {
      return _this.addSocketEventListener(_constants.NativeSocketEvents.DISCONNECT, callback);
    };

    this.removeDisconnectEventListener = function (callback) {
      return _this.removeSocketEventListener(_constants.NativeSocketEvents.DISCONNECT, callback);
    };

    this.addReconnectAttemptEventListener = function (callback) {
      return _this.addSocketEventListener(_constants.NativeSocketEvents.RECONNECT_ATTEMPT, callback);
    };

    this.removeReconnectAttemptEventListener = function (callback) {
      return _this.removeSocketEventListener(_constants.NativeSocketEvents.RECONNECT_ATTEMPT, callback);
    };

    this.removeConnectionListeners = function () {
      CONNECTION_MANAGE_EVENTS.forEach(function (event) {
        return _this.removeSocketEventListener(event);
      });
    };

    this.config = new _config2.default(config);

    this.resetSocketEvents();

    var socketContext = {
      onMessage: this.on.bind(this),
      emitMessage: this.emit.bind(this)
    };

    this.subscriptions = new _subscriptions2.default(socketContext);
    this.methods = new _methods2.default(socketContext);

    this.connectible = true;
    this.connected = false;
  }

  _createClass(RTClient, [{
    key: 'resetSocketEvents',
    value: function resetSocketEvents() {
      this.socketEvents = {};
      this.addConnectErrorEventListener(this.onConnectError);
    }
  }, {
    key: 'setConfig',
    value: function setConfig(config) {
      this.config.set(config);

      if (this.session) {
        this.disconnect('Re-config socket connection');

        this.connect();
      }
    }
  }, {
    key: 'provideConnection',
    value: function provideConnection() {
      var _this2 = this;

      if (!this.session) {
        this.session = new _session2.default(this.config, this.emitSocketEventListeners, this.onSessionDisconnect);
        this.session.getSocket().then(function () {
          _this2.connected = true;

          _this2.methods.initialize();
          _this2.methods.restore();

          _this2.subscriptions.initialize();
          _this2.subscriptions.restore();
        });
      }

      return this.session.getSocket();
    }
  }, {
    key: 'connect',
    value: function connect() {
      this.connectible = true;

      this.provideConnection();
    }
  }, {
    key: 'disconnect',
    value: function disconnect(reason) {
      if (this.session) {
        this.subscriptions.stop();
        this.methods.stop();

        this.session.terminate();

        delete this.session;

        this.emitSocketEventListeners(_constants.NativeSocketEvents.DISCONNECT, reason || 'disconnected by client');
      }

      this.connectible = false;
      this.connected = false;
    }
  }, {
    key: 'terminate',
    value: function terminate(reason) {
      this.resetSocketEvents();

      this.subscriptions.reset();
      this.methods.reset();

      this.disconnect(reason || 'Terminated by client');
    }
  }, {
    key: 'addSocketEventListener',
    value: function addSocketEventListener(event, callback) {
      this.socketEvents[event] = this.socketEvents[event] || [];
      this.socketEvents[event].push(callback);

      return this;
    }
  }, {
    key: 'removeSocketEventListener',
    value: function removeSocketEventListener(event, callback) {
      if (this.socketEvents[event]) {
        this.socketEvents[event] = callback ? this.socketEvents[event].filter(function (cb) {
          return cb !== callback;
        }) : [];

        if (!this.socketEvents[event].length) {
          delete this.socketEvents[event];
        }
      }

      return this;
    }

    /* eslint-disable max-len */

    /* eslint-enable max-len */

  }]);

  return RTClient;
}();

exports.default = RTClient;

/***/ }),
/* 24 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var isUndefined = function isUndefined(value) {
  return typeof value === 'undefined';
};
var isString = function isString(value) {
  return typeof value === 'string';
};
var isFunction = function isFunction(value) {
  return typeof value === 'function';
};
var isObject = function isObject(value) {
  return (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object' && value !== null;
};

var RTConfig = function () {
  function RTConfig(config) {
    _classCallCheck(this, RTConfig);

    this.appId = null;
    this.lookupPath = null;
    this.lookupHeaders = {};
    this.debugMode = false;
    this.connectQuery = {};

    this.set(config);
  }

  _createClass(RTConfig, [{
    key: 'set',
    value: function set(config) {
      if (!config) {
        return;
      }

      if (!isUndefined(config.appId)) {
        if (!isString(config.appId)) {
          throw new Error('"appId" must be String.');
        }

        this.appId = config.appId;
      }

      if (!isUndefined(config.lookupPath)) {
        if (!isString(config.lookupPath)) {
          throw new Error('"lookupPath" must be String.');
        }

        this.lookupPath = config.lookupPath;
      }

      if (!isUndefined(config.lookupHeaders)) {
        if (!isObject(config.lookupHeaders)) {
          throw new Error('"lookupHeaders" must be Object.');
        }

        this.lookupHeaders = config.lookupHeaders;
      }

      if (!isUndefined(config.debugMode)) {
        this.debugMode = !!config.debugMode;
      }

      if (!isUndefined(config.connectQuery)) {
        if (isFunction(config.connectQuery)) {
          this.getConnectQuery = config.connectQuery;
        } else if (isObject(config.connectQuery)) {
          this.connectQuery = config.connectQuery;
        } else {
          throw new Error('"connectQuery" must be Function or Object.');
        }
      }
    }
  }, {
    key: 'getConnectQuery',
    value: function getConnectQuery() {
      return this.connectQuery;
    }
  }]);

  return RTConfig;
}();

exports.default = RTConfig;

/***/ }),
/* 25 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _constants = __webpack_require__(4);

var _utils = __webpack_require__(11);

var _utils2 = _interopRequireDefault(_utils);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var subscription = function subscription(type) {
  return function (options, callbacks) {
    return this.subscribe(type, options, callbacks);
  };
};

var RTSubscriptions = function () {
  function RTSubscriptions(_ref) {
    var onMessage = _ref.onMessage,
        emitMessage = _ref.emitMessage;

    _classCallCheck(this, RTSubscriptions);

    this.onObjectsChanges = subscription(_constants.RTSubscriptionTypes.OBJECTS_CHANGES).bind(this);
    this.connectToPubSub = subscription(_constants.RTSubscriptionTypes.PUB_SUB_CONNECT).bind(this);
    this.onPubSubMessage = subscription(_constants.RTSubscriptionTypes.PUB_SUB_MESSAGES).bind(this);
    this.onPubSubCommand = subscription(_constants.RTSubscriptionTypes.PUB_SUB_COMMANDS).bind(this);
    this.onPubSubUserStatus = subscription(_constants.RTSubscriptionTypes.PUB_SUB_USERS).bind(this);
    this.connectToRSO = subscription(_constants.RTSubscriptionTypes.RSO_CONNECT).bind(this);
    this.onRSOChanges = subscription(_constants.RTSubscriptionTypes.RSO_CHANGES).bind(this);
    this.onRSOClear = subscription(_constants.RTSubscriptionTypes.RSO_CLEARED).bind(this);
    this.onRSOCommand = subscription(_constants.RTSubscriptionTypes.RSO_COMMANDS).bind(this);
    this.onRSOInvoke = subscription(_constants.RTSubscriptionTypes.RSO_INVOKE).bind(this);
    this.onRSOUserStatus = subscription(_constants.RTSubscriptionTypes.RSO_USERS).bind(this);
    this.onLoggingMessages = subscription(_constants.RTSubscriptionTypes.LOGGING_MESSAGES).bind(this);
    this.onConsoleMessages = subscription(_constants.RTSubscriptionTypes.CONSOLE_MESSAGES).bind(this);
    this.onDeveloperMessage = subscription(_constants.RTSubscriptionTypes.DEVELOPER_MESSAGES).bind(this);

    this.onMessage = onMessage;
    this.emitMessage = emitMessage;

    this.subscriptions = {};
  }

  _createClass(RTSubscriptions, [{
    key: 'initialize',
    value: function initialize() {
      var _this = this;

      this.onMessage(_constants.RTSocketEvents.SUB_READY, function (data) {
        return _this.onSubscriptionReady(data);
      });
      this.onMessage(_constants.RTSocketEvents.SUB_RES, function (data) {
        return _this.onSubscriptionResponse(data);
      });
    }
  }, {
    key: 'stop',
    value: function stop() {
      var _this2 = this;

      Object.keys(this.subscriptions).forEach(function (subscriptionId) {
        _this2.subscriptions[subscriptionId].ready = false;
      });
    }
  }, {
    key: 'reset',
    value: function reset() {
      var _this3 = this;

      Object.keys(this.subscriptions).forEach(function (subscriptionId) {
        return _this3.stopSubscription(subscriptionId);
      });
    }
  }, {
    key: 'restore',
    value: function restore() {
      var _this4 = this;

      Object.keys(this.subscriptions).forEach(function (subscriptionId) {
        _this4.startSubscription(subscriptionId);
      });
    }
  }, {
    key: 'hasActivity',
    value: function hasActivity() {
      return !!Object.keys(this.subscriptions).length;
    }
  }, {
    key: 'subscribe',
    value: function subscribe(name, options, _ref2) {
      var _this5 = this;

      var parser = _ref2.parser,
          onData = _ref2.onData,
          onError = _ref2.onError,
          onStop = _ref2.onStop,
          onReady = _ref2.onReady;

      var subscriptionId = _utils2.default.generateUID();

      this.subscriptions[subscriptionId] = {
        data: { id: subscriptionId, name: name, options: options },
        ready: false,
        parser: parser,
        onData: onData,
        onError: onError,
        onStop: onStop,
        onReady: onReady
      };

      this.startSubscription(subscriptionId);

      return {
        isReady: function isReady() {
          return !!_this5.subscriptions[subscriptionId] && _this5.subscriptions[subscriptionId].ready;
        },

        stop: function stop() {
          if (_this5.subscriptions[subscriptionId]) {
            _this5.offSubscription(subscriptionId);
          }
        }
      };
    }
  }, {
    key: 'startSubscription',
    value: function startSubscription(subscriptionId) {
      var subscription = this.subscriptions[subscriptionId];

      this.emitMessage(_constants.RTSocketEvents.SUB_ON, subscription.data);
    }
  }, {
    key: 'stopSubscription',
    value: function stopSubscription(subscriptionId) {
      var subscription = this.subscriptions[subscriptionId];

      if (subscription) {
        if (subscription.onStop) {
          subscription.onStop();
        }

        delete this.subscriptions[subscriptionId];
      }
    }
  }, {
    key: 'offSubscription',
    value: function offSubscription(subscriptionId) {
      var subscription = this.subscriptions[subscriptionId];

      if (subscription) {
        this.emitMessage(_constants.RTSocketEvents.SUB_OFF, { id: subscriptionId });

        this.stopSubscription(subscriptionId);
      }
    }
  }, {
    key: 'onSubscriptionReady',
    value: function onSubscriptionReady(_ref3) {
      var id = _ref3.id;

      var subscription = this.subscriptions[id];

      if (subscription && !subscription.ready) {
        subscription.ready = true;

        if (subscription.onReady) {
          subscription.onReady();
        }
      }
    }
  }, {
    key: 'onSubscriptionResponse',

    /***** CONSOLE SUBSCRIPTIONS ****** **/
    /***************************************** **/

    /** CONSOLE's SUBSCRIPTIONS **************************************************** **/
    /******************************************************************************* **/
    /******************************************************************************* **/
    value: function onSubscriptionResponse(_ref4) {
      var id = _ref4.id,
          data = _ref4.data,
          error = _ref4.error;

      var subscription = this.subscriptions[id];

      if (subscription) {
        if (error) {

          if (subscription.onError) {
            subscription.onError(error);
          }

          this.stopSubscription(id);
        } else {
          if (!subscription.ready) {
            subscription.ready = true;

            if (subscription.onReady) {
              subscription.onReady();
            }
          }

          if (subscription.onData) {
            if (typeof subscription.parser === 'function') {
              data = subscription.parser(data);
            }

            subscription.onData(data);
          }
        }
      }
    }

    /******************************************************************************* **/
    /******************************************************************************* **/
    /** COMMON SUBSCRIPTIONS ******************************************************** **/

    /***************************************** **/
    /***** DATA SUBSCRIPTIONS **************** **/
    /** */
    /***** DATA SUBSCRIPTIONS **************** **/
    /***************************************** **/

    /***************************************** **/
    /***** PUB_SUB SUBSCRIPTIONS ************* **/
    /** */
    /** */
    /** */
    /** */
    /***** PUB_SUB SUBSCRIPTIONS ************* **/
    /***************************************** **/

    /***************************************** **/
    /***** RSO SUBSCRIPTIONS ***************** **/
    /** */
    /** */
    /** */
    /** */
    /** */
    /** */
    /***** RSO SUBSCRIPTIONS ***************** **/
    /***************************************** **/

    /** COMMON SUBSCRIPTIONS ******************************************************** **/
    /******************************************************************************* **/
    /******************************************************************************* **/

    /******************************************************************************* **/
    /******************************************************************************* **/
    /** CONSOLE's SUBSCRIPTIONS **************************************************** **/

    /***************************************** **/
    /***** LOGGING SUBSCRIPTIONS ****** **/
    /** */
    /***** LOGGING SUBSCRIPTIONS ****** **/
    /***************************************** **/

    /***************************************** **/
    /***** CONSOLE SUBSCRIPTIONS ****** **/
    /** */
    /** */
  }]);

  return RTSubscriptions;
}();

exports.default = RTSubscriptions;

/***/ }),
/* 26 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _constants = __webpack_require__(4);

var _utils = __webpack_require__(11);

var _utils2 = _interopRequireDefault(_utils);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var method = function method(type) {
  return function (data) {
    return this.send(type, data);
  };
};

var RTMethods = function () {
  function RTMethods(_ref) {
    var _this = this;

    var onMessage = _ref.onMessage,
        emitMessage = _ref.emitMessage;

    _classCallCheck(this, RTMethods);

    this.sendRequest = function (invocationId) {
      if (_this.invocations[invocationId]) {
        _this.emitMessage(_constants.RTSocketEvents.MET_REQ, _this.invocations[invocationId].data);
      }
    };

    this.onResponse = function (_ref2) {
      var id = _ref2.id,
          error = _ref2.error,
          result = _ref2.result;

      if (_this.invocations[id]) {
        var invocation = _this.invocations[id];

        if (error) {
          invocation.reject(error);
        } else {
          invocation.resolve(result);
        }

        delete _this.invocations[id];
      }
    };

    this.setUserToken = method(_constants.RTMethodTypes.SET_USER_TOKEN).bind(this);
    this.sendPubSubCommand = method(_constants.RTMethodTypes.PUB_SUB_COMMAND).bind(this);
    this.getRSO = method(_constants.RTMethodTypes.RSO_GET).bind(this);
    this.setRSO = method(_constants.RTMethodTypes.RSO_SET).bind(this);
    this.clearRSO = method(_constants.RTMethodTypes.RSO_CLEAR).bind(this);
    this.sendRSOCommand = method(_constants.RTMethodTypes.RSO_COMMAND).bind(this);
    this.invokeRSOMethod = method(_constants.RTMethodTypes.RSO_INVOKE).bind(this);

    this.onMessage = onMessage;
    this.emitMessage = emitMessage;

    this.invocations = {};
  }

  _createClass(RTMethods, [{
    key: 'initialize',
    value: function initialize() {
      this.onMessage(_constants.RTSocketEvents.MET_RES, this.onResponse);
    }
  }, {
    key: 'restore',
    value: function restore() {
      var _this2 = this;

      Object.keys(this.invocations).forEach(function (invocationId) {
        _this2.sendRequest(invocationId);
      });
    }
  }, {
    key: 'stop',
    value: function stop() {}
  }, {
    key: 'reset',
    value: function reset() {
      this.invocations = {};
    }
  }, {
    key: 'hasActivity',
    value: function hasActivity() {
      return !!Object.keys(this.invocations).length;
    }
  }, {
    key: 'send',


    //----------- RSO METHODS ---------//
    //---------------------------------//
    value: function send(name, options) {
      var _this3 = this;

      var invocationId = _utils2.default.generateUID();

      this.invocations[invocationId] = {
        data: { id: invocationId, name: name, options: options }
      };

      this.sendRequest(invocationId);

      return new Promise(function (resolve, reject) {
        _this3.invocations[invocationId].resolve = resolve;
        _this3.invocations[invocationId].reject = reject;
      });
    }

    //---------------------------------//
    //----------- AUTH METHODS --------//

    //----------- AUTH METHODS --------//
    //---------------------------------//

    //---------------------------------//
    //-------- PUB_SUB METHODS --------//

    //-------- PUB_SUB METHODS --------//
    //---------------------------------//

    //---------------------------------//
    //----------- RSO METHODS ---------//

  }]);

  return RTMethods;
}();

exports.default = RTMethods;

/***/ }),
/* 27 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _constants = __webpack_require__(4);

var _socket = __webpack_require__(28);

var _socket2 = _interopRequireDefault(_socket);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var INCREASE_RECONNECTION_TIMEOUT_STEP = 10;
var INITIAL_RECONNECTION_TIMEOUT = 200;
var MAX_RECONNECTION_TIMEOUT = 60 * 1000; // a minute

var wait = function wait(milliseconds) {
  return new Promise(function (resolve) {
    return setTimeout(resolve, milliseconds);
  });
};

var RTSession = function () {
  function RTSession(config, dispatch, onDisconnect) {
    _classCallCheck(this, RTSession);

    this.config = config;
    this.dispatch = dispatch;
    this.onDisconnect = onDisconnect;

    this.connectAttempt = 0;

    this.socketPromise = this.connect();
  }

  _createClass(RTSession, [{
    key: 'terminate',
    value: function terminate() {
      if (!this.terminated) {
        this.terminated = true;

        this.dispatch = function () {
          //if sessions has been terminated don't need to dispatch any events
        };

        this.socketPromise.then(function (rtSocket) {
          if (rtSocket) {
            rtSocket.close();
          }
        });
      }
    }
  }, {
    key: 'getSocket',
    value: function getSocket() {
      var _this = this;

      return this.socketPromise.then(function (rtSocket) {
        if (_this.terminated) {
          return new Promise(function () {
            //return unresolvable promise for preventing errors
            //this connection session has been terminated and a new one will be created if it necessary
          });
        }

        return rtSocket;
      });
    }
  }, {
    key: 'connect',
    value: function connect() {
      var _this2 = this;

      if (this.terminated) {
        return;
      }

      this.connectAttempt = this.connectAttempt + 1;

      var nextReconnectionTimeout = this.getNextReconnectionTimeout();

      this.onConnecting();

      if (this.connectAttempt > 1) {
        this.onReconnectAttempt(this.connectAttempt - 1, nextReconnectionTimeout);
      }

      return _socket2.default.connect(this.config, this.onSocketDisconnect.bind(this)).then(function (rtSocket) {
        _this2.connectAttempt = 0;

        _this2.onConnect();

        return rtSocket;
      }).catch(function (error) {
        _this2.onConnectError(error);

        if (!_this2.terminated) {
          // wait for 400|800|1600|...|MAX_RECONNECTION_TIMEOUT milliseconds
          return wait(nextReconnectionTimeout).then(function () {
            return _this2.connect();
          });
        }
      });
    }
  }, {
    key: 'getNextReconnectionTimeout',
    value: function getNextReconnectionTimeout() {
      var factor = Math.ceil(this.connectAttempt / INCREASE_RECONNECTION_TIMEOUT_STEP);
      var timeout = INITIAL_RECONNECTION_TIMEOUT * Math.pow(2, factor);

      return Math.min(timeout, MAX_RECONNECTION_TIMEOUT);
    }
  }, {
    key: 'onSocketDisconnect',
    value: function onSocketDisconnect(reason) {
      this.dispatch(_constants.NativeSocketEvents.DISCONNECT, reason);

      if (!this.terminated) {
        this.terminate();

        this.onDisconnect();
      }
    }
  }, {
    key: 'onConnecting',
    value: function onConnecting() {
      this.dispatch(_constants.NativeSocketEvents.CONNECTING);
    }
  }, {
    key: 'onConnect',
    value: function onConnect() {
      this.dispatch(_constants.NativeSocketEvents.CONNECT);
    }
  }, {
    key: 'onConnectError',
    value: function onConnectError(error) {
      this.dispatch(_constants.NativeSocketEvents.CONNECT_ERROR, error && error.message || error);
    }
  }, {
    key: 'onReconnectAttempt',
    value: function onReconnectAttempt(attempt, timeout) {
      this.dispatch(_constants.NativeSocketEvents.RECONNECT_ATTEMPT, attempt, timeout);
    }
  }]);

  return RTSession;
}();

exports.default = RTSession;

/***/ }),
/* 28 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _constants = __webpack_require__(4);

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var RTSocket = function () {
  _createClass(RTSocket, null, [{
    key: 'connect',
    value: function connect(config, onDisconnect) {
      var Request = __webpack_require__(10);

      if (!config.lookupPath) {
        throw new Error('config.lookupPath is not configured');
      }

      return Request.get(config.lookupPath).set(config.lookupHeaders).then(function (rtServerHost) {
        return new Promise(function (resolve, reject) {
          var rtSocket = new RTSocket(config, rtServerHost);

          rtSocket.on(_constants.NativeSocketEvents.CONNECT, onConnect);
          rtSocket.on(_constants.NativeSocketEvents.CONNECT_ERROR, onError);
          rtSocket.on(_constants.NativeSocketEvents.CONNECT_TIMEOUT, onError);
          rtSocket.on(_constants.NativeSocketEvents.ERROR, onError);

          rtSocket.connect();

          function onConnect() {
            resolve(rtSocket);
          }

          function onError(error) {
            rtSocket.close();

            reject(error);
          }
        });
      }).then(function (rtSocket) {
        rtSocket.on(_constants.NativeSocketEvents.DISCONNECT, onDisconnect);

        return rtSocket;
      });
    }
  }]);

  function RTSocket(config, host) {
    _classCallCheck(this, RTSocket);

    var io = __webpack_require__(29);

    this.config = config;

    this.events = {};

    if (!config.appId) {
      throw new Error('config.appId is not configured');
    }

    this.ioSocket = io(host + '/' + this.config.appId, {
      forceNew: true,
      autoConnect: false,
      reconnection: false,
      path: '/' + this.config.appId,
      query: this.config.getConnectQuery()
    });
  }

  _createClass(RTSocket, [{
    key: 'connect',
    value: function connect() {
      this.ioSocket.connect();
    }
  }, {
    key: 'close',
    value: function close() {
      this.events = {};
      this.ioSocket.off();
      this.ioSocket.close();
    }
  }, {
    key: 'on',
    value: function on(event, callback) {
      var _this = this;

      if (!this.events[event]) {
        this.ioSocket.on(event, function (data) {
          return _this.onEvent(event, data);
        });
      }

      this.events[event] = this.events[event] || [];
      this.events[event].push(callback);
    }
  }, {
    key: 'off',
    value: function off(event, callback) {
      this.events[event] = callback ? this.events[event].filter(function (f) {
        return f !== callback;
      }) : [];

      if (!this.events[event].length) {
        delete this.events[event];
      }

      if (!this.events[event]) {
        this.ioSocket.off(event);
      }
    }
  }, {
    key: 'onEvent',
    value: function onEvent(event, data) {
      if (this.config.debugMode) {
        logMessage('FROM SERVER', event, data);
      }

      if (this.events[event]) {
        this.events[event].forEach(function (callback) {
          return callback(data);
        });
      }
    }
  }, {
    key: 'emit',
    value: function emit(event, data) {
      if (this.config.debugMode) {
        logMessage('TO SERVER', event, data);
      }

      this.ioSocket.emit(event, data);
    }
  }]);

  return RTSocket;
}();

exports.default = RTSocket;


function logMessage(type, event, data) {
  // eslint-disable-next-line
  console.log('[' + type + '] - [event: ' + event + '] - arguments: ' + JSON.stringify(data) + ' ');
}

/***/ }),
/* 29 */
/***/ (function(module, exports, __webpack_require__) {


/**
 * Module dependencies.
 */

var url = __webpack_require__(30);
var parser = __webpack_require__(7);
var Manager = __webpack_require__(13);
var debug = __webpack_require__(1)('socket.io-client');

/**
 * Module exports.
 */

module.exports = exports = lookup;

/**
 * Managers cache.
 */

var cache = exports.managers = {};

/**
 * Looks up an existing `Manager` for multiplexing.
 * If the user summons:
 *
 *   `io('http://localhost/a');`
 *   `io('http://localhost/b');`
 *
 * We reuse the existing instance based on same scheme/port/host,
 * and we initialize sockets for each namespace.
 *
 * @api public
 */

function lookup (uri, opts) {
  if (typeof uri === 'object') {
    opts = uri;
    uri = undefined;
  }

  opts = opts || {};

  var parsed = url(uri);
  var source = parsed.source;
  var id = parsed.id;
  var path = parsed.path;
  var sameNamespace = cache[id] && path in cache[id].nsps;
  var newConnection = opts.forceNew || opts['force new connection'] ||
                      false === opts.multiplex || sameNamespace;

  var io;

  if (newConnection) {
    debug('ignoring socket cache for %s', source);
    io = Manager(source, opts);
  } else {
    if (!cache[id]) {
      debug('new io instance for %s', source);
      cache[id] = Manager(source, opts);
    }
    io = cache[id];
  }
  if (parsed.query && !opts.query) {
    opts.query = parsed.query;
  }
  return io.socket(parsed.path, opts);
}

/**
 * Protocol version.
 *
 * @api public
 */

exports.protocol = parser.protocol;

/**
 * `connect`.
 *
 * @param {String} uri
 * @api public
 */

exports.connect = lookup;

/**
 * Expose constructors for standalone build.
 *
 * @api public
 */

exports.Manager = __webpack_require__(13);
exports.Socket = __webpack_require__(18);


/***/ }),
/* 30 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {
/**
 * Module dependencies.
 */

var parseuri = __webpack_require__(12);
var debug = __webpack_require__(1)('socket.io-client:url');

/**
 * Module exports.
 */

module.exports = url;

/**
 * URL parser.
 *
 * @param {String} url
 * @param {Object} An object meant to mimic window.location.
 *                 Defaults to window.location.
 * @api public
 */

function url (uri, loc) {
  var obj = uri;

  // default to window.location
  loc = loc || global.location;
  if (null == uri) uri = loc.protocol + '//' + loc.host;

  // relative path support
  if ('string' === typeof uri) {
    if ('/' === uri.charAt(0)) {
      if ('/' === uri.charAt(1)) {
        uri = loc.protocol + uri;
      } else {
        uri = loc.host + uri;
      }
    }

    if (!/^(https?|wss?):\/\//.test(uri)) {
      debug('protocol-less url %s', uri);
      if ('undefined' !== typeof loc) {
        uri = loc.protocol + '//' + uri;
      } else {
        uri = 'https://' + uri;
      }
    }

    // parse
    debug('parse %s', uri);
    obj = parseuri(uri);
  }

  // make sure we treat `localhost:80` and `localhost` equally
  if (!obj.port) {
    if (/^(http|ws)$/.test(obj.protocol)) {
      obj.port = '80';
    } else if (/^(http|ws)s$/.test(obj.protocol)) {
      obj.port = '443';
    }
  }

  obj.path = obj.path || '/';

  var ipv6 = obj.host.indexOf(':') !== -1;
  var host = ipv6 ? '[' + obj.host + ']' : obj.host;

  // define unique id
  obj.id = obj.protocol + '://' + host + ':' + obj.port;
  // define href
  obj.href = obj.protocol + '://' + host + (loc && loc.port === obj.port ? '' : (':' + obj.port));

  return obj;
}

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 31 */
/***/ (function(module, exports) {

// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) { return [] }

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };


/***/ }),
/* 32 */
/***/ (function(module, exports, __webpack_require__) {


/**
 * This is the common logic for both the Node.js and web browser
 * implementations of `debug()`.
 *
 * Expose `debug()` as the module.
 */

exports = module.exports = createDebug.debug = createDebug['default'] = createDebug;
exports.coerce = coerce;
exports.disable = disable;
exports.enable = enable;
exports.enabled = enabled;
exports.humanize = __webpack_require__(33);

/**
 * The currently active debug mode names, and names to skip.
 */

exports.names = [];
exports.skips = [];

/**
 * Map of special "%n" handling functions, for the debug "format" argument.
 *
 * Valid key names are a single, lower or upper-case letter, i.e. "n" and "N".
 */

exports.formatters = {};

/**
 * Previous log timestamp.
 */

var prevTime;

/**
 * Select a color.
 * @param {String} namespace
 * @return {Number}
 * @api private
 */

function selectColor(namespace) {
  var hash = 0, i;

  for (i in namespace) {
    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);
    hash |= 0; // Convert to 32bit integer
  }

  return exports.colors[Math.abs(hash) % exports.colors.length];
}

/**
 * Create a debugger with the given `namespace`.
 *
 * @param {String} namespace
 * @return {Function}
 * @api public
 */

function createDebug(namespace) {

  function debug() {
    // disabled?
    if (!debug.enabled) return;

    var self = debug;

    // set `diff` timestamp
    var curr = +new Date();
    var ms = curr - (prevTime || curr);
    self.diff = ms;
    self.prev = prevTime;
    self.curr = curr;
    prevTime = curr;

    // turn the `arguments` into a proper Array
    var args = new Array(arguments.length);
    for (var i = 0; i < args.length; i++) {
      args[i] = arguments[i];
    }

    args[0] = exports.coerce(args[0]);

    if ('string' !== typeof args[0]) {
      // anything else let's inspect with %O
      args.unshift('%O');
    }

    // apply any `formatters` transformations
    var index = 0;
    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {
      // if we encounter an escaped % then don't increase the array index
      if (match === '%%') return match;
      index++;
      var formatter = exports.formatters[format];
      if ('function' === typeof formatter) {
        var val = args[index];
        match = formatter.call(self, val);

        // now we need to remove `args[index]` since it's inlined in the `format`
        args.splice(index, 1);
        index--;
      }
      return match;
    });

    // apply env-specific formatting (colors, etc.)
    exports.formatArgs.call(self, args);

    var logFn = debug.log || exports.log || console.log.bind(console);
    logFn.apply(self, args);
  }

  debug.namespace = namespace;
  debug.enabled = exports.enabled(namespace);
  debug.useColors = exports.useColors();
  debug.color = selectColor(namespace);

  // env-specific initialization logic for debug instances
  if ('function' === typeof exports.init) {
    exports.init(debug);
  }

  return debug;
}

/**
 * Enables a debug mode by namespaces. This can include modes
 * separated by a colon and wildcards.
 *
 * @param {String} namespaces
 * @api public
 */

function enable(namespaces) {
  exports.save(namespaces);

  exports.names = [];
  exports.skips = [];

  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\s,]+/);
  var len = split.length;

  for (var i = 0; i < len; i++) {
    if (!split[i]) continue; // ignore empty strings
    namespaces = split[i].replace(/\*/g, '.*?');
    if (namespaces[0] === '-') {
      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));
    } else {
      exports.names.push(new RegExp('^' + namespaces + '$'));
    }
  }
}

/**
 * Disable debug output.
 *
 * @api public
 */

function disable() {
  exports.enable('');
}

/**
 * Returns true if the given mode name is enabled, false otherwise.
 *
 * @param {String} name
 * @return {Boolean}
 * @api public
 */

function enabled(name) {
  var i, len;
  for (i = 0, len = exports.skips.length; i < len; i++) {
    if (exports.skips[i].test(name)) {
      return false;
    }
  }
  for (i = 0, len = exports.names.length; i < len; i++) {
    if (exports.names[i].test(name)) {
      return true;
    }
  }
  return false;
}

/**
 * Coerce `val`.
 *
 * @param {Mixed} val
 * @return {Mixed}
 * @api private
 */

function coerce(val) {
  if (val instanceof Error) return val.stack || val.message;
  return val;
}


/***/ }),
/* 33 */
/***/ (function(module, exports) {

/**
 * Helpers.
 */

var s = 1000;
var m = s * 60;
var h = m * 60;
var d = h * 24;
var y = d * 365.25;

/**
 * Parse or format the given `val`.
 *
 * Options:
 *
 *  - `long` verbose formatting [false]
 *
 * @param {String|Number} val
 * @param {Object} [options]
 * @throws {Error} throw an error if val is not a non-empty string or a number
 * @return {String|Number}
 * @api public
 */

module.exports = function(val, options) {
  options = options || {};
  var type = typeof val;
  if (type === 'string' && val.length > 0) {
    return parse(val);
  } else if (type === 'number' && isNaN(val) === false) {
    return options.long ? fmtLong(val) : fmtShort(val);
  }
  throw new Error(
    'val is not a non-empty string or a valid number. val=' +
      JSON.stringify(val)
  );
};

/**
 * Parse the given `str` and return milliseconds.
 *
 * @param {String} str
 * @return {Number}
 * @api private
 */

function parse(str) {
  str = String(str);
  if (str.length > 100) {
    return;
  }
  var match = /^((?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(
    str
  );
  if (!match) {
    return;
  }
  var n = parseFloat(match[1]);
  var type = (match[2] || 'ms').toLowerCase();
  switch (type) {
    case 'years':
    case 'year':
    case 'yrs':
    case 'yr':
    case 'y':
      return n * y;
    case 'days':
    case 'day':
    case 'd':
      return n * d;
    case 'hours':
    case 'hour':
    case 'hrs':
    case 'hr':
    case 'h':
      return n * h;
    case 'minutes':
    case 'minute':
    case 'mins':
    case 'min':
    case 'm':
      return n * m;
    case 'seconds':
    case 'second':
    case 'secs':
    case 'sec':
    case 's':
      return n * s;
    case 'milliseconds':
    case 'millisecond':
    case 'msecs':
    case 'msec':
    case 'ms':
      return n;
    default:
      return undefined;
  }
}

/**
 * Short format for `ms`.
 *
 * @param {Number} ms
 * @return {String}
 * @api private
 */

function fmtShort(ms) {
  if (ms >= d) {
    return Math.round(ms / d) + 'd';
  }
  if (ms >= h) {
    return Math.round(ms / h) + 'h';
  }
  if (ms >= m) {
    return Math.round(ms / m) + 'm';
  }
  if (ms >= s) {
    return Math.round(ms / s) + 's';
  }
  return ms + 'ms';
}

/**
 * Long format for `ms`.
 *
 * @param {Number} ms
 * @return {String}
 * @api private
 */

function fmtLong(ms) {
  return plural(ms, d, 'day') ||
    plural(ms, h, 'hour') ||
    plural(ms, m, 'minute') ||
    plural(ms, s, 'second') ||
    ms + ' ms';
}

/**
 * Pluralization helper.
 */

function plural(ms, n, name) {
  if (ms < n) {
    return;
  }
  if (ms < n * 1.5) {
    return Math.floor(ms / n) + ' ' + name;
  }
  return Math.ceil(ms / n) + ' ' + name + 's';
}


/***/ }),
/* 34 */
/***/ (function(module, exports, __webpack_require__) {


module.exports = __webpack_require__(35);

/**
 * Exports parser
 *
 * @api public
 *
 */
module.exports.parser = __webpack_require__(3);


/***/ }),
/* 35 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {/**
 * Module dependencies.
 */

var transports = __webpack_require__(14);
var Emitter = __webpack_require__(2);
var debug = __webpack_require__(1)('engine.io-client:socket');
var index = __webpack_require__(17);
var parser = __webpack_require__(3);
var parseuri = __webpack_require__(12);
var parseqs = __webpack_require__(5);

/**
 * Module exports.
 */

module.exports = Socket;

/**
 * Socket constructor.
 *
 * @param {String|Object} uri or options
 * @param {Object} options
 * @api public
 */

function Socket (uri, opts) {
  if (!(this instanceof Socket)) return new Socket(uri, opts);

  opts = opts || {};

  if (uri && 'object' === typeof uri) {
    opts = uri;
    uri = null;
  }

  if (uri) {
    uri = parseuri(uri);
    opts.hostname = uri.host;
    opts.secure = uri.protocol === 'https' || uri.protocol === 'wss';
    opts.port = uri.port;
    if (uri.query) opts.query = uri.query;
  } else if (opts.host) {
    opts.hostname = parseuri(opts.host).host;
  }

  this.secure = null != opts.secure ? opts.secure
    : (global.location && 'https:' === location.protocol);

  if (opts.hostname && !opts.port) {
    // if no port is specified manually, use the protocol default
    opts.port = this.secure ? '443' : '80';
  }

  this.agent = opts.agent || false;
  this.hostname = opts.hostname ||
    (global.location ? location.hostname : 'localhost');
  this.port = opts.port || (global.location && location.port
      ? location.port
      : (this.secure ? 443 : 80));
  this.query = opts.query || {};
  if ('string' === typeof this.query) this.query = parseqs.decode(this.query);
  this.upgrade = false !== opts.upgrade;
  this.path = (opts.path || '/engine.io').replace(/\/$/, '') + '/';
  this.forceJSONP = !!opts.forceJSONP;
  this.jsonp = false !== opts.jsonp;
  this.forceBase64 = !!opts.forceBase64;
  this.enablesXDR = !!opts.enablesXDR;
  this.timestampParam = opts.timestampParam || 't';
  this.timestampRequests = opts.timestampRequests;
  this.transports = opts.transports || ['polling', 'websocket'];
  this.transportOptions = opts.transportOptions || {};
  this.readyState = '';
  this.writeBuffer = [];
  this.prevBufferLen = 0;
  this.policyPort = opts.policyPort || 843;
  this.rememberUpgrade = opts.rememberUpgrade || false;
  this.binaryType = null;
  this.onlyBinaryUpgrades = opts.onlyBinaryUpgrades;
  this.perMessageDeflate = false !== opts.perMessageDeflate ? (opts.perMessageDeflate || {}) : false;

  if (true === this.perMessageDeflate) this.perMessageDeflate = {};
  if (this.perMessageDeflate && null == this.perMessageDeflate.threshold) {
    this.perMessageDeflate.threshold = 1024;
  }

  // SSL options for Node.js client
  this.pfx = opts.pfx || null;
  this.key = opts.key || null;
  this.passphrase = opts.passphrase || null;
  this.cert = opts.cert || null;
  this.ca = opts.ca || null;
  this.ciphers = opts.ciphers || null;
  this.rejectUnauthorized = opts.rejectUnauthorized === undefined ? true : opts.rejectUnauthorized;
  this.forceNode = !!opts.forceNode;

  // other options for Node.js client
  var freeGlobal = typeof global === 'object' && global;
  if (freeGlobal.global === freeGlobal) {
    if (opts.extraHeaders && Object.keys(opts.extraHeaders).length > 0) {
      this.extraHeaders = opts.extraHeaders;
    }

    if (opts.localAddress) {
      this.localAddress = opts.localAddress;
    }
  }

  // set on handshake
  this.id = null;
  this.upgrades = null;
  this.pingInterval = null;
  this.pingTimeout = null;

  // set on heartbeat
  this.pingIntervalTimer = null;
  this.pingTimeoutTimer = null;

  this.open();
}

Socket.priorWebsocketSuccess = false;

/**
 * Mix in `Emitter`.
 */

Emitter(Socket.prototype);

/**
 * Protocol version.
 *
 * @api public
 */

Socket.protocol = parser.protocol; // this is an int

/**
 * Expose deps for legacy compatibility
 * and standalone browser access.
 */

Socket.Socket = Socket;
Socket.Transport = __webpack_require__(9);
Socket.transports = __webpack_require__(14);
Socket.parser = __webpack_require__(3);

/**
 * Creates transport of the given type.
 *
 * @param {String} transport name
 * @return {Transport}
 * @api private
 */

Socket.prototype.createTransport = function (name) {
  debug('creating transport "%s"', name);
  var query = clone(this.query);

  // append engine.io protocol identifier
  query.EIO = parser.protocol;

  // transport name
  query.transport = name;

  // per-transport options
  var options = this.transportOptions[name] || {};

  // session id if we already have one
  if (this.id) query.sid = this.id;

  var transport = new transports[name]({
    query: query,
    socket: this,
    agent: options.agent || this.agent,
    hostname: options.hostname || this.hostname,
    port: options.port || this.port,
    secure: options.secure || this.secure,
    path: options.path || this.path,
    forceJSONP: options.forceJSONP || this.forceJSONP,
    jsonp: options.jsonp || this.jsonp,
    forceBase64: options.forceBase64 || this.forceBase64,
    enablesXDR: options.enablesXDR || this.enablesXDR,
    timestampRequests: options.timestampRequests || this.timestampRequests,
    timestampParam: options.timestampParam || this.timestampParam,
    policyPort: options.policyPort || this.policyPort,
    pfx: options.pfx || this.pfx,
    key: options.key || this.key,
    passphrase: options.passphrase || this.passphrase,
    cert: options.cert || this.cert,
    ca: options.ca || this.ca,
    ciphers: options.ciphers || this.ciphers,
    rejectUnauthorized: options.rejectUnauthorized || this.rejectUnauthorized,
    perMessageDeflate: options.perMessageDeflate || this.perMessageDeflate,
    extraHeaders: options.extraHeaders || this.extraHeaders,
    forceNode: options.forceNode || this.forceNode,
    localAddress: options.localAddress || this.localAddress,
    requestTimeout: options.requestTimeout || this.requestTimeout,
    protocols: options.protocols || void (0)
  });

  return transport;
};

function clone (obj) {
  var o = {};
  for (var i in obj) {
    if (obj.hasOwnProperty(i)) {
      o[i] = obj[i];
    }
  }
  return o;
}

/**
 * Initializes transport to use and starts probe.
 *
 * @api private
 */
Socket.prototype.open = function () {
  var transport;
  if (this.rememberUpgrade && Socket.priorWebsocketSuccess && this.transports.indexOf('websocket') !== -1) {
    transport = 'websocket';
  } else if (0 === this.transports.length) {
    // Emit error on next tick so it can be listened to
    var self = this;
    setTimeout(function () {
      self.emit('error', 'No transports available');
    }, 0);
    return;
  } else {
    transport = this.transports[0];
  }
  this.readyState = 'opening';

  // Retry with the next transport if the transport is disabled (jsonp: false)
  try {
    transport = this.createTransport(transport);
  } catch (e) {
    this.transports.shift();
    this.open();
    return;
  }

  transport.open();
  this.setTransport(transport);
};

/**
 * Sets the current transport. Disables the existing one (if any).
 *
 * @api private
 */

Socket.prototype.setTransport = function (transport) {
  debug('setting transport %s', transport.name);
  var self = this;

  if (this.transport) {
    debug('clearing existing transport %s', this.transport.name);
    this.transport.removeAllListeners();
  }

  // set up transport
  this.transport = transport;

  // set up transport listeners
  transport
  .on('drain', function () {
    self.onDrain();
  })
  .on('packet', function (packet) {
    self.onPacket(packet);
  })
  .on('error', function (e) {
    self.onError(e);
  })
  .on('close', function () {
    self.onClose('transport close');
  });
};

/**
 * Probes a transport.
 *
 * @param {String} transport name
 * @api private
 */

Socket.prototype.probe = function (name) {
  debug('probing transport "%s"', name);
  var transport = this.createTransport(name, { probe: 1 });
  var failed = false;
  var self = this;

  Socket.priorWebsocketSuccess = false;

  function onTransportOpen () {
    if (self.onlyBinaryUpgrades) {
      var upgradeLosesBinary = !this.supportsBinary && self.transport.supportsBinary;
      failed = failed || upgradeLosesBinary;
    }
    if (failed) return;

    debug('probe transport "%s" opened', name);
    transport.send([{ type: 'ping', data: 'probe' }]);
    transport.once('packet', function (msg) {
      if (failed) return;
      if ('pong' === msg.type && 'probe' === msg.data) {
        debug('probe transport "%s" pong', name);
        self.upgrading = true;
        self.emit('upgrading', transport);
        if (!transport) return;
        Socket.priorWebsocketSuccess = 'websocket' === transport.name;

        debug('pausing current transport "%s"', self.transport.name);
        self.transport.pause(function () {
          if (failed) return;
          if ('closed' === self.readyState) return;
          debug('changing transport and sending upgrade packet');

          cleanup();

          self.setTransport(transport);
          transport.send([{ type: 'upgrade' }]);
          self.emit('upgrade', transport);
          transport = null;
          self.upgrading = false;
          self.flush();
        });
      } else {
        debug('probe transport "%s" failed', name);
        var err = new Error('probe error');
        err.transport = transport.name;
        self.emit('upgradeError', err);
      }
    });
  }

  function freezeTransport () {
    if (failed) return;

    // Any callback called by transport should be ignored since now
    failed = true;

    cleanup();

    transport.close();
    transport = null;
  }

  // Handle any error that happens while probing
  function onerror (err) {
    var error = new Error('probe error: ' + err);
    error.transport = transport.name;

    freezeTransport();

    debug('probe transport "%s" failed because of error: %s', name, err);

    self.emit('upgradeError', error);
  }

  function onTransportClose () {
    onerror('transport closed');
  }

  // When the socket is closed while we're probing
  function onclose () {
    onerror('socket closed');
  }

  // When the socket is upgraded while we're probing
  function onupgrade (to) {
    if (transport && to.name !== transport.name) {
      debug('"%s" works - aborting "%s"', to.name, transport.name);
      freezeTransport();
    }
  }

  // Remove all listeners on the transport and on self
  function cleanup () {
    transport.removeListener('open', onTransportOpen);
    transport.removeListener('error', onerror);
    transport.removeListener('close', onTransportClose);
    self.removeListener('close', onclose);
    self.removeListener('upgrading', onupgrade);
  }

  transport.once('open', onTransportOpen);
  transport.once('error', onerror);
  transport.once('close', onTransportClose);

  this.once('close', onclose);
  this.once('upgrading', onupgrade);

  transport.open();
};

/**
 * Called when connection is deemed open.
 *
 * @api public
 */

Socket.prototype.onOpen = function () {
  debug('socket open');
  this.readyState = 'open';
  Socket.priorWebsocketSuccess = 'websocket' === this.transport.name;
  this.emit('open');
  this.flush();

  // we check for `readyState` in case an `open`
  // listener already closed the socket
  if ('open' === this.readyState && this.upgrade && this.transport.pause) {
    debug('starting upgrade probes');
    for (var i = 0, l = this.upgrades.length; i < l; i++) {
      this.probe(this.upgrades[i]);
    }
  }
};

/**
 * Handles a packet.
 *
 * @api private
 */

Socket.prototype.onPacket = function (packet) {
  if ('opening' === this.readyState || 'open' === this.readyState ||
      'closing' === this.readyState) {
    debug('socket receive: type "%s", data "%s"', packet.type, packet.data);

    this.emit('packet', packet);

    // Socket is live - any packet counts
    this.emit('heartbeat');

    switch (packet.type) {
      case 'open':
        this.onHandshake(JSON.parse(packet.data));
        break;

      case 'pong':
        this.setPing();
        this.emit('pong');
        break;

      case 'error':
        var err = new Error('server error');
        err.code = packet.data;
        this.onError(err);
        break;

      case 'message':
        this.emit('data', packet.data);
        this.emit('message', packet.data);
        break;
    }
  } else {
    debug('packet received with socket readyState "%s"', this.readyState);
  }
};

/**
 * Called upon handshake completion.
 *
 * @param {Object} handshake obj
 * @api private
 */

Socket.prototype.onHandshake = function (data) {
  this.emit('handshake', data);
  this.id = data.sid;
  this.transport.query.sid = data.sid;
  this.upgrades = this.filterUpgrades(data.upgrades);
  this.pingInterval = data.pingInterval;
  this.pingTimeout = data.pingTimeout;
  this.onOpen();
  // In case open handler closes socket
  if ('closed' === this.readyState) return;
  this.setPing();

  // Prolong liveness of socket on heartbeat
  this.removeListener('heartbeat', this.onHeartbeat);
  this.on('heartbeat', this.onHeartbeat);
};

/**
 * Resets ping timeout.
 *
 * @api private
 */

Socket.prototype.onHeartbeat = function (timeout) {
  clearTimeout(this.pingTimeoutTimer);
  var self = this;
  self.pingTimeoutTimer = setTimeout(function () {
    if ('closed' === self.readyState) return;
    self.onClose('ping timeout');
  }, timeout || (self.pingInterval + self.pingTimeout));
};

/**
 * Pings server every `this.pingInterval` and expects response
 * within `this.pingTimeout` or closes connection.
 *
 * @api private
 */

Socket.prototype.setPing = function () {
  var self = this;
  clearTimeout(self.pingIntervalTimer);
  self.pingIntervalTimer = setTimeout(function () {
    debug('writing ping packet - expecting pong within %sms', self.pingTimeout);
    self.ping();
    self.onHeartbeat(self.pingTimeout);
  }, self.pingInterval);
};

/**
* Sends a ping packet.
*
* @api private
*/

Socket.prototype.ping = function () {
  var self = this;
  this.sendPacket('ping', function () {
    self.emit('ping');
  });
};

/**
 * Called on `drain` event
 *
 * @api private
 */

Socket.prototype.onDrain = function () {
  this.writeBuffer.splice(0, this.prevBufferLen);

  // setting prevBufferLen = 0 is very important
  // for example, when upgrading, upgrade packet is sent over,
  // and a nonzero prevBufferLen could cause problems on `drain`
  this.prevBufferLen = 0;

  if (0 === this.writeBuffer.length) {
    this.emit('drain');
  } else {
    this.flush();
  }
};

/**
 * Flush write buffers.
 *
 * @api private
 */

Socket.prototype.flush = function () {
  if ('closed' !== this.readyState && this.transport.writable &&
    !this.upgrading && this.writeBuffer.length) {
    debug('flushing %d packets in socket', this.writeBuffer.length);
    this.transport.send(this.writeBuffer);
    // keep track of current length of writeBuffer
    // splice writeBuffer and callbackBuffer on `drain`
    this.prevBufferLen = this.writeBuffer.length;
    this.emit('flush');
  }
};

/**
 * Sends a message.
 *
 * @param {String} message.
 * @param {Function} callback function.
 * @param {Object} options.
 * @return {Socket} for chaining.
 * @api public
 */

Socket.prototype.write =
Socket.prototype.send = function (msg, options, fn) {
  this.sendPacket('message', msg, options, fn);
  return this;
};

/**
 * Sends a packet.
 *
 * @param {String} packet type.
 * @param {String} data.
 * @param {Object} options.
 * @param {Function} callback function.
 * @api private
 */

Socket.prototype.sendPacket = function (type, data, options, fn) {
  if ('function' === typeof data) {
    fn = data;
    data = undefined;
  }

  if ('function' === typeof options) {
    fn = options;
    options = null;
  }

  if ('closing' === this.readyState || 'closed' === this.readyState) {
    return;
  }

  options = options || {};
  options.compress = false !== options.compress;

  var packet = {
    type: type,
    data: data,
    options: options
  };
  this.emit('packetCreate', packet);
  this.writeBuffer.push(packet);
  if (fn) this.once('flush', fn);
  this.flush();
};

/**
 * Closes the connection.
 *
 * @api private
 */

Socket.prototype.close = function () {
  if ('opening' === this.readyState || 'open' === this.readyState) {
    this.readyState = 'closing';

    var self = this;

    if (this.writeBuffer.length) {
      this.once('drain', function () {
        if (this.upgrading) {
          waitForUpgrade();
        } else {
          close();
        }
      });
    } else if (this.upgrading) {
      waitForUpgrade();
    } else {
      close();
    }
  }

  function close () {
    self.onClose('forced close');
    debug('socket closing - telling transport to close');
    self.transport.close();
  }

  function cleanupAndClose () {
    self.removeListener('upgrade', cleanupAndClose);
    self.removeListener('upgradeError', cleanupAndClose);
    close();
  }

  function waitForUpgrade () {
    // wait for upgrade to finish since we can't send packets while pausing a transport
    self.once('upgrade', cleanupAndClose);
    self.once('upgradeError', cleanupAndClose);
  }

  return this;
};

/**
 * Called upon transport error
 *
 * @api private
 */

Socket.prototype.onError = function (err) {
  debug('socket error %j', err);
  Socket.priorWebsocketSuccess = false;
  this.emit('error', err);
  this.onClose('transport error', err);
};

/**
 * Called upon transport close.
 *
 * @api private
 */

Socket.prototype.onClose = function (reason, desc) {
  if ('opening' === this.readyState || 'open' === this.readyState || 'closing' === this.readyState) {
    debug('socket close with reason: "%s"', reason);
    var self = this;

    // clear timers
    clearTimeout(this.pingIntervalTimer);
    clearTimeout(this.pingTimeoutTimer);

    // stop event from firing again for transport
    this.transport.removeAllListeners('close');

    // ensure transport won't stay open
    this.transport.close();

    // ignore further transport communication
    this.transport.removeAllListeners();

    // set ready state
    this.readyState = 'closed';

    // clear session id
    this.id = null;

    // emit close event
    this.emit('close', reason, desc);

    // clean buffers after, so users can still
    // grab the buffers on `close` event
    self.writeBuffer = [];
    self.prevBufferLen = 0;
  }
};

/**
 * Filters upgrades, returning only those matching client transports.
 *
 * @param {Array} server upgrades
 * @api private
 *
 */

Socket.prototype.filterUpgrades = function (upgrades) {
  var filteredUpgrades = [];
  for (var i = 0, j = upgrades.length; i < j; i++) {
    if (~index(this.transports, upgrades[i])) filteredUpgrades.push(upgrades[i]);
  }
  return filteredUpgrades;
};

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 36 */
/***/ (function(module, exports) {


/**
 * Module exports.
 *
 * Logic borrowed from Modernizr:
 *
 *   - https://github.com/Modernizr/Modernizr/blob/master/feature-detects/cors.js
 */

try {
  module.exports = typeof XMLHttpRequest !== 'undefined' &&
    'withCredentials' in new XMLHttpRequest();
} catch (err) {
  // if XMLHttp support is disabled in IE then it will throw
  // when trying to create
  module.exports = false;
}


/***/ }),
/* 37 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {/**
 * Module requirements.
 */

var XMLHttpRequest = __webpack_require__(8);
var Polling = __webpack_require__(15);
var Emitter = __webpack_require__(2);
var inherit = __webpack_require__(6);
var debug = __webpack_require__(1)('engine.io-client:polling-xhr');

/**
 * Module exports.
 */

module.exports = XHR;
module.exports.Request = Request;

/**
 * Empty function
 */

function empty () {}

/**
 * XHR Polling constructor.
 *
 * @param {Object} opts
 * @api public
 */

function XHR (opts) {
  Polling.call(this, opts);
  this.requestTimeout = opts.requestTimeout;
  this.extraHeaders = opts.extraHeaders;

  if (global.location) {
    var isSSL = 'https:' === location.protocol;
    var port = location.port;

    // some user agents have empty `location.port`
    if (!port) {
      port = isSSL ? 443 : 80;
    }

    this.xd = opts.hostname !== global.location.hostname ||
      port !== opts.port;
    this.xs = opts.secure !== isSSL;
  }
}

/**
 * Inherits from Polling.
 */

inherit(XHR, Polling);

/**
 * XHR supports binary
 */

XHR.prototype.supportsBinary = true;

/**
 * Creates a request.
 *
 * @param {String} method
 * @api private
 */

XHR.prototype.request = function (opts) {
  opts = opts || {};
  opts.uri = this.uri();
  opts.xd = this.xd;
  opts.xs = this.xs;
  opts.agent = this.agent || false;
  opts.supportsBinary = this.supportsBinary;
  opts.enablesXDR = this.enablesXDR;

  // SSL options for Node.js client
  opts.pfx = this.pfx;
  opts.key = this.key;
  opts.passphrase = this.passphrase;
  opts.cert = this.cert;
  opts.ca = this.ca;
  opts.ciphers = this.ciphers;
  opts.rejectUnauthorized = this.rejectUnauthorized;
  opts.requestTimeout = this.requestTimeout;

  // other options for Node.js client
  opts.extraHeaders = this.extraHeaders;

  return new Request(opts);
};

/**
 * Sends data.
 *
 * @param {String} data to send.
 * @param {Function} called upon flush.
 * @api private
 */

XHR.prototype.doWrite = function (data, fn) {
  var isBinary = typeof data !== 'string' && data !== undefined;
  var req = this.request({ method: 'POST', data: data, isBinary: isBinary });
  var self = this;
  req.on('success', fn);
  req.on('error', function (err) {
    self.onError('xhr post error', err);
  });
  this.sendXhr = req;
};

/**
 * Starts a poll cycle.
 *
 * @api private
 */

XHR.prototype.doPoll = function () {
  debug('xhr poll');
  var req = this.request();
  var self = this;
  req.on('data', function (data) {
    self.onData(data);
  });
  req.on('error', function (err) {
    self.onError('xhr poll error', err);
  });
  this.pollXhr = req;
};

/**
 * Request constructor
 *
 * @param {Object} options
 * @api public
 */

function Request (opts) {
  this.method = opts.method || 'GET';
  this.uri = opts.uri;
  this.xd = !!opts.xd;
  this.xs = !!opts.xs;
  this.async = false !== opts.async;
  this.data = undefined !== opts.data ? opts.data : null;
  this.agent = opts.agent;
  this.isBinary = opts.isBinary;
  this.supportsBinary = opts.supportsBinary;
  this.enablesXDR = opts.enablesXDR;
  this.requestTimeout = opts.requestTimeout;

  // SSL options for Node.js client
  this.pfx = opts.pfx;
  this.key = opts.key;
  this.passphrase = opts.passphrase;
  this.cert = opts.cert;
  this.ca = opts.ca;
  this.ciphers = opts.ciphers;
  this.rejectUnauthorized = opts.rejectUnauthorized;

  // other options for Node.js client
  this.extraHeaders = opts.extraHeaders;

  this.create();
}

/**
 * Mix in `Emitter`.
 */

Emitter(Request.prototype);

/**
 * Creates the XHR object and sends the request.
 *
 * @api private
 */

Request.prototype.create = function () {
  var opts = { agent: this.agent, xdomain: this.xd, xscheme: this.xs, enablesXDR: this.enablesXDR };

  // SSL options for Node.js client
  opts.pfx = this.pfx;
  opts.key = this.key;
  opts.passphrase = this.passphrase;
  opts.cert = this.cert;
  opts.ca = this.ca;
  opts.ciphers = this.ciphers;
  opts.rejectUnauthorized = this.rejectUnauthorized;

  var xhr = this.xhr = new XMLHttpRequest(opts);
  var self = this;

  try {
    debug('xhr open %s: %s', this.method, this.uri);
    xhr.open(this.method, this.uri, this.async);
    try {
      if (this.extraHeaders) {
        xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);
        for (var i in this.extraHeaders) {
          if (this.extraHeaders.hasOwnProperty(i)) {
            xhr.setRequestHeader(i, this.extraHeaders[i]);
          }
        }
      }
    } catch (e) {}

    if ('POST' === this.method) {
      try {
        if (this.isBinary) {
          xhr.setRequestHeader('Content-type', 'application/octet-stream');
        } else {
          xhr.setRequestHeader('Content-type', 'text/plain;charset=UTF-8');
        }
      } catch (e) {}
    }

    try {
      xhr.setRequestHeader('Accept', '*/*');
    } catch (e) {}

    // ie6 check
    if ('withCredentials' in xhr) {
      xhr.withCredentials = true;
    }

    if (this.requestTimeout) {
      xhr.timeout = this.requestTimeout;
    }

    if (this.hasXDR()) {
      xhr.onload = function () {
        self.onLoad();
      };
      xhr.onerror = function () {
        self.onError(xhr.responseText);
      };
    } else {
      xhr.onreadystatechange = function () {
        if (xhr.readyState === 2) {
          var contentType;
          try {
            contentType = xhr.getResponseHeader('Content-Type');
          } catch (e) {}
          if (contentType === 'application/octet-stream') {
            xhr.responseType = 'arraybuffer';
          }
        }
        if (4 !== xhr.readyState) return;
        if (200 === xhr.status || 1223 === xhr.status) {
          self.onLoad();
        } else {
          // make sure the `error` event handler that's user-set
          // does not throw in the same tick and gets caught here
          setTimeout(function () {
            self.onError(xhr.status);
          }, 0);
        }
      };
    }

    debug('xhr data %s', this.data);
    xhr.send(this.data);
  } catch (e) {
    // Need to defer since .create() is called directly fhrom the constructor
    // and thus the 'error' event can only be only bound *after* this exception
    // occurs.  Therefore, also, we cannot throw here at all.
    setTimeout(function () {
      self.onError(e);
    }, 0);
    return;
  }

  if (global.document) {
    this.index = Request.requestsCount++;
    Request.requests[this.index] = this;
  }
};

/**
 * Called upon successful response.
 *
 * @api private
 */

Request.prototype.onSuccess = function () {
  this.emit('success');
  this.cleanup();
};

/**
 * Called if we have data.
 *
 * @api private
 */

Request.prototype.onData = function (data) {
  this.emit('data', data);
  this.onSuccess();
};

/**
 * Called upon error.
 *
 * @api private
 */

Request.prototype.onError = function (err) {
  this.emit('error', err);
  this.cleanup(true);
};

/**
 * Cleans up house.
 *
 * @api private
 */

Request.prototype.cleanup = function (fromError) {
  if ('undefined' === typeof this.xhr || null === this.xhr) {
    return;
  }
  // xmlhttprequest
  if (this.hasXDR()) {
    this.xhr.onload = this.xhr.onerror = empty;
  } else {
    this.xhr.onreadystatechange = empty;
  }

  if (fromError) {
    try {
      this.xhr.abort();
    } catch (e) {}
  }

  if (global.document) {
    delete Request.requests[this.index];
  }

  this.xhr = null;
};

/**
 * Called upon load.
 *
 * @api private
 */

Request.prototype.onLoad = function () {
  var data;
  try {
    var contentType;
    try {
      contentType = this.xhr.getResponseHeader('Content-Type');
    } catch (e) {}
    if (contentType === 'application/octet-stream') {
      data = this.xhr.response || this.xhr.responseText;
    } else {
      data = this.xhr.responseText;
    }
  } catch (e) {
    this.onError(e);
  }
  if (null != data) {
    this.onData(data);
  }
};

/**
 * Check if it has XDomainRequest.
 *
 * @api private
 */

Request.prototype.hasXDR = function () {
  return 'undefined' !== typeof global.XDomainRequest && !this.xs && this.enablesXDR;
};

/**
 * Aborts the request.
 *
 * @api public
 */

Request.prototype.abort = function () {
  this.cleanup();
};

/**
 * Aborts pending requests when unloading the window. This is needed to prevent
 * memory leaks (e.g. when using IE) and to ensure that no spurious error is
 * emitted.
 */

Request.requestsCount = 0;
Request.requests = {};

if (global.document) {
  if (global.attachEvent) {
    global.attachEvent('onunload', unloadHandler);
  } else if (global.addEventListener) {
    global.addEventListener('beforeunload', unloadHandler, false);
  }
}

function unloadHandler () {
  for (var i in Request.requests) {
    if (Request.requests.hasOwnProperty(i)) {
      Request.requests[i].abort();
    }
  }
}

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 38 */
/***/ (function(module, exports) {


/**
 * Gets the keys for an object.
 *
 * @return {Array} keys
 * @api private
 */

module.exports = Object.keys || function keys (obj){
  var arr = [];
  var has = Object.prototype.hasOwnProperty;

  for (var i in obj) {
    if (has.call(obj, i)) {
      arr.push(i);
    }
  }
  return arr;
};


/***/ }),
/* 39 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {/* global Blob File */

/*
 * Module requirements.
 */

var isArray = __webpack_require__(40);

var toString = Object.prototype.toString;
var withNativeBlob = typeof global.Blob === 'function' || toString.call(global.Blob) === '[object BlobConstructor]';
var withNativeFile = typeof global.File === 'function' || toString.call(global.File) === '[object FileConstructor]';

/**
 * Module exports.
 */

module.exports = hasBinary;

/**
 * Checks for binary data.
 *
 * Supports Buffer, ArrayBuffer, Blob and File.
 *
 * @param {Object} anything
 * @api public
 */

function hasBinary (obj) {
  if (!obj || typeof obj !== 'object') {
    return false;
  }

  if (isArray(obj)) {
    for (var i = 0, l = obj.length; i < l; i++) {
      if (hasBinary(obj[i])) {
        return true;
      }
    }
    return false;
  }

  if ((typeof global.Buffer === 'function' && global.Buffer.isBuffer && global.Buffer.isBuffer(obj)) ||
     (typeof global.ArrayBuffer === 'function' && obj instanceof ArrayBuffer) ||
     (withNativeBlob && obj instanceof Blob) ||
     (withNativeFile && obj instanceof File)
    ) {
    return true;
  }

  // see: https://github.com/Automattic/has-binary/pull/4
  if (obj.toJSON && typeof obj.toJSON === 'function' && arguments.length === 1) {
    return hasBinary(obj.toJSON(), true);
  }

  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {
      return true;
    }
  }

  return false;
}

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 40 */
/***/ (function(module, exports) {

var toString = {}.toString;

module.exports = Array.isArray || function (arr) {
  return toString.call(arr) == '[object Array]';
};


/***/ }),
/* 41 */
/***/ (function(module, exports) {

/**
 * An abstraction for slicing an arraybuffer even when
 * ArrayBuffer.prototype.slice is not supported
 *
 * @api public
 */

module.exports = function(arraybuffer, start, end) {
  var bytes = arraybuffer.byteLength;
  start = start || 0;
  end = end || bytes;

  if (arraybuffer.slice) { return arraybuffer.slice(start, end); }

  if (start < 0) { start += bytes; }
  if (end < 0) { end += bytes; }
  if (end > bytes) { end = bytes; }

  if (start >= bytes || start >= end || bytes === 0) {
    return new ArrayBuffer(0);
  }

  var abv = new Uint8Array(arraybuffer);
  var result = new Uint8Array(end - start);
  for (var i = start, ii = 0; i < end; i++, ii++) {
    result[ii] = abv[i];
  }
  return result.buffer;
};


/***/ }),
/* 42 */
/***/ (function(module, exports) {

module.exports = after

function after(count, callback, err_cb) {
    var bail = false
    err_cb = err_cb || noop
    proxy.count = count

    return (count === 0) ? callback() : proxy

    function proxy(err, result) {
        if (proxy.count <= 0) {
            throw new Error('after called too many times')
        }
        --proxy.count

        // after first error, rest are passed to err_cb
        if (err) {
            bail = true
            callback(err)
            // future error callbacks will go to error handler
            callback = err_cb
        } else if (proxy.count === 0 && !bail) {
            callback(null, result)
        }
    }
}

function noop() {}


/***/ }),
/* 43 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module, global) {var __WEBPACK_AMD_DEFINE_RESULT__;/*! https://mths.be/utf8js v2.1.2 by @mathias */
;(function(root) {

	// Detect free variables `exports`
	var freeExports = typeof exports == 'object' && exports;

	// Detect free variable `module`
	var freeModule = typeof module == 'object' && module &&
		module.exports == freeExports && module;

	// Detect free variable `global`, from Node.js or Browserified code,
	// and use it as `root`
	var freeGlobal = typeof global == 'object' && global;
	if (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {
		root = freeGlobal;
	}

	/*--------------------------------------------------------------------------*/

	var stringFromCharCode = String.fromCharCode;

	// Taken from https://mths.be/punycode
	function ucs2decode(string) {
		var output = [];
		var counter = 0;
		var length = string.length;
		var value;
		var extra;
		while (counter < length) {
			value = string.charCodeAt(counter++);
			if (value >= 0xD800 && value <= 0xDBFF && counter < length) {
				// high surrogate, and there is a next character
				extra = string.charCodeAt(counter++);
				if ((extra & 0xFC00) == 0xDC00) { // low surrogate
					output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);
				} else {
					// unmatched surrogate; only append this code unit, in case the next
					// code unit is the high surrogate of a surrogate pair
					output.push(value);
					counter--;
				}
			} else {
				output.push(value);
			}
		}
		return output;
	}

	// Taken from https://mths.be/punycode
	function ucs2encode(array) {
		var length = array.length;
		var index = -1;
		var value;
		var output = '';
		while (++index < length) {
			value = array[index];
			if (value > 0xFFFF) {
				value -= 0x10000;
				output += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);
				value = 0xDC00 | value & 0x3FF;
			}
			output += stringFromCharCode(value);
		}
		return output;
	}

	function checkScalarValue(codePoint, strict) {
		if (codePoint >= 0xD800 && codePoint <= 0xDFFF) {
			if (strict) {
				throw Error(
					'Lone surrogate U+' + codePoint.toString(16).toUpperCase() +
					' is not a scalar value'
				);
			}
			return false;
		}
		return true;
	}
	/*--------------------------------------------------------------------------*/

	function createByte(codePoint, shift) {
		return stringFromCharCode(((codePoint >> shift) & 0x3F) | 0x80);
	}

	function encodeCodePoint(codePoint, strict) {
		if ((codePoint & 0xFFFFFF80) == 0) { // 1-byte sequence
			return stringFromCharCode(codePoint);
		}
		var symbol = '';
		if ((codePoint & 0xFFFFF800) == 0) { // 2-byte sequence
			symbol = stringFromCharCode(((codePoint >> 6) & 0x1F) | 0xC0);
		}
		else if ((codePoint & 0xFFFF0000) == 0) { // 3-byte sequence
			if (!checkScalarValue(codePoint, strict)) {
				codePoint = 0xFFFD;
			}
			symbol = stringFromCharCode(((codePoint >> 12) & 0x0F) | 0xE0);
			symbol += createByte(codePoint, 6);
		}
		else if ((codePoint & 0xFFE00000) == 0) { // 4-byte sequence
			symbol = stringFromCharCode(((codePoint >> 18) & 0x07) | 0xF0);
			symbol += createByte(codePoint, 12);
			symbol += createByte(codePoint, 6);
		}
		symbol += stringFromCharCode((codePoint & 0x3F) | 0x80);
		return symbol;
	}

	function utf8encode(string, opts) {
		opts = opts || {};
		var strict = false !== opts.strict;

		var codePoints = ucs2decode(string);
		var length = codePoints.length;
		var index = -1;
		var codePoint;
		var byteString = '';
		while (++index < length) {
			codePoint = codePoints[index];
			byteString += encodeCodePoint(codePoint, strict);
		}
		return byteString;
	}

	/*--------------------------------------------------------------------------*/

	function readContinuationByte() {
		if (byteIndex >= byteCount) {
			throw Error('Invalid byte index');
		}

		var continuationByte = byteArray[byteIndex] & 0xFF;
		byteIndex++;

		if ((continuationByte & 0xC0) == 0x80) {
			return continuationByte & 0x3F;
		}

		// If we end up here, it’s not a continuation byte
		throw Error('Invalid continuation byte');
	}

	function decodeSymbol(strict) {
		var byte1;
		var byte2;
		var byte3;
		var byte4;
		var codePoint;

		if (byteIndex > byteCount) {
			throw Error('Invalid byte index');
		}

		if (byteIndex == byteCount) {
			return false;
		}

		// Read first byte
		byte1 = byteArray[byteIndex] & 0xFF;
		byteIndex++;

		// 1-byte sequence (no continuation bytes)
		if ((byte1 & 0x80) == 0) {
			return byte1;
		}

		// 2-byte sequence
		if ((byte1 & 0xE0) == 0xC0) {
			byte2 = readContinuationByte();
			codePoint = ((byte1 & 0x1F) << 6) | byte2;
			if (codePoint >= 0x80) {
				return codePoint;
			} else {
				throw Error('Invalid continuation byte');
			}
		}

		// 3-byte sequence (may include unpaired surrogates)
		if ((byte1 & 0xF0) == 0xE0) {
			byte2 = readContinuationByte();
			byte3 = readContinuationByte();
			codePoint = ((byte1 & 0x0F) << 12) | (byte2 << 6) | byte3;
			if (codePoint >= 0x0800) {
				return checkScalarValue(codePoint, strict) ? codePoint : 0xFFFD;
			} else {
				throw Error('Invalid continuation byte');
			}
		}

		// 4-byte sequence
		if ((byte1 & 0xF8) == 0xF0) {
			byte2 = readContinuationByte();
			byte3 = readContinuationByte();
			byte4 = readContinuationByte();
			codePoint = ((byte1 & 0x07) << 0x12) | (byte2 << 0x0C) |
				(byte3 << 0x06) | byte4;
			if (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {
				return codePoint;
			}
		}

		throw Error('Invalid UTF-8 detected');
	}

	var byteArray;
	var byteCount;
	var byteIndex;
	function utf8decode(byteString, opts) {
		opts = opts || {};
		var strict = false !== opts.strict;

		byteArray = ucs2decode(byteString);
		byteCount = byteArray.length;
		byteIndex = 0;
		var codePoints = [];
		var tmp;
		while ((tmp = decodeSymbol(strict)) !== false) {
			codePoints.push(tmp);
		}
		return ucs2encode(codePoints);
	}

	/*--------------------------------------------------------------------------*/

	var utf8 = {
		'version': '2.1.2',
		'encode': utf8encode,
		'decode': utf8decode
	};

	// Some AMD build optimizers, like r.js, check for specific condition patterns
	// like the following:
	if (
		true
	) {
		!(__WEBPACK_AMD_DEFINE_RESULT__ = (function() {
			return utf8;
		}).call(exports, __webpack_require__, exports, module),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	}	else { var key, hasOwnProperty, object; }

}(this));

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(44)(module), __webpack_require__(0)))

/***/ }),
/* 44 */
/***/ (function(module, exports) {

module.exports = function(module) {
	if(!module.webpackPolyfill) {
		module.deprecate = function() {};
		module.paths = [];
		// module.parent = undefined by default
		if(!module.children) module.children = [];
		Object.defineProperty(module, "loaded", {
			enumerable: true,
			get: function() {
				return module.l;
			}
		});
		Object.defineProperty(module, "id", {
			enumerable: true,
			get: function() {
				return module.i;
			}
		});
		module.webpackPolyfill = 1;
	}
	return module;
};


/***/ }),
/* 45 */
/***/ (function(module, exports) {

/*
 * base64-arraybuffer
 * https://github.com/niklasvh/base64-arraybuffer
 *
 * Copyright (c) 2012 Niklas von Hertzen
 * Licensed under the MIT license.
 */
(function(){
  "use strict";

  var chars = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";

  // Use a lookup table to find the index.
  var lookup = new Uint8Array(256);
  for (var i = 0; i < chars.length; i++) {
    lookup[chars.charCodeAt(i)] = i;
  }

  exports.encode = function(arraybuffer) {
    var bytes = new Uint8Array(arraybuffer),
    i, len = bytes.length, base64 = "";

    for (i = 0; i < len; i+=3) {
      base64 += chars[bytes[i] >> 2];
      base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];
      base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];
      base64 += chars[bytes[i + 2] & 63];
    }

    if ((len % 3) === 2) {
      base64 = base64.substring(0, base64.length - 1) + "=";
    } else if (len % 3 === 1) {
      base64 = base64.substring(0, base64.length - 2) + "==";
    }

    return base64;
  };

  exports.decode =  function(base64) {
    var bufferLength = base64.length * 0.75,
    len = base64.length, i, p = 0,
    encoded1, encoded2, encoded3, encoded4;

    if (base64[base64.length - 1] === "=") {
      bufferLength--;
      if (base64[base64.length - 2] === "=") {
        bufferLength--;
      }
    }

    var arraybuffer = new ArrayBuffer(bufferLength),
    bytes = new Uint8Array(arraybuffer);

    for (i = 0; i < len; i+=4) {
      encoded1 = lookup[base64.charCodeAt(i)];
      encoded2 = lookup[base64.charCodeAt(i+1)];
      encoded3 = lookup[base64.charCodeAt(i+2)];
      encoded4 = lookup[base64.charCodeAt(i+3)];

      bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);
      bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);
      bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);
    }

    return arraybuffer;
  };
})();


/***/ }),
/* 46 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {/**
 * Create a blob builder even when vendor prefixes exist
 */

var BlobBuilder = global.BlobBuilder
  || global.WebKitBlobBuilder
  || global.MSBlobBuilder
  || global.MozBlobBuilder;

/**
 * Check if Blob constructor is supported
 */

var blobSupported = (function() {
  try {
    var a = new Blob(['hi']);
    return a.size === 2;
  } catch(e) {
    return false;
  }
})();

/**
 * Check if Blob constructor supports ArrayBufferViews
 * Fails in Safari 6, so we need to map to ArrayBuffers there.
 */

var blobSupportsArrayBufferView = blobSupported && (function() {
  try {
    var b = new Blob([new Uint8Array([1,2])]);
    return b.size === 2;
  } catch(e) {
    return false;
  }
})();

/**
 * Check if BlobBuilder is supported
 */

var blobBuilderSupported = BlobBuilder
  && BlobBuilder.prototype.append
  && BlobBuilder.prototype.getBlob;

/**
 * Helper function that maps ArrayBufferViews to ArrayBuffers
 * Used by BlobBuilder constructor and old browsers that didn't
 * support it in the Blob constructor.
 */

function mapArrayBufferViews(ary) {
  for (var i = 0; i < ary.length; i++) {
    var chunk = ary[i];
    if (chunk.buffer instanceof ArrayBuffer) {
      var buf = chunk.buffer;

      // if this is a subarray, make a copy so we only
      // include the subarray region from the underlying buffer
      if (chunk.byteLength !== buf.byteLength) {
        var copy = new Uint8Array(chunk.byteLength);
        copy.set(new Uint8Array(buf, chunk.byteOffset, chunk.byteLength));
        buf = copy.buffer;
      }

      ary[i] = buf;
    }
  }
}

function BlobBuilderConstructor(ary, options) {
  options = options || {};

  var bb = new BlobBuilder();
  mapArrayBufferViews(ary);

  for (var i = 0; i < ary.length; i++) {
    bb.append(ary[i]);
  }

  return (options.type) ? bb.getBlob(options.type) : bb.getBlob();
};

function BlobConstructor(ary, options) {
  mapArrayBufferViews(ary);
  return new Blob(ary, options || {});
};

module.exports = (function() {
  if (blobSupported) {
    return blobSupportsArrayBufferView ? global.Blob : BlobConstructor;
  } else if (blobBuilderSupported) {
    return BlobBuilderConstructor;
  } else {
    return undefined;
  }
})();

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 47 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {
/**
 * Module requirements.
 */

var Polling = __webpack_require__(15);
var inherit = __webpack_require__(6);

/**
 * Module exports.
 */

module.exports = JSONPPolling;

/**
 * Cached regular expressions.
 */

var rNewline = /\n/g;
var rEscapedNewline = /\\n/g;

/**
 * Global JSONP callbacks.
 */

var callbacks;

/**
 * Noop.
 */

function empty () { }

/**
 * JSONP Polling constructor.
 *
 * @param {Object} opts.
 * @api public
 */

function JSONPPolling (opts) {
  Polling.call(this, opts);

  this.query = this.query || {};

  // define global callbacks array if not present
  // we do this here (lazily) to avoid unneeded global pollution
  if (!callbacks) {
    // we need to consider multiple engines in the same page
    if (!global.___eio) global.___eio = [];
    callbacks = global.___eio;
  }

  // callback identifier
  this.index = callbacks.length;

  // add callback to jsonp global
  var self = this;
  callbacks.push(function (msg) {
    self.onData(msg);
  });

  // append to query string
  this.query.j = this.index;

  // prevent spurious errors from being emitted when the window is unloaded
  if (global.document && global.addEventListener) {
    global.addEventListener('beforeunload', function () {
      if (self.script) self.script.onerror = empty;
    }, false);
  }
}

/**
 * Inherits from Polling.
 */

inherit(JSONPPolling, Polling);

/*
 * JSONP only supports binary as base64 encoded strings
 */

JSONPPolling.prototype.supportsBinary = false;

/**
 * Closes the socket.
 *
 * @api private
 */

JSONPPolling.prototype.doClose = function () {
  if (this.script) {
    this.script.parentNode.removeChild(this.script);
    this.script = null;
  }

  if (this.form) {
    this.form.parentNode.removeChild(this.form);
    this.form = null;
    this.iframe = null;
  }

  Polling.prototype.doClose.call(this);
};

/**
 * Starts a poll cycle.
 *
 * @api private
 */

JSONPPolling.prototype.doPoll = function () {
  var self = this;
  var script = document.createElement('script');

  if (this.script) {
    this.script.parentNode.removeChild(this.script);
    this.script = null;
  }

  script.async = true;
  script.src = this.uri();
  script.onerror = function (e) {
    self.onError('jsonp poll error', e);
  };

  var insertAt = document.getElementsByTagName('script')[0];
  if (insertAt) {
    insertAt.parentNode.insertBefore(script, insertAt);
  } else {
    (document.head || document.body).appendChild(script);
  }
  this.script = script;

  var isUAgecko = 'undefined' !== typeof navigator && /gecko/i.test(navigator.userAgent);

  if (isUAgecko) {
    setTimeout(function () {
      var iframe = document.createElement('iframe');
      document.body.appendChild(iframe);
      document.body.removeChild(iframe);
    }, 100);
  }
};

/**
 * Writes with a hidden iframe.
 *
 * @param {String} data to send
 * @param {Function} called upon flush.
 * @api private
 */

JSONPPolling.prototype.doWrite = function (data, fn) {
  var self = this;

  if (!this.form) {
    var form = document.createElement('form');
    var area = document.createElement('textarea');
    var id = this.iframeId = 'eio_iframe_' + this.index;
    var iframe;

    form.className = 'socketio';
    form.style.position = 'absolute';
    form.style.top = '-1000px';
    form.style.left = '-1000px';
    form.target = id;
    form.method = 'POST';
    form.setAttribute('accept-charset', 'utf-8');
    area.name = 'd';
    form.appendChild(area);
    document.body.appendChild(form);

    this.form = form;
    this.area = area;
  }

  this.form.action = this.uri();

  function complete () {
    initIframe();
    fn();
  }

  function initIframe () {
    if (self.iframe) {
      try {
        self.form.removeChild(self.iframe);
      } catch (e) {
        self.onError('jsonp polling iframe removal error', e);
      }
    }

    try {
      // ie6 dynamic iframes with target="" support (thanks Chris Lambacher)
      var html = '<iframe src="javascript:0" name="' + self.iframeId + '">';
      iframe = document.createElement(html);
    } catch (e) {
      iframe = document.createElement('iframe');
      iframe.name = self.iframeId;
      iframe.src = 'javascript:0';
    }

    iframe.id = self.iframeId;

    self.form.appendChild(iframe);
    self.iframe = iframe;
  }

  initIframe();

  // escape \n to prevent it from being converted into \r\n by some UAs
  // double escaping is required for escaped new lines because unescaping of new lines can be done safely on server-side
  data = data.replace(rEscapedNewline, '\\\n');
  this.area.value = data.replace(rNewline, '\\n');

  try {
    this.form.submit();
  } catch (e) {}

  if (this.iframe.attachEvent) {
    this.iframe.onreadystatechange = function () {
      if (self.iframe.readyState === 'complete') {
        complete();
      }
    };
  } else {
    this.iframe.onload = complete;
  }
};

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 48 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {/**
 * Module dependencies.
 */

var Transport = __webpack_require__(9);
var parser = __webpack_require__(3);
var parseqs = __webpack_require__(5);
var inherit = __webpack_require__(6);
var yeast = __webpack_require__(16);
var debug = __webpack_require__(1)('engine.io-client:websocket');
var BrowserWebSocket = global.WebSocket || global.MozWebSocket;
var NodeWebSocket;
if (typeof window === 'undefined') {
  try {
    NodeWebSocket = __webpack_require__(49);
  } catch (e) { }
}

/**
 * Get either the `WebSocket` or `MozWebSocket` globals
 * in the browser or try to resolve WebSocket-compatible
 * interface exposed by `ws` for Node-like environment.
 */

var WebSocket = BrowserWebSocket;
if (!WebSocket && typeof window === 'undefined') {
  WebSocket = NodeWebSocket;
}

/**
 * Module exports.
 */

module.exports = WS;

/**
 * WebSocket transport constructor.
 *
 * @api {Object} connection options
 * @api public
 */

function WS (opts) {
  var forceBase64 = (opts && opts.forceBase64);
  if (forceBase64) {
    this.supportsBinary = false;
  }
  this.perMessageDeflate = opts.perMessageDeflate;
  this.usingBrowserWebSocket = BrowserWebSocket && !opts.forceNode;
  this.protocols = opts.protocols;
  if (!this.usingBrowserWebSocket) {
    WebSocket = NodeWebSocket;
  }
  Transport.call(this, opts);
}

/**
 * Inherits from Transport.
 */

inherit(WS, Transport);

/**
 * Transport name.
 *
 * @api public
 */

WS.prototype.name = 'websocket';

/*
 * WebSockets support binary
 */

WS.prototype.supportsBinary = true;

/**
 * Opens socket.
 *
 * @api private
 */

WS.prototype.doOpen = function () {
  if (!this.check()) {
    // let probe timeout
    return;
  }

  var uri = this.uri();
  var protocols = this.protocols;
  var opts = {
    agent: this.agent,
    perMessageDeflate: this.perMessageDeflate
  };

  // SSL options for Node.js client
  opts.pfx = this.pfx;
  opts.key = this.key;
  opts.passphrase = this.passphrase;
  opts.cert = this.cert;
  opts.ca = this.ca;
  opts.ciphers = this.ciphers;
  opts.rejectUnauthorized = this.rejectUnauthorized;
  if (this.extraHeaders) {
    opts.headers = this.extraHeaders;
  }
  if (this.localAddress) {
    opts.localAddress = this.localAddress;
  }

  try {
    this.ws = this.usingBrowserWebSocket ? (protocols ? new WebSocket(uri, protocols) : new WebSocket(uri)) : new WebSocket(uri, protocols, opts);
  } catch (err) {
    return this.emit('error', err);
  }

  if (this.ws.binaryType === undefined) {
    this.supportsBinary = false;
  }

  if (this.ws.supports && this.ws.supports.binary) {
    this.supportsBinary = true;
    this.ws.binaryType = 'nodebuffer';
  } else {
    this.ws.binaryType = 'arraybuffer';
  }

  this.addEventListeners();
};

/**
 * Adds event listeners to the socket
 *
 * @api private
 */

WS.prototype.addEventListeners = function () {
  var self = this;

  this.ws.onopen = function () {
    self.onOpen();
  };
  this.ws.onclose = function () {
    self.onClose();
  };
  this.ws.onmessage = function (ev) {
    self.onData(ev.data);
  };
  this.ws.onerror = function (e) {
    self.onError('websocket error', e);
  };
};

/**
 * Writes data to socket.
 *
 * @param {Array} array of packets.
 * @api private
 */

WS.prototype.write = function (packets) {
  var self = this;
  this.writable = false;

  // encodePacket efficient as it uses WS framing
  // no need for encodePayload
  var total = packets.length;
  for (var i = 0, l = total; i < l; i++) {
    (function (packet) {
      parser.encodePacket(packet, self.supportsBinary, function (data) {
        if (!self.usingBrowserWebSocket) {
          // always create a new object (GH-437)
          var opts = {};
          if (packet.options) {
            opts.compress = packet.options.compress;
          }

          if (self.perMessageDeflate) {
            var len = 'string' === typeof data ? global.Buffer.byteLength(data) : data.length;
            if (len < self.perMessageDeflate.threshold) {
              opts.compress = false;
            }
          }
        }

        // Sometimes the websocket has already been closed but the browser didn't
        // have a chance of informing us about it yet, in that case send will
        // throw an error
        try {
          if (self.usingBrowserWebSocket) {
            // TypeError is thrown when passing the second argument on Safari
            self.ws.send(data);
          } else {
            self.ws.send(data, opts);
          }
        } catch (e) {
          debug('websocket closed before onclose event');
        }

        --total || done();
      });
    })(packets[i]);
  }

  function done () {
    self.emit('flush');

    // fake drain
    // defer to next tick to allow Socket to clear writeBuffer
    setTimeout(function () {
      self.writable = true;
      self.emit('drain');
    }, 0);
  }
};

/**
 * Called upon close
 *
 * @api private
 */

WS.prototype.onClose = function () {
  Transport.prototype.onClose.call(this);
};

/**
 * Closes socket.
 *
 * @api private
 */

WS.prototype.doClose = function () {
  if (typeof this.ws !== 'undefined') {
    this.ws.close();
  }
};

/**
 * Generates uri for connection.
 *
 * @api private
 */

WS.prototype.uri = function () {
  var query = this.query || {};
  var schema = this.secure ? 'wss' : 'ws';
  var port = '';

  // avoid port if default for schema
  if (this.port && (('wss' === schema && Number(this.port) !== 443) ||
    ('ws' === schema && Number(this.port) !== 80))) {
    port = ':' + this.port;
  }

  // append timestamp to URI
  if (this.timestampRequests) {
    query[this.timestampParam] = yeast();
  }

  // communicate binary support capabilities
  if (!this.supportsBinary) {
    query.b64 = 1;
  }

  query = parseqs.encode(query);

  // prepend ? to query
  if (query.length) {
    query = '?' + query;
  }

  var ipv6 = this.hostname.indexOf(':') !== -1;
  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;
};

/**
 * Feature detection for WebSocket.
 *
 * @return {Boolean} whether this transport is available.
 * @api public
 */

WS.prototype.check = function () {
  return !!WebSocket && !('__initialize' in WebSocket && this.name === WS.prototype.name);
};

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 49 */
/***/ (function(module, exports) {

/* (ignored) */

/***/ }),
/* 50 */
/***/ (function(module, exports) {

module.exports = toArray

function toArray(list, index) {
    var array = []

    index = index || 0

    for (var i = index || 0; i < list.length; i++) {
        array[i - index] = list[i]
    }

    return array
}


/***/ }),
/* 51 */
/***/ (function(module, exports) {


/**
 * Expose `Backoff`.
 */

module.exports = Backoff;

/**
 * Initialize backoff timer with `opts`.
 *
 * - `min` initial timeout in milliseconds [100]
 * - `max` max timeout [10000]
 * - `jitter` [0]
 * - `factor` [2]
 *
 * @param {Object} opts
 * @api public
 */

function Backoff(opts) {
  opts = opts || {};
  this.ms = opts.min || 100;
  this.max = opts.max || 10000;
  this.factor = opts.factor || 2;
  this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;
  this.attempts = 0;
}

/**
 * Return the backoff duration.
 *
 * @return {Number}
 * @api public
 */

Backoff.prototype.duration = function(){
  var ms = this.ms * Math.pow(this.factor, this.attempts++);
  if (this.jitter) {
    var rand =  Math.random();
    var deviation = Math.floor(rand * this.jitter * ms);
    ms = (Math.floor(rand * 10) & 1) == 0  ? ms - deviation : ms + deviation;
  }
  return Math.min(ms, this.max) | 0;
};

/**
 * Reset the number of attempts.
 *
 * @api public
 */

Backoff.prototype.reset = function(){
  this.attempts = 0;
};

/**
 * Set the minimum duration
 *
 * @api public
 */

Backoff.prototype.setMin = function(min){
  this.ms = min;
};

/**
 * Set the maximum duration
 *
 * @api public
 */

Backoff.prototype.setMax = function(max){
  this.max = max;
};

/**
 * Set the jitter
 *
 * @api public
 */

Backoff.prototype.setJitter = function(jitter){
  this.jitter = jitter;
};



/***/ }),
/* 52 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _dec, _dec2, _dec3, _dec4, _dec5, _desc, _value, _class, _class2, _temp;

var _listeners = __webpack_require__(21);

var _listeners2 = _interopRequireDefault(_listeners);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {
  var desc = {};
  Object['ke' + 'ys'](descriptor).forEach(function (key) {
    desc[key] = descriptor[key];
  });
  desc.enumerable = !!desc.enumerable;
  desc.configurable = !!desc.configurable;

  if ('value' in desc || desc.initializer) {
    desc.writable = true;
  }

  desc = decorators.slice().reverse().reduce(function (desc, decorator) {
    return decorator(target, property, desc) || desc;
  }, desc);

  if (context && desc.initializer !== void 0) {
    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;
    desc.initializer = undefined;
  }

  if (desc.initializer === void 0) {
    Object['define' + 'Property'](target, property, desc);
    desc = null;
  }

  return desc;
}

var ListenerTypes = {
  CONNECT: 'CONNECT',
  ERROR: 'ERROR',
  COMMAND: 'COMMAND',
  USER_STATUS: 'USER_STATUS'
};

var RTScopeConnector = (_dec = connectionRequired(), _dec2 = connectionRequired(), _dec3 = connectionRequired(), _dec4 = connectionRequired(), _dec5 = connectionRequired(true), (_class = (_temp = _class2 = function (_RTListeners) {
  _inherits(RTScopeConnector, _RTListeners);

  _createClass(RTScopeConnector, [{
    key: 'connectSubscriber',


    /**
     * @abstract getter, must be overridden in an inherited class
     * must returns a function for adding subscriptions to CONNECT to connection scope
     * For ex.: RTProvider.subscriptions.connectToRSO
     **/
    get: function get() {
      return null;
    }

    /**
     * @abstract getter, must be overridden in an inherited class
     *
     * must returns a function for adding subscriptions to listening COMMANDS in connection scope
     * For ex.: RTProvider.subscriptions.onRSOCommand
     **/


    /**
     * @static
     * @function
     * @decorator
     * @param {Boolean} [returnPromise] - if passed to TRUE the method returns a Promise
     *                                    and will be resolved when the instance is connected to scope
     *                                    and method return any result
     *
     * decorate instance's methods of the Class
     * puts the method's execution to pool and run it immediately after connected to Connection Scope.
     * if the instance is already connected to the scope the method will be executed immediately
     **/

  }, {
    key: 'commandSubscriber',
    get: function get() {
      return null;
    }

    /**
     * @abstract getter, must be overridden in an inherited class
     *
     * must returns a function for adding subscriptions to listening changes of USER_STATUS in connection scope
     * For ex.: RTProvider.subscriptions.onRSOUserStatus
     **/

  }, {
    key: 'usersSubscriber',
    get: function get() {
      return null;
    }

    /**
     * @abstract getter, must be overridden in an inherited class
     *
     * must returns a function for sending COMMAND into connection scope
     * For ex.: RTProvider.methods.sendRSOCommand
     **/

  }, {
    key: 'commandSender',
    get: function get() {
      return null;
    }
  }]);

  function RTScopeConnector(options) {
    _classCallCheck(this, RTScopeConnector);

    var _this = _possibleConstructorReturn(this, (RTScopeConnector.__proto__ || Object.getPrototypeOf(RTScopeConnector)).call(this));

    _this.options = options;

    _this.waitConnection = [];

    _this.connect();
    return _this;
  }

  /**
   * @public method
   *
   * connect to connection scope, if you already connected the method do nothing
   **/


  _createClass(RTScopeConnector, [{
    key: 'connect',
    value: function connect() {
      var _this2 = this;

      if (!this.isConnected()) {
        this.connection = this.connectSubscriber(this.getScopeOptions(), {
          onError: function onError(error) {
            return _this2.onError(error);
          },
          onReady: function onReady() {
            return _this2.onConnect();
          },
          onStop: function onStop() {
            return _this2.onDisconnect();
          }
        });
      }
    }

    /**
     * @public method
     *
     * disconnect from connection scope, if you already disconnect the method do nothing
     **/

  }, {
    key: 'disconnect',
    value: function disconnect() {
      if (this.isConnected()) {
        this.connection.stop();
      }
    }

    /**
     * @public method
     *
     * returns TRUE if you connected to connection scope otherwise returns FALSE
     **/

  }, {
    key: 'isConnected',
    value: function isConnected() {
      return !!this.connection && this.connection.isReady();
    }

    /**
     * @private method
     **/

  }, {
    key: 'getSubscriptionOptions',
    value: function getSubscriptionOptions() {
      return this.getScopeOptions();
    }

    /**
     * @private method
     **/

  }, {
    key: 'getScopeOptions',
    value: function getScopeOptions() {
      return this.options;
    }

    /**
     * @private method
     **/

  }, {
    key: 'onConnect',
    value: function onConnect() {
      this.waitConnection.forEach(function (operation) {
        return operation();
      });
      this.waitConnection = [];

      this.runSimpleListeners(ListenerTypes.CONNECT);
    }

    /**
     * @private method
     **/

  }, {
    key: 'onError',
    value: function onError(error) {
      this.runSimpleListeners(ListenerTypes.ERROR, error);
    }

    /**
     * @private method
     **/

  }, {
    key: 'onDisconnect',
    value: function onDisconnect() {
      this.connection = null;
    }

    /**
     * @public method
     **/

  }, {
    key: 'removeAllListeners',
    value: function removeAllListeners() {
      this.waitConnection = [];

      _get(RTScopeConnector.prototype.__proto__ || Object.getPrototypeOf(RTScopeConnector.prototype), 'removeAllListeners', this).call(this);

      return this;
    }

    /**
     * @public method
     **/

  }, {
    key: 'addConnectListener',
    value: function addConnectListener(callback, onError) {
      this.addSimpleListener(ListenerTypes.CONNECT, callback);

      if (onError) {
        this.addSimpleListener(ListenerTypes.ERROR, onError);
      }

      return this;
    }

    /**
     * @public method
     **/

  }, {
    key: 'removeConnectListeners',
    value: function removeConnectListeners(callback, onError) {
      this.removeSimpleListener(ListenerTypes.CONNECT, callback);

      if (onError) {
        this.removeSimpleListener(ListenerTypes.ERROR, onError);
      }

      return this;
    }

    /**
     * @public method
     **/

  }, {
    key: 'addCommandListener',
    value: function addCommandListener(callback, onError) {
      this.addSubscription(ListenerTypes.COMMAND, this.commandSubscriber, { callback: callback, onError: onError });

      return this;
    }

    /**
     * @public method
     **/

  }, {
    key: 'removeCommandListeners',
    value: function removeCommandListeners(callback) {
      this.stopSubscription(ListenerTypes.COMMAND, { callback: callback });

      return this;
    }

    /**
     * @public method
     **/

  }, {
    key: 'addUserStatusListener',
    value: function addUserStatusListener(callback, onError) {
      this.addSubscription(ListenerTypes.USER_STATUS, this.usersSubscriber, { callback: callback, onError: onError });

      return this;
    }

    /**
     * @public method
     **/

  }, {
    key: 'removeUserStatusListeners',
    value: function removeUserStatusListeners(callback) {
      this.stopSubscription(ListenerTypes.USER_STATUS, { callback: callback });

      return this;
    }

    /**
     * @public method
     **/

  }, {
    key: 'send',
    value: function send(type, data) {
      return this.commandSender(_extends({}, this.getScopeOptions(), { type: type, data: data }));
    }
  }]);

  return RTScopeConnector;
}(_listeners2.default), _class2.connectionRequired = connectionRequired, _temp), (_applyDecoratedDescriptor(_class.prototype, 'addCommandListener', [_dec], Object.getOwnPropertyDescriptor(_class.prototype, 'addCommandListener'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'removeCommandListeners', [_dec2], Object.getOwnPropertyDescriptor(_class.prototype, 'removeCommandListeners'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'addUserStatusListener', [_dec3], Object.getOwnPropertyDescriptor(_class.prototype, 'addUserStatusListener'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'removeUserStatusListeners', [_dec4], Object.getOwnPropertyDescriptor(_class.prototype, 'removeUserStatusListeners'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'send', [_dec5], Object.getOwnPropertyDescriptor(_class.prototype, 'send'), _class.prototype)), _class));
exports.default = RTScopeConnector;


function connectionRequired(returnPromise) {
  return function (target, key, descriptor) {
    var decorated = descriptor.value;

    descriptor.value = function () {
      var _this3 = this,
          _arguments = arguments;

      var run = function run() {
        return decorated.apply(_this3, _arguments);
      };

      if (this.isConnected()) {
        return run();
      }

      if (returnPromise) {
        return new Promise(function (resolve, reject) {
          return _this3.waitConnection.push(function () {
            return run().then(resolve, reject);
          });
        });
      }

      this.waitConnection.push(run);

      return this;
    };

    return descriptor;
  };
}

/***/ })
/******/ ]);
});
//# sourceMappingURL=backendless-rt-client.js.map

/***/ }),

/***/ "./node_modules/webpack/buildin/global.js":
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || new Function("return this")();
} catch (e) {
	// This works if the window reference is available
	if (typeof window === "object") g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),

/***/ "./src/bl/constants.js":
/*!*****************************!*\
  !*** ./src/bl/constants.js ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isExecutionType = exports.ExecutionTypes = exports.EXECUTION_TYPE_HEADER = void 0;
var EXECUTION_TYPE_HEADER = 'bl-execution-type';
exports.EXECUTION_TYPE_HEADER = EXECUTION_TYPE_HEADER;
var ExecutionTypes = {
  SYNC: 'sync',
  ASYNC: 'async',
  ASYNC_LOW_PRIORITY: 'async-low-priority'
};
exports.ExecutionTypes = ExecutionTypes;
var executionTypesList = Object.keys(ExecutionTypes).map(function (k) {
  return ExecutionTypes[k];
});

var isExecutionType = function isExecutionType(type) {
  return executionTypesList.includes(type);
};

exports.isExecutionType = isExecutionType;

/***/ }),

/***/ "./src/bl/custom-services.js":
/*!***********************************!*\
  !*** ./src/bl/custom-services.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _applyDecoratedDescriptor2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/applyDecoratedDescriptor */ "./node_modules/@babel/runtime/helpers/applyDecoratedDescriptor.js"));

var _extends2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/extends */ "./node_modules/@babel/runtime/helpers/extends.js"));

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));

var _utils = _interopRequireDefault(__webpack_require__(/*! ../utils */ "./src/utils.js"));

var _decorators = __webpack_require__(/*! ../decorators */ "./src/decorators/index.js");

var _invokeServiceMethod = __webpack_require__(/*! ./invoke-service-method */ "./src/bl/invoke-service-method.js");

var _dec, _obj, _init;

var CustomServices = function CustomServices(app) {
  (0, _classCallCheck2["default"])(this, CustomServices);
  this.app = app;
};

(0, _extends2["default"])(CustomServices.prototype, (_dec = (0, _decorators.deprecated)('Backendless.CustomServices', 'Backendless.CustomServices.invoke'), (_obj = {
  invokeSync: _utils["default"]["synchronized"](_invokeServiceMethod.invokeServiceMethod),
  invoke: _utils["default"].promisified(_invokeServiceMethod.invokeServiceMethod)
}, ((0, _applyDecoratedDescriptor2["default"])(_obj, "invokeSync", [_dec], (_init = Object.getOwnPropertyDescriptor(_obj, "invokeSync"), _init = _init ? _init.value : undefined, {
  enumerable: true,
  configurable: true,
  writable: true,
  initializer: function initializer() {
    return _init;
  }
}), _obj)), _obj)));
var _default = CustomServices;
exports["default"] = _default;

/***/ }),

/***/ "./src/bl/dispatch-event.js":
/*!**********************************!*\
  !*** ./src/bl/dispatch-event.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.dispatchEvent = dispatchEvent;

var _utils = _interopRequireDefault(__webpack_require__(/*! ../utils */ "./src/utils.js"));

var _async = _interopRequireDefault(__webpack_require__(/*! ../request/async */ "./src/request/async.js"));

var _constants = __webpack_require__(/*! ./constants */ "./src/bl/constants.js");

function dispatchEvent(eventName, eventArgs, executionType, asyncHandler) {
  if (!eventName || !_utils["default"].isString(eventName)) {
    throw new Error('Event Name must be provided and must be not an empty STRING!');
  }

  if (typeof eventArgs === 'string' && (0, _constants.isExecutionType)(eventArgs)) {
    asyncHandler = executionType;
    executionType = eventArgs;
    eventArgs = undefined;
  }

  if (executionType instanceof _async["default"]) {
    asyncHandler = executionType;
    executionType = undefined;
  }

  if (eventArgs instanceof _async["default"]) {
    asyncHandler = eventArgs;
    eventArgs = undefined;
  }

  if (!_utils["default"].isObject(eventArgs)) {
    eventArgs = {};
  }

  if (asyncHandler) {
    asyncHandler = _utils["default"].wrapAsync(asyncHandler);
  }

  var headers = {};

  if (executionType) {
    headers[_constants.EXECUTION_TYPE_HEADER] = executionType;
  }

  return this.app.request.post({
    url: this.app.urls.blEvent(eventName),
    data: eventArgs,
    isAsync: !!asyncHandler,
    headers: headers,
    asyncHandler: asyncHandler
  });
}

/***/ }),

/***/ "./src/bl/events.js":
/*!**************************!*\
  !*** ./src/bl/events.js ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _applyDecoratedDescriptor2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/applyDecoratedDescriptor */ "./node_modules/@babel/runtime/helpers/applyDecoratedDescriptor.js"));

var _extends2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/extends */ "./node_modules/@babel/runtime/helpers/extends.js"));

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));

var _utils = _interopRequireDefault(__webpack_require__(/*! ../utils */ "./src/utils.js"));

var _decorators = __webpack_require__(/*! ../decorators */ "./src/decorators/index.js");

var _dispatchEvent = __webpack_require__(/*! ./dispatch-event */ "./src/bl/dispatch-event.js");

var _dec, _obj, _init;

var Events = function Events(app) {
  (0, _classCallCheck2["default"])(this, Events);
  this.app = app;
};

(0, _extends2["default"])(Events.prototype, (_dec = (0, _decorators.deprecated)('Backendless.Events', 'Backendless.Events.dispatch'), (_obj = {
  dispatchSync: _utils["default"]["synchronized"](_dispatchEvent.dispatchEvent),
  dispatch: _utils["default"].promisified(_dispatchEvent.dispatchEvent)
}, ((0, _applyDecoratedDescriptor2["default"])(_obj, "dispatchSync", [_dec], (_init = Object.getOwnPropertyDescriptor(_obj, "dispatchSync"), _init = _init ? _init.value : undefined, {
  enumerable: true,
  configurable: true,
  writable: true,
  initializer: function initializer() {
    return _init;
  }
}), _obj)), _obj)));
var _default = Events;
exports["default"] = _default;

/***/ }),

/***/ "./src/bl/index.js":
/*!*************************!*\
  !*** ./src/bl/index.js ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));

var _constants = __webpack_require__(/*! ./constants */ "./src/bl/constants.js");

var _customServices = _interopRequireDefault(__webpack_require__(/*! ./custom-services */ "./src/bl/custom-services.js"));

var _events = _interopRequireDefault(__webpack_require__(/*! ./events */ "./src/bl/events.js"));

var BL = function BL(app) {
  (0, _classCallCheck2["default"])(this, BL);
  this.app = app;
  this.ExecutionTypes = _constants.ExecutionTypes;
  this.CustomServices = new _customServices["default"](app);
  this.Events = new _events["default"](app);
};

var _default = BL;
exports["default"] = _default;

/***/ }),

/***/ "./src/bl/invoke-service-method.js":
/*!*****************************************!*\
  !*** ./src/bl/invoke-service-method.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.invokeServiceMethod = invokeServiceMethod;

var _async = _interopRequireDefault(__webpack_require__(/*! ../request/async */ "./src/request/async.js"));

var _constants = __webpack_require__(/*! ./constants */ "./src/bl/constants.js");

function invokeServiceMethod(serviceName, method, parameters, executionType, asyncHandler) {
  if (typeof parameters === 'string' && (0, _constants.isExecutionType)(parameters)) {
    asyncHandler = executionType;
    executionType = parameters;
    parameters = undefined;
  }

  if (executionType instanceof _async["default"]) {
    asyncHandler = executionType;
    executionType = undefined;
  }

  if (parameters instanceof _async["default"]) {
    asyncHandler = parameters;
    parameters = undefined;
  }

  var headers = {};

  if (executionType) {
    headers[_constants.EXECUTION_TYPE_HEADER] = executionType;
  }

  return this.app.request.post({
    url: this.app.urls.blServiceMethod(serviceName, method),
    data: parameters,
    isAsync: !!asyncHandler,
    headers: headers,
    asyncHandler: asyncHandler
  });
}

/***/ }),

/***/ "./src/cache/contains.js":
/*!*******************************!*\
  !*** ./src/cache/contains.js ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.contains = contains;

var _utils = _interopRequireDefault(__webpack_require__(/*! ../utils */ "./src/utils.js"));

function contains(key, asyncHandler) {
  if (!key || !_utils["default"].isString(key)) {
    throw new Error('Cache Key must be non empty String');
  }

  if (asyncHandler) {
    asyncHandler = _utils["default"].wrapAsync(asyncHandler);
  }

  return this.app.request.get({
    url: this.app.urls.cacheItemCheck(key),
    isAsync: !!asyncHandler,
    asyncHandler: asyncHandler
  });
}

/***/ }),

/***/ "./src/cache/expire-at.js":
/*!********************************!*\
  !*** ./src/cache/expire-at.js ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.expireAt = expireAt;

var _utils = _interopRequireDefault(__webpack_require__(/*! ../utils */ "./src/utils.js"));

function expireAt(key, timestamp, asyncHandler) {
  if (!key || !_utils["default"].isString(key)) {
    throw new Error('Cache Key must be non empty String');
  }

  if (!timestamp) {
    throw new Error('Cache Expiration must be timestamp or instance of Date');
  }

  timestamp = _utils["default"].isDate(timestamp) ? timestamp.getTime() : timestamp;

  if (asyncHandler) {
    asyncHandler = _utils["default"].wrapAsync(asyncHandler);
  }

  return this.app.request.put({
    url: this.app.urls.cacheItemExpireAt(key) + '?timestamp=' + timestamp,
    data: {},
    isAsync: !!asyncHandler,
    asyncHandler: asyncHandler
  });
}

/***/ }),

/***/ "./src/cache/expire-in.js":
/*!********************************!*\
  !*** ./src/cache/expire-in.js ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.expireIn = expireIn;

var _utils = _interopRequireDefault(__webpack_require__(/*! ../utils */ "./src/utils.js"));

function expireIn(key, seconds, asyncHandler) {
  if (!key || !_utils["default"].isString(key)) {
    throw new Error('Cache Key must be non empty String');
  }

  if (!seconds) {
    throw new Error('Cache Expiration must be number of seconds');
  }

  if (asyncHandler) {
    asyncHandler = _utils["default"].wrapAsync(asyncHandler);
  }

  return this.app.request.put({
    url: this.app.urls.cacheItemExpireIn(key) + '?timeout=' + seconds,
    data: {},
    isAsync: !!asyncHandler,
    asyncHandler: asyncHandler
  });
}

/***/ }),

/***/ "./src/cache/get.js":
/*!**************************!*\
  !*** ./src/cache/get.js ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.get = get;

var _utils = _interopRequireDefault(__webpack_require__(/*! ../utils */ "./src/utils.js"));

var _parsers = __webpack_require__(/*! ./parsers */ "./src/cache/parsers.js");

function parseResult(result) {
  var className = result && result.___class;

  if (className) {
    var Class = _parsers.Parsers.get(className);

    if (Class) {
      result = new Class(result);
    }
  }

  return result;
}

function get(key, asyncHandler) {
  if (!key || !_utils["default"].isString(key)) {
    throw new Error('Cache Key must be non empty String');
  }

  if (asyncHandler) {
    asyncHandler = _utils["default"].wrapAsync(asyncHandler, parseResult);
  }

  var result = this.app.request.get({
    url: this.app.urls.cacheItem(key),
    isAsync: !!asyncHandler,
    asyncHandler: asyncHandler
  });

  if (asyncHandler) {
    return result;
  }

  return parseResult(result);
}

/***/ }),

/***/ "./src/cache/index.js":
/*!****************************!*\
  !*** ./src/cache/index.js ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _applyDecoratedDescriptor2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/applyDecoratedDescriptor */ "./node_modules/@babel/runtime/helpers/applyDecoratedDescriptor.js"));

var _extends2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/extends */ "./node_modules/@babel/runtime/helpers/extends.js"));

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));

var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js"));

var _utils = _interopRequireDefault(__webpack_require__(/*! ../utils */ "./src/utils.js"));

var _decorators = __webpack_require__(/*! ../decorators */ "./src/decorators/index.js");

var _put = __webpack_require__(/*! ./put */ "./src/cache/put.js");

var _get = __webpack_require__(/*! ./get */ "./src/cache/get.js");

var _remove = __webpack_require__(/*! ./remove */ "./src/cache/remove.js");

var _contains = __webpack_require__(/*! ./contains */ "./src/cache/contains.js");

var _expireIn = __webpack_require__(/*! ./expire-in */ "./src/cache/expire-in.js");

var _expireAt = __webpack_require__(/*! ./expire-at */ "./src/cache/expire-at.js");

var _parsers = __webpack_require__(/*! ./parsers */ "./src/cache/parsers.js");

var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _obj, _init, _init2, _init3, _init4, _init5, _init6;

var Cache = /*#__PURE__*/function () {
  function Cache(app) {
    (0, _classCallCheck2["default"])(this, Cache);
    this.app = app;
  } //TODO: do we need it?


  (0, _createClass2["default"])(Cache, [{
    key: "setObjectFactory",
    value: function setObjectFactory(objectName, factoryMethod) {
      _parsers.Parsers.set(objectName, factoryMethod);
    }
  }]);
  return Cache;
}();

(0, _extends2["default"])(Cache.prototype, (_dec = (0, _decorators.deprecated)('Backendless.Cache', 'Backendless.Cache.put'), _dec2 = (0, _decorators.deprecated)('Backendless.Cache', 'Backendless.Cache.get'), _dec3 = (0, _decorators.deprecated)('Backendless.Cache', 'Backendless.Cache.remove'), _dec4 = (0, _decorators.deprecated)('Backendless.Cache', 'Backendless.Cache.contains'), _dec5 = (0, _decorators.deprecated)('Backendless.Cache', 'Backendless.Cache.expireIn'), _dec6 = (0, _decorators.deprecated)('Backendless.Cache', 'Backendless.Cache.expireAt'), (_obj = {
  putSync: _utils["default"]["synchronized"](_put.put),
  put: _utils["default"].promisified(_put.put),
  getSync: _utils["default"]["synchronized"](_get.get),
  get: _utils["default"].promisified(_get.get),
  removeSync: _utils["default"]["synchronized"](_remove.remove),
  remove: _utils["default"].promisified(_remove.remove),
  containsSync: _utils["default"]["synchronized"](_contains.contains),
  contains: _utils["default"].promisified(_contains.contains),
  expireInSync: _utils["default"]["synchronized"](_expireIn.expireIn),
  expireIn: _utils["default"].promisified(_expireIn.expireIn),
  expireAtSync: _utils["default"]["synchronized"](_expireAt.expireAt),
  expireAt: _utils["default"].promisified(_expireAt.expireAt)
}, ((0, _applyDecoratedDescriptor2["default"])(_obj, "putSync", [_dec], (_init = Object.getOwnPropertyDescriptor(_obj, "putSync"), _init = _init ? _init.value : undefined, {
  enumerable: true,
  configurable: true,
  writable: true,
  initializer: function initializer() {
    return _init;
  }
}), _obj), (0, _applyDecoratedDescriptor2["default"])(_obj, "getSync", [_dec2], (_init2 = Object.getOwnPropertyDescriptor(_obj, "getSync"), _init2 = _init2 ? _init2.value : undefined, {
  enumerable: true,
  configurable: true,
  writable: true,
  initializer: function initializer() {
    return _init2;
  }
}), _obj), (0, _applyDecoratedDescriptor2["default"])(_obj, "removeSync", [_dec3], (_init3 = Object.getOwnPropertyDescriptor(_obj, "removeSync"), _init3 = _init3 ? _init3.value : undefined, {
  enumerable: true,
  configurable: true,
  writable: true,
  initializer: function initializer() {
    return _init3;
  }
}), _obj), (0, _applyDecoratedDescriptor2["default"])(_obj, "containsSync", [_dec4], (_init4 = Object.getOwnPropertyDescriptor(_obj, "containsSync"), _init4 = _init4 ? _init4.value : undefined, {
  enumerable: true,
  configurable: true,
  writable: true,
  initializer: function initializer() {
    return _init4;
  }
}), _obj), (0, _applyDecoratedDescriptor2["default"])(_obj, "expireInSync", [_dec5], (_init5 = Object.getOwnPropertyDescriptor(_obj, "expireInSync"), _init5 = _init5 ? _init5.value : undefined, {
  enumerable: true,
  configurable: true,
  writable: true,
  initializer: function initializer() {
    return _init5;
  }
}), _obj), (0, _applyDecoratedDescriptor2["default"])(_obj, "expireAtSync", [_dec6], (_init6 = Object.getOwnPropertyDescriptor(_obj, "expireAtSync"), _init6 = _init6 ? _init6.value : undefined, {
  enumerable: true,
  configurable: true,
  writable: true,
  initializer: function initializer() {
    return _init6;
  }
}), _obj)), _obj)));
var _default = Cache;
exports["default"] = _default;

/***/ }),

/***/ "./src/cache/parsers.js":
/*!******************************!*\
  !*** ./src/cache/parsers.js ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Parsers = void 0;
var Classes = {};
var Parsers = {
  set: function set(className, Class) {
    Classes[className] = Class;
  },
  get: function get(className) {
    return Classes[className];
  }
};
exports.Parsers = Parsers;

/***/ }),

/***/ "./src/cache/put.js":
/*!**************************!*\
  !*** ./src/cache/put.js ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.put = put;

var _utils = _interopRequireDefault(__webpack_require__(/*! ../utils */ "./src/utils.js"));

var _async = _interopRequireDefault(__webpack_require__(/*! ../request/async */ "./src/request/async.js"));

function put(key, value, timeToLive, asyncHandler) {
  if (!key || !_utils["default"].isString(key)) {
    throw new Error('Cache Key must be non empty String');
  }

  if (timeToLive instanceof _async["default"]) {
    asyncHandler = timeToLive;
    timeToLive = undefined;
  }

  if (timeToLive && !_utils["default"].isNumber(timeToLive)) {
    throw new Error('Cache timeToLive must be Number');
  }

  if (_utils["default"].isObject(value) && value.constructor !== Object) {
    value.___class = value.___class || _utils["default"].getClassName(value);
  }

  if (asyncHandler) {
    asyncHandler = _utils["default"].wrapAsync(asyncHandler);
  }

  return this.app.request.put({
    url: this.app.urls.cacheItem(key) + (timeToLive ? '?timeout=' + timeToLive : ''),
    headers: {
      'Content-Type': 'application/json'
    },
    data: JSON.stringify(value),
    isAsync: !!asyncHandler,
    asyncHandler: asyncHandler
  });
}

/***/ }),

/***/ "./src/cache/remove.js":
/*!*****************************!*\
  !*** ./src/cache/remove.js ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.remove = remove;

var _utils = _interopRequireDefault(__webpack_require__(/*! ../utils */ "./src/utils.js"));

function remove(key, asyncHandler) {
  if (!key || !_utils["default"].isString(key)) {
    throw new Error('Cache Key must be non empty String');
  }

  if (asyncHandler) {
    asyncHandler = _utils["default"].wrapAsync(asyncHandler);
  }

  return this.app.request["delete"]({
    url: this.app.urls.cacheItem(key),
    isAsync: !!asyncHandler,
    asyncHandler: asyncHandler
  });
}

/***/ }),

/***/ "./src/commerce/cancel-play-subscription.js":
/*!**************************************************!*\
  !*** ./src/commerce/cancel-play-subscription.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.cancelPlaySubscription = cancelPlaySubscription;

var _utils = _interopRequireDefault(__webpack_require__(/*! ../utils */ "./src/utils.js"));

var _validateStringArgument = __webpack_require__(/*! ./validate-string-argument */ "./src/commerce/validate-string-argument.js");

function cancelPlaySubscription(packageName, subscriptionId, token, asyncHandler) {
  (0, _validateStringArgument.validateStringArgument)('Package Name', packageName);
  (0, _validateStringArgument.validateStringArgument)('Subscription Id', subscriptionId);
  (0, _validateStringArgument.validateStringArgument)('Token', token);

  if (asyncHandler) {
    asyncHandler = _utils["default"].wrapAsync(asyncHandler);
  }

  return this.app.request.post({
    url: this.app.urls.commerceSubCancel(packageName, subscriptionId, token),
    isAsync: !!asyncHandler,
    asyncHandler: asyncHandler
  });
}

/***/ }),

/***/ "./src/commerce/get-play-subscription-status.js":
/*!******************************************************!*\
  !*** ./src/commerce/get-play-subscription-status.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getPlaySubscriptionStatus = getPlaySubscriptionStatus;

var _utils = _interopRequireDefault(__webpack_require__(/*! ../utils */ "./src/utils.js"));

var _validateStringArgument = __webpack_require__(/*! ./validate-string-argument */ "./src/commerce/validate-string-argument.js");

function getPlaySubscriptionStatus(packageName, subscriptionId, token, asyncHandler) {
  (0, _validateStringArgument.validateStringArgument)('Package Name', packageName);
  (0, _validateStringArgument.validateStringArgument)('Subscription Id', subscriptionId);
  (0, _validateStringArgument.validateStringArgument)('Token', token);

  if (asyncHandler) {
    asyncHandler = _utils["default"].wrapAsync(asyncHandler);
  }

  return this.app.request.get({
    url: this.app.urls.commerceSubStatus(packageName, subscriptionId, token),
    isAsync: !!asyncHandler,
    asyncHandler: asyncHandler
  });
}

/***/ }),

/***/ "./src/commerce/index.js":
/*!*******************************!*\
  !*** ./src/commerce/index.js ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _applyDecoratedDescriptor2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/applyDecoratedDescriptor */ "./node_modules/@babel/runtime/helpers/applyDecoratedDescriptor.js"));

var _extends2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/extends */ "./node_modules/@babel/runtime/helpers/extends.js"));

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));

var _utils = _interopRequireDefault(__webpack_require__(/*! ../utils */ "./src/utils.js"));

var _decorators = __webpack_require__(/*! ../decorators */ "./src/decorators/index.js");

var _validatePlayPurchase = __webpack_require__(/*! ./validate-play-purchase */ "./src/commerce/validate-play-purchase.js");

var _cancelPlaySubscription = __webpack_require__(/*! ./cancel-play-subscription */ "./src/commerce/cancel-play-subscription.js");

var _getPlaySubscriptionStatus = __webpack_require__(/*! ./get-play-subscription-status */ "./src/commerce/get-play-subscription-status.js");

var _dec, _dec2, _dec3, _obj, _init, _init2, _init3;

var Commerce = function Commerce(app) {
  (0, _classCallCheck2["default"])(this, Commerce);
  this.app = app;
};

(0, _extends2["default"])(Commerce.prototype, (_dec = (0, _decorators.deprecated)('Backendless.Commerce', 'Backendless.Commerce.validatePlayPurchase'), _dec2 = (0, _decorators.deprecated)('Backendless.Commerce', 'Backendless.Commerce.cancelPlaySubscription'), _dec3 = (0, _decorators.deprecated)('Backendless.Commerce', 'Backendless.Commerce.getPlaySubscriptionStatus'), (_obj = {
  validatePlayPurchaseSync: _utils["default"]["synchronized"](_validatePlayPurchase.validatePlayPurchase),
  validatePlayPurchase: _utils["default"].promisified(_validatePlayPurchase.validatePlayPurchase),
  cancelPlaySubscriptionSync: _utils["default"]["synchronized"](_cancelPlaySubscription.cancelPlaySubscription),
  cancelPlaySubscription: _utils["default"].promisified(_cancelPlaySubscription.cancelPlaySubscription),
  getPlaySubscriptionStatusSync: _utils["default"]["synchronized"](_getPlaySubscriptionStatus.getPlaySubscriptionStatus),
  getPlaySubscriptionStatus: _utils["default"].promisified(_getPlaySubscriptionStatus.getPlaySubscriptionStatus)
}, ((0, _applyDecoratedDescriptor2["default"])(_obj, "validatePlayPurchaseSync", [_dec], (_init = Object.getOwnPropertyDescriptor(_obj, "validatePlayPurchaseSync"), _init = _init ? _init.value : undefined, {
  enumerable: true,
  configurable: true,
  writable: true,
  initializer: function initializer() {
    return _init;
  }
}), _obj), (0, _applyDecoratedDescriptor2["default"])(_obj, "cancelPlaySubscriptionSync", [_dec2], (_init2 = Object.getOwnPropertyDescriptor(_obj, "cancelPlaySubscriptionSync"), _init2 = _init2 ? _init2.value : undefined, {
  enumerable: true,
  configurable: true,
  writable: true,
  initializer: function initializer() {
    return _init2;
  }
}), _obj), (0, _applyDecoratedDescriptor2["default"])(_obj, "getPlaySubscriptionStatusSync", [_dec3], (_init3 = Object.getOwnPropertyDescriptor(_obj, "getPlaySubscriptionStatusSync"), _init3 = _init3 ? _init3.value : undefined, {
  enumerable: true,
  configurable: true,
  writable: true,
  initializer: function initializer() {
    return _init3;
  }
}), _obj)), _obj)));
var _default = Commerce;
exports["default"] = _default;

/***/ }),

/***/ "./src/commerce/validate-play-purchase.js":
/*!************************************************!*\
  !*** ./src/commerce/validate-play-purchase.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.validatePlayPurchase = validatePlayPurchase;

var _utils = _interopRequireDefault(__webpack_require__(/*! ../utils */ "./src/utils.js"));

var _validateStringArgument = __webpack_require__(/*! ./validate-string-argument */ "./src/commerce/validate-string-argument.js");

function validatePlayPurchase(packageName, productId, token, asyncHandler) {
  (0, _validateStringArgument.validateStringArgument)('Package Name', packageName);
  (0, _validateStringArgument.validateStringArgument)('Product Id', productId);
  (0, _validateStringArgument.validateStringArgument)('Token', token);

  if (asyncHandler) {
    asyncHandler = _utils["default"].wrapAsync(asyncHandler);
  }

  return this.app.request.get({
    url: this.app.urls.commerceValidate(packageName, productId, token),
    isAsync: !!asyncHandler,
    asyncHandler: asyncHandler
  });
}

/***/ }),

/***/ "./src/commerce/validate-string-argument.js":
/*!**************************************************!*\
  !*** ./src/commerce/validate-string-argument.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.validateStringArgument = validateStringArgument;

var _utils = _interopRequireDefault(__webpack_require__(/*! ../utils */ "./src/utils.js"));

function validateStringArgument(label, value) {
  if (!value || !_utils["default"].isString(value)) {
    throw new Error("".concat(label, " must be provided and must be not an empty STRING!"));
  }
}

/***/ }),

/***/ "./src/counters/counter.js":
/*!*********************************!*\
  !*** ./src/counters/counter.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _applyDecoratedDescriptor2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/applyDecoratedDescriptor */ "./node_modules/@babel/runtime/helpers/applyDecoratedDescriptor.js"));

var _extends2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/extends */ "./node_modules/@babel/runtime/helpers/extends.js"));

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));

var _utils = _interopRequireDefault(__webpack_require__(/*! ../utils */ "./src/utils.js"));

var _decorators = __webpack_require__(/*! ../decorators */ "./src/decorators/index.js");

var _methods = __webpack_require__(/*! ./methods */ "./src/counters/methods/index.js");

var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _dec7, _dec8, _dec9, _obj, _init, _init2, _init3, _init4, _init5, _init6, _init7, _init8, _init9;

var Counter = function Counter(name, app) {
  (0, _classCallCheck2["default"])(this, Counter);

  if (!name || !_utils["default"].isString(name)) {
    throw new Error('Counter Name must be non empty String');
  }

  this.name = name;
  this.app = app;
};

var withCounterName = function withCounterName(method) {
  return function () {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return method.call.apply(method, [this, this.name].concat(args));
  };
}; //TODO: will be removed when remove sync methods


var namespaceLabel = 'Backendless.Counter.of(<CounterName>)';
(0, _extends2["default"])(Counter.prototype, (_dec = (0, _decorators.deprecated)(namespaceLabel, "".concat(namespaceLabel, ".incrementAndGet")), _dec2 = (0, _decorators.deprecated)(namespaceLabel, "".concat(namespaceLabel, ".getAndIncrement")), _dec3 = (0, _decorators.deprecated)(namespaceLabel, "".concat(namespaceLabel, ".decrementAndGet")), _dec4 = (0, _decorators.deprecated)(namespaceLabel, "".concat(namespaceLabel, ".getAndDecrement")), _dec5 = (0, _decorators.deprecated)(namespaceLabel, "".concat(namespaceLabel, ".reset")), _dec6 = (0, _decorators.deprecated)(namespaceLabel, "".concat(namespaceLabel, ".get")), _dec7 = (0, _decorators.deprecated)(namespaceLabel, "".concat(namespaceLabel, ".addAndGet")), _dec8 = (0, _decorators.deprecated)(namespaceLabel, "".concat(namespaceLabel, ".getAndAdd")), _dec9 = (0, _decorators.deprecated)(namespaceLabel, "".concat(namespaceLabel, ".compareAndSet")), (_obj = {
  incrementAndGetSync: _utils["default"]["synchronized"](withCounterName(_methods.incrementAndGet)),
  incrementAndGet: _utils["default"].promisified(withCounterName(_methods.incrementAndGet)),
  getAndIncrementSync: _utils["default"]["synchronized"](withCounterName(_methods.getAndIncrement)),
  getAndIncrement: _utils["default"].promisified(withCounterName(_methods.getAndIncrement)),
  decrementAndGetSync: _utils["default"]["synchronized"](withCounterName(_methods.decrementAndGet)),
  decrementAndGet: _utils["default"].promisified(withCounterName(_methods.decrementAndGet)),
  getAndDecrementSync: _utils["default"]["synchronized"](withCounterName(_methods.getAndDecrement)),
  getAndDecrement: _utils["default"].promisified(withCounterName(_methods.getAndDecrement)),
  resetSync: _utils["default"]["synchronized"](withCounterName(_methods.reset)),
  reset: _utils["default"].promisified(withCounterName(_methods.reset)),
  getSync: _utils["default"]["synchronized"](withCounterName(_methods.get)),
  get: _utils["default"].promisified(withCounterName(_methods.get)),
  addAndGetSync: _utils["default"]["synchronized"](withCounterName(_methods.addAndGet)),
  addAndGet: _utils["default"].promisified(withCounterName(_methods.addAndGet)),
  getAndAddSync: _utils["default"]["synchronized"](withCounterName(_methods.getAndAdd)),
  getAndAdd: _utils["default"].promisified(withCounterName(_methods.getAndAdd)),
  compareAndSetSync: _utils["default"]["synchronized"](withCounterName(_methods.compareAndSet)),
  compareAndSet: _utils["default"].promisified(withCounterName(_methods.compareAndSet))
}, ((0, _applyDecoratedDescriptor2["default"])(_obj, "incrementAndGetSync", [_dec], (_init = Object.getOwnPropertyDescriptor(_obj, "incrementAndGetSync"), _init = _init ? _init.value : undefined, {
  enumerable: true,
  configurable: true,
  writable: true,
  initializer: function initializer() {
    return _init;
  }
}), _obj), (0, _applyDecoratedDescriptor2["default"])(_obj, "getAndIncrementSync", [_dec2], (_init2 = Object.getOwnPropertyDescriptor(_obj, "getAndIncrementSync"), _init2 = _init2 ? _init2.value : undefined, {
  enumerable: true,
  configurable: true,
  writable: true,
  initializer: function initializer() {
    return _init2;
  }
}), _obj), (0, _applyDecoratedDescriptor2["default"])(_obj, "decrementAndGetSync", [_dec3], (_init3 = Object.getOwnPropertyDescriptor(_obj, "decrementAndGetSync"), _init3 = _init3 ? _init3.value : undefined, {
  enumerable: true,
  configurable: true,
  writable: true,
  initializer: function initializer() {
    return _init3;
  }
}), _obj), (0, _applyDecoratedDescriptor2["default"])(_obj, "getAndDecrementSync", [_dec4], (_init4 = Object.getOwnPropertyDescriptor(_obj, "getAndDecrementSync"), _init4 = _init4 ? _init4.value : undefined, {
  enumerable: true,
  configurable: true,
  writable: true,
  initializer: function initializer() {
    return _init4;
  }
}), _obj), (0, _applyDecoratedDescriptor2["default"])(_obj, "resetSync", [_dec5], (_init5 = Object.getOwnPropertyDescriptor(_obj, "resetSync"), _init5 = _init5 ? _init5.value : undefined, {
  enumerable: true,
  configurable: true,
  writable: true,
  initializer: function initializer() {
    return _init5;
  }
}), _obj), (0, _applyDecoratedDescriptor2["default"])(_obj, "getSync", [_dec6], (_init6 = Object.getOwnPropertyDescriptor(_obj, "getSync"), _init6 = _init6 ? _init6.value : undefined, {
  enumerable: true,
  configurable: true,
  writable: true,
  initializer: function initializer() {
    return _init6;
  }
}), _obj), (0, _applyDecoratedDescriptor2["default"])(_obj, "addAndGetSync", [_dec7], (_init7 = Object.getOwnPropertyDescriptor(_obj, "addAndGetSync"), _init7 = _init7 ? _init7.value : undefined, {
  enumerable: true,
  configurable: true,
  writable: true,
  initializer: function initializer() {
    return _init7;
  }
}), _obj), (0, _applyDecoratedDescriptor2["default"])(_obj, "getAndAddSync", [_dec8], (_init8 = Object.getOwnPropertyDescriptor(_obj, "getAndAddSync"), _init8 = _init8 ? _init8.value : undefined, {
  enumerable: true,
  configurable: true,
  writable: true,
  initializer: function initializer() {
    return _init8;
  }
}), _obj), (0, _applyDecoratedDescriptor2["default"])(_obj, "compareAndSetSync", [_dec9], (_init9 = Object.getOwnPropertyDescriptor(_obj, "compareAndSetSync"), _init9 = _init9 ? _init9.value : undefined, {
  enumerable: true,
  configurable: true,
  writable: true,
  initializer: function initializer() {
    return _init9;
  }
}), _obj)), _obj)));
var _default = Counter;
exports["default"] = _default;

/***/ }),

/***/ "./src/counters/index.js":
/*!*******************************!*\
  !*** ./src/counters/index.js ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _applyDecoratedDescriptor2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/applyDecoratedDescriptor */ "./node_modules/@babel/runtime/helpers/applyDecoratedDescriptor.js"));

var _extends2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/extends */ "./node_modules/@babel/runtime/helpers/extends.js"));

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));

var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js"));

var _utils = _interopRequireDefault(__webpack_require__(/*! ../utils */ "./src/utils.js"));

var _decorators = __webpack_require__(/*! ../decorators */ "./src/decorators/index.js");

var _counter = _interopRequireDefault(__webpack_require__(/*! ./counter */ "./src/counters/counter.js"));

var _methods = __webpack_require__(/*! ./methods */ "./src/counters/methods/index.js");

var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _dec7, _dec8, _dec9, _obj, _init, _init2, _init3, _init4, _init5, _init6, _init7, _init8, _init9;

var Counters = /*#__PURE__*/function () {
  function Counters(app) {
    (0, _classCallCheck2["default"])(this, Counters);
    this.app = app;
  }

  (0, _createClass2["default"])(Counters, [{
    key: "of",
    value: function of(name) {
      return new _counter["default"](name, this.app);
    }
  }]);
  return Counters;
}();

(0, _extends2["default"])(Counters.prototype, (_dec = (0, _decorators.deprecated)('Backendless.Counters', 'Backendless.Counters.incrementAndGet'), _dec2 = (0, _decorators.deprecated)('Backendless.Counters', 'Backendless.Counters.getAndIncrement'), _dec3 = (0, _decorators.deprecated)('Backendless.Counters', 'Backendless.Counters.decrementAndGet'), _dec4 = (0, _decorators.deprecated)('Backendless.Counters', 'Backendless.Counters.getAndDecrement'), _dec5 = (0, _decorators.deprecated)('Backendless.Counters', 'Backendless.Counters.reset'), _dec6 = (0, _decorators.deprecated)('Backendless.Counters', 'Backendless.Counters.get'), _dec7 = (0, _decorators.deprecated)('Backendless.Counters', 'Backendless.Counters.addAndGet'), _dec8 = (0, _decorators.deprecated)('Backendless.Counters', 'Backendless.Counters.getAndAdd'), _dec9 = (0, _decorators.deprecated)('Backendless.Counters', 'Backendless.Counters.compareAndSet'), (_obj = {
  incrementAndGetSync: _utils["default"]["synchronized"](_methods.incrementAndGet),
  incrementAndGet: _utils["default"].promisified(_methods.incrementAndGet),
  getAndIncrementSync: _utils["default"]["synchronized"](_methods.getAndIncrement),
  getAndIncrement: _utils["default"].promisified(_methods.getAndIncrement),
  decrementAndGetSync: _utils["default"]["synchronized"](_methods.decrementAndGet),
  decrementAndGet: _utils["default"].promisified(_methods.decrementAndGet),
  getAndDecrementSync: _utils["default"]["synchronized"](_methods.getAndDecrement),
  getAndDecrement: _utils["default"].promisified(_methods.getAndDecrement),
  resetSync: _utils["default"]["synchronized"](_methods.reset),
  reset: _utils["default"].promisified(_methods.reset),
  getSync: _utils["default"]["synchronized"](_methods.get),
  get: _utils["default"].promisified(_methods.get),
  addAndGetSync: _utils["default"]["synchronized"](_methods.addAndGet),
  addAndGet: _utils["default"].promisified(_methods.addAndGet),
  getAndAddSync: _utils["default"]["synchronized"](_methods.getAndAdd),
  getAndAdd: _utils["default"].promisified(_methods.getAndAdd),
  compareAndSetSync: _utils["default"]["synchronized"](_methods.compareAndSet),
  compareAndSet: _utils["default"].promisified(_methods.compareAndSet)
}, ((0, _applyDecoratedDescriptor2["default"])(_obj, "incrementAndGetSync", [_dec], (_init = Object.getOwnPropertyDescriptor(_obj, "incrementAndGetSync"), _init = _init ? _init.value : undefined, {
  enumerable: true,
  configurable: true,
  writable: true,
  initializer: function initializer() {
    return _init;
  }
}), _obj), (0, _applyDecoratedDescriptor2["default"])(_obj, "getAndIncrementSync", [_dec2], (_init2 = Object.getOwnPropertyDescriptor(_obj, "getAndIncrementSync"), _init2 = _init2 ? _init2.value : undefined, {
  enumerable: true,
  configurable: true,
  writable: true,
  initializer: function initializer() {
    return _init2;
  }
}), _obj), (0, _applyDecoratedDescriptor2["default"])(_obj, "decrementAndGetSync", [_dec3], (_init3 = Object.getOwnPropertyDescriptor(_obj, "decrementAndGetSync"), _init3 = _init3 ? _init3.value : undefined, {
  enumerable: true,
  configurable: true,
  writable: true,
  initializer: function initializer() {
    return _init3;
  }
}), _obj), (0, _applyDecoratedDescriptor2["default"])(_obj, "getAndDecrementSync", [_dec4], (_init4 = Object.getOwnPropertyDescriptor(_obj, "getAndDecrementSync"), _init4 = _init4 ? _init4.value : undefined, {
  enumerable: true,
  configurable: true,
  writable: true,
  initializer: function initializer() {
    return _init4;
  }
}), _obj), (0, _applyDecoratedDescriptor2["default"])(_obj, "resetSync", [_dec5], (_init5 = Object.getOwnPropertyDescriptor(_obj, "resetSync"), _init5 = _init5 ? _init5.value : undefined, {
  enumerable: true,
  configurable: true,
  writable: true,
  initializer: function initializer() {
    return _init5;
  }
}), _obj), (0, _applyDecoratedDescriptor2["default"])(_obj, "getSync", [_dec6], (_init6 = Object.getOwnPropertyDescriptor(_obj, "getSync"), _init6 = _init6 ? _init6.value : undefined, {
  enumerable: true,
  configurable: true,
  writable: true,
  initializer: function initializer() {
    return _init6;
  }
}), _obj), (0, _applyDecoratedDescriptor2["default"])(_obj, "addAndGetSync", [_dec7], (_init7 = Object.getOwnPropertyDescriptor(_obj, "addAndGetSync"), _init7 = _init7 ? _init7.value : undefined, {
  enumerable: true,
  configurable: true,
  writable: true,
  initializer: function initializer() {
    return _init7;
  }
}), _obj), (0, _applyDecoratedDescriptor2["default"])(_obj, "getAndAddSync", [_dec8], (_init8 = Object.getOwnPropertyDescriptor(_obj, "getAndAddSync"), _init8 = _init8 ? _init8.value : undefined, {
  enumerable: true,
  configurable: true,
  writable: true,
  initializer: function initializer() {
    return _init8;
  }
}), _obj), (0, _applyDecoratedDescriptor2["default"])(_obj, "compareAndSetSync", [_dec9], (_init9 = Object.getOwnPropertyDescriptor(_obj, "compareAndSetSync"), _init9 = _init9 ? _init9.value : undefined, {
  enumerable: true,
  configurable: true,
  writable: true,
  initializer: function initializer() {
    return _init9;
  }
}), _obj)), _obj)));
var _default = Counters;
exports["default"] = _default;

/***/ }),

/***/ "./src/counters/methods/add-and-get.js":
/*!*********************************************!*\
  !*** ./src/counters/methods/add-and-get.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.addAndGet = addAndGet;

var _utils = _interopRequireDefault(__webpack_require__(/*! ../../utils */ "./src/utils.js"));

function addAndGet(counterName, value, asyncHandler) {
  if (!counterName || !_utils["default"].isString(counterName)) {
    throw new Error('Counter Name must be non empty String');
  }

  if (!_utils["default"].isNumber(value)) {
    throw new Error('Counter Value must number');
  }

  if (asyncHandler) {
    asyncHandler = _utils["default"].wrapAsync(asyncHandler);
  }

  return this.app.request.put({
    url: this.app.urls.counterAddAndGet(counterName),
    query: {
      value: value
    },
    isAsync: !!asyncHandler,
    asyncHandler: asyncHandler
  });
}

/***/ }),

/***/ "./src/counters/methods/compare-and-set.js":
/*!*************************************************!*\
  !*** ./src/counters/methods/compare-and-set.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.compareAndSet = compareAndSet;

var _utils = _interopRequireDefault(__webpack_require__(/*! ../../utils */ "./src/utils.js"));

function compareAndSet(counterName, expected, updated, asyncHandler) {
  if (!counterName || !_utils["default"].isString(counterName)) {
    throw new Error('Counter Name must be non empty String');
  }

  if (!_utils["default"].isNumber(expected)) {
    throw new Error('Counter "expected" value must be Number');
  }

  if (!_utils["default"].isNumber(updated)) {
    throw new Error('Counter "updated" value must be Number');
  }

  if (asyncHandler) {
    asyncHandler = _utils["default"].wrapAsync(asyncHandler);
  }

  return this.app.request.put({
    url: this.app.urls.counterCompareAndSet(counterName),
    query: {
      expected: expected,
      updatedvalue: updated
    },
    isAsync: !!asyncHandler,
    asyncHandler: asyncHandler
  });
}

/***/ }),

/***/ "./src/counters/methods/decrement-and-get.js":
/*!***************************************************!*\
  !*** ./src/counters/methods/decrement-and-get.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.decrementAndGet = decrementAndGet;

var _utils = _interopRequireDefault(__webpack_require__(/*! ../../utils */ "./src/utils.js"));

function decrementAndGet(counterName, asyncHandler) {
  if (!counterName || !_utils["default"].isString(counterName)) {
    throw new Error('Counter Name must be non empty String');
  }

  if (asyncHandler) {
    asyncHandler = _utils["default"].wrapAsync(asyncHandler);
  }

  return this.app.request.put({
    url: this.app.urls.counterDecrementAndGet(counterName),
    isAsync: !!asyncHandler,
    asyncHandler: asyncHandler
  });
}

/***/ }),

/***/ "./src/counters/methods/get-and-add.js":
/*!*********************************************!*\
  !*** ./src/counters/methods/get-and-add.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getAndAdd = getAndAdd;

var _utils = _interopRequireDefault(__webpack_require__(/*! ../../utils */ "./src/utils.js"));

function getAndAdd(counterName, value, asyncHandler) {
  if (!counterName || !_utils["default"].isString(counterName)) {
    throw new Error('Counter Name must be non empty String');
  }

  if (!_utils["default"].isNumber(value)) {
    throw new Error('Counter "value" must be Number');
  }

  if (asyncHandler) {
    asyncHandler = _utils["default"].wrapAsync(asyncHandler);
  }

  return this.app.request.put({
    url: this.app.urls.counterGetAndAdd(counterName),
    query: {
      value: value
    },
    isAsync: !!asyncHandler,
    asyncHandler: asyncHandler
  });
}

/***/ }),

/***/ "./src/counters/methods/get-and-decrement.js":
/*!***************************************************!*\
  !*** ./src/counters/methods/get-and-decrement.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getAndDecrement = getAndDecrement;

var _utils = _interopRequireDefault(__webpack_require__(/*! ../../utils */ "./src/utils.js"));

function getAndDecrement(counterName, asyncHandler) {
  if (!counterName || !_utils["default"].isString(counterName)) {
    throw new Error('Counter Name must be non empty String');
  }

  if (asyncHandler) {
    asyncHandler = _utils["default"].wrapAsync(asyncHandler);
  }

  return this.app.request.put({
    url: this.app.urls.counterGetAndDecrement(counterName),
    isAsync: !!asyncHandler,
    asyncHandler: asyncHandler
  });
}

/***/ }),

/***/ "./src/counters/methods/get-and-increment.js":
/*!***************************************************!*\
  !*** ./src/counters/methods/get-and-increment.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getAndIncrement = getAndIncrement;

var _utils = _interopRequireDefault(__webpack_require__(/*! ../../utils */ "./src/utils.js"));

function getAndIncrement(counterName, asyncHandler) {
  if (!counterName || !_utils["default"].isString(counterName)) {
    throw new Error('Counter Name must be non empty String');
  }

  if (asyncHandler) {
    asyncHandler = _utils["default"].wrapAsync(asyncHandler);
  }

  return this.app.request.put({
    url: this.app.urls.counterGetAndIncrement(counterName),
    isAsync: !!asyncHandler,
    asyncHandler: asyncHandler
  });
}

/***/ }),

/***/ "./src/counters/methods/get.js":
/*!*************************************!*\
  !*** ./src/counters/methods/get.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.get = get;

var _utils = _interopRequireDefault(__webpack_require__(/*! ../../utils */ "./src/utils.js"));

function get(counterName, asyncHandler) {
  if (!counterName || !_utils["default"].isString(counterName)) {
    throw new Error('Counter Name must be non empty String');
  }

  if (asyncHandler) {
    asyncHandler = _utils["default"].wrapAsync(asyncHandler);
  }

  return this.app.request.get({
    url: this.app.urls.counter(counterName),
    isAsync: !!asyncHandler,
    asyncHandler: asyncHandler
  });
}

/***/ }),

/***/ "./src/counters/methods/increment-and-get.js":
/*!***************************************************!*\
  !*** ./src/counters/methods/increment-and-get.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.incrementAndGet = incrementAndGet;

var _utils = _interopRequireDefault(__webpack_require__(/*! ../../utils */ "./src/utils.js"));

function incrementAndGet(counterName, asyncHandler) {
  if (!counterName || !_utils["default"].isString(counterName)) {
    throw new Error('Counter Name must be non empty String');
  }

  if (asyncHandler) {
    asyncHandler = _utils["default"].wrapAsync(asyncHandler);
  }

  return this.app.request.put({
    url: this.app.urls.counterIncrementAndGet(counterName),
    isAsync: !!asyncHandler,
    asyncHandler: asyncHandler
  });
}

/***/ }),

/***/ "./src/counters/methods/index.js":
/*!***************************************!*\
  !*** ./src/counters/methods/index.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _incrementAndGet = __webpack_require__(/*! ./increment-and-get */ "./src/counters/methods/increment-and-get.js");

Object.keys(_incrementAndGet).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _incrementAndGet[key];
    }
  });
});

var _decrementAndGet = __webpack_require__(/*! ./decrement-and-get */ "./src/counters/methods/decrement-and-get.js");

Object.keys(_decrementAndGet).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _decrementAndGet[key];
    }
  });
});

var _get = __webpack_require__(/*! ./get */ "./src/counters/methods/get.js");

Object.keys(_get).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _get[key];
    }
  });
});

var _getAndIncrement = __webpack_require__(/*! ./get-and-increment */ "./src/counters/methods/get-and-increment.js");

Object.keys(_getAndIncrement).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _getAndIncrement[key];
    }
  });
});

var _getAndDecrement = __webpack_require__(/*! ./get-and-decrement */ "./src/counters/methods/get-and-decrement.js");

Object.keys(_getAndDecrement).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _getAndDecrement[key];
    }
  });
});

var _getAndAdd = __webpack_require__(/*! ./get-and-add */ "./src/counters/methods/get-and-add.js");

Object.keys(_getAndAdd).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _getAndAdd[key];
    }
  });
});

var _addAndGet = __webpack_require__(/*! ./add-and-get */ "./src/counters/methods/add-and-get.js");

Object.keys(_addAndGet).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _addAndGet[key];
    }
  });
});

var _compareAndSet = __webpack_require__(/*! ./compare-and-set */ "./src/counters/methods/compare-and-set.js");

Object.keys(_compareAndSet).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _compareAndSet[key];
    }
  });
});

var _reset = __webpack_require__(/*! ./reset */ "./src/counters/methods/reset.js");

Object.keys(_reset).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _reset[key];
    }
  });
});

/***/ }),

/***/ "./src/counters/methods/reset.js":
/*!***************************************!*\
  !*** ./src/counters/methods/reset.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.reset = reset;

var _utils = _interopRequireDefault(__webpack_require__(/*! ../../utils */ "./src/utils.js"));

function reset(counterName, asyncHandler) {
  if (!counterName || !_utils["default"].isString(counterName)) {
    throw new Error('Counter Name must be non empty String');
  }

  if (asyncHandler) {
    asyncHandler = _utils["default"].wrapAsync(asyncHandler);
  }

  return this.app.request.put({
    url: this.app.urls.counterReset(counterName),
    isAsync: !!asyncHandler,
    asyncHandler: asyncHandler
  });
}

/***/ }),

/***/ "./src/data/describe.js":
/*!******************************!*\
  !*** ./src/data/describe.js ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.describe = describe;

var _utils = _interopRequireDefault(__webpack_require__(/*! ../utils */ "./src/utils.js"));

function describe(className, asyncHandler) {
  className = _utils["default"].isString(className) ? className : _utils["default"].getClassName(className);
  return this.app.request.get({
    url: this.app.urls.dataTableProps(className),
    isAsync: !!asyncHandler,
    asyncHandler: asyncHandler
  });
}

/***/ }),

/***/ "./src/data/geo/constants.js":
/*!***********************************!*\
  !*** ./src/data/geo/constants.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.GeoTypes = void 0;
var GeoTypes = {
  POINT: 'Point',
  LINE_STRING: 'LineString',
  POLYGON: 'Polygon'
};
exports.GeoTypes = GeoTypes;

/***/ }),

/***/ "./src/data/geo/geo-constructor.js":
/*!*****************************************!*\
  !*** ./src/data/geo/geo-constructor.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = _default;

var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));

var _toArray2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/toArray */ "./node_modules/@babel/runtime/helpers/toArray.js"));

var _slicedToArray2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ "./node_modules/@babel/runtime/helpers/slicedToArray.js"));

var _point = _interopRequireDefault(__webpack_require__(/*! ./point */ "./src/data/geo/point.js"));

var _linestring = _interopRequireDefault(__webpack_require__(/*! ./linestring */ "./src/data/geo/linestring.js"));

var _polygon = _interopRequireDefault(__webpack_require__(/*! ./polygon */ "./src/data/geo/polygon.js"));

var _constants = __webpack_require__(/*! ./constants */ "./src/data/geo/constants.js");

var _spatialReferenceSystem = _interopRequireDefault(__webpack_require__(/*! ./spatial-reference-system */ "./src/data/geo/spatial-reference-system.js"));

var _Constructors;

var pointConstructor = function pointConstructor(coordinates, srs) {
  var _coordinates = (0, _slicedToArray2["default"])(coordinates, 2),
      x = _coordinates[0],
      y = _coordinates[1];

  return new _point["default"](srs).setX(x).setY(y);
};

var lineStringConstructor = function lineStringConstructor(coordinates, srs) {
  var points = coordinates.map(function (coordsPair) {
    return pointConstructor(coordsPair, srs);
  });
  return new _linestring["default"](points, srs);
};

var polygonConstructor = function polygonConstructor(coordinates, srs) {
  var lineStrings = coordinates.map(function (lineString) {
    return lineStringConstructor(lineString, srs);
  });

  var _lineStrings = (0, _toArray2["default"])(lineStrings),
      boundary = _lineStrings[0],
      holes = _lineStrings.slice(1);

  return new _polygon["default"](boundary, holes, srs);
};

var Constructors = (_Constructors = {}, (0, _defineProperty2["default"])(_Constructors, _constants.GeoTypes.POINT, pointConstructor), (0, _defineProperty2["default"])(_Constructors, _constants.GeoTypes.LINE_STRING, lineStringConstructor), (0, _defineProperty2["default"])(_Constructors, _constants.GeoTypes.POLYGON, polygonConstructor), _Constructors);

function _default(geoObject, srs) {
  var constructor = Constructors[geoObject.type];
  srs = srs || _spatialReferenceSystem["default"].valueBySRSId(geoObject.srsId);

  if (constructor) {
    return constructor(geoObject.coordinates, srs);
  }

  throw new Error("There is no constructor for ".concat(geoObject.type));
}

/***/ }),

/***/ "./src/data/geo/geo-json-parser.js":
/*!*****************************************!*\
  !*** ./src/data/geo/geo-json-parser.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));

var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js"));

var _geoConstructor = _interopRequireDefault(__webpack_require__(/*! ./geo-constructor */ "./src/data/geo/geo-constructor.js"));

var GeoJSONParser = /*#__PURE__*/function () {
  function GeoJSONParser(srs) {
    (0, _classCallCheck2["default"])(this, GeoJSONParser);
    this.srs = srs;
  }

  (0, _createClass2["default"])(GeoJSONParser, [{
    key: "read",
    value: function read(geoJSON) {
      return (0, _geoConstructor["default"])(geoJSON, this.srs);
    }
  }]);
  return GeoJSONParser;
}();

var _default = GeoJSONParser;
exports["default"] = _default;

/***/ }),

/***/ "./src/data/geo/geometry.js":
/*!**********************************!*\
  !*** ./src/data/geo/geometry.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));

var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js"));

var _spatialReferenceSystem = _interopRequireDefault(__webpack_require__(/*! ./spatial-reference-system */ "./src/data/geo/spatial-reference-system.js"));

var _geoJsonParser = _interopRequireDefault(__webpack_require__(/*! ./geo-json-parser */ "./src/data/geo/geo-json-parser.js"));

var _wktParser = _interopRequireDefault(__webpack_require__(/*! ./wkt-parser */ "./src/data/geo/wkt-parser.js"));

var Geometry = /*#__PURE__*/function () {
  (0, _createClass2["default"])(Geometry, null, [{
    key: "fromWKT",
    value: function fromWKT(wellKnownText, srs) {
      return new _wktParser["default"](srs).read(wellKnownText);
    }
  }, {
    key: "fromGeoJSON",
    value: function fromGeoJSON(geoJSON, srs) {
      return new _geoJsonParser["default"](srs).read(geoJSON);
    }
  }]);

  function Geometry(srs) {
    (0, _classCallCheck2["default"])(this, Geometry);
    this.srs = srs || _spatialReferenceSystem["default"].DEFAULT;
  }

  (0, _createClass2["default"])(Geometry, [{
    key: "getSRS",
    value: function getSRS() {
      return this.srs;
    }
    /**
     * @abstract
     * @description It is an abstract method and it must be overridden in an inherited class
     */

  }, {
    key: "getGeojsonType",
    value: function getGeojsonType() {}
    /**
     * @abstract
     * @description It is an abstract method and it must be overridden in an inherited class
     */

  }, {
    key: "getWktType",
    value: function getWktType() {}
    /**
     * @abstract
     * @description It is an abstract method and it must be overridden in an inherited class
     */

  }, {
    key: "wktCoordinatePairs",
    value: function wktCoordinatePairs() {}
    /**
     * @abstract
     * @description It is an abstract method and it must be overridden in an inherited class
     */

  }, {
    key: "jsonCoordinatePairs",
    value: function jsonCoordinatePairs() {}
  }, {
    key: "asGeoJSON",
    value: function asGeoJSON() {
      return {
        type: this.getGeojsonType(),
        coordinates: this.jsonCoordinatePairs()
      };
    }
  }, {
    key: "asWKT",
    value: function asWKT() {
      return this.getWktType() + '(' + this.wktCoordinatePairs() + ')';
    }
  }, {
    key: "toJSON",
    value: function toJSON() {
      return this.asGeoJSON();
    }
  }, {
    key: "toString",
    value: function toString() {
      return '\'' + this.asWKT() + '\'';
    }
  }]);
  return Geometry;
}();

var _default = Geometry;
exports["default"] = _default;

/***/ }),

/***/ "./src/data/geo/linestring.js":
/*!************************************!*\
  !*** ./src/data/geo/linestring.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));

var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js"));

var _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ "./node_modules/@babel/runtime/helpers/inherits.js"));

var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"));

var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "./node_modules/@babel/runtime/helpers/getPrototypeOf.js"));

var _geometry = _interopRequireDefault(__webpack_require__(/*! ./geometry */ "./src/data/geo/geometry.js"));

var _constants = __webpack_require__(/*! ./constants */ "./src/data/geo/constants.js");

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2["default"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2["default"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2["default"])(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

var GEOJSON_TYPE = _constants.GeoTypes.LINE_STRING;
var WKT_TYPE = GEOJSON_TYPE.toUpperCase();

var LineString = /*#__PURE__*/function (_Geometry) {
  (0, _inherits2["default"])(LineString, _Geometry);

  var _super = _createSuper(LineString);

  function LineString(points, srs) {
    var _this;

    (0, _classCallCheck2["default"])(this, LineString);
    _this = _super.call(this, srs);
    _this.points = points || [];
    return _this;
  }

  (0, _createClass2["default"])(LineString, [{
    key: "getPoints",
    value: function getPoints() {
      return this.points;
    }
  }, {
    key: "setPoints",
    value: function setPoints(points) {
      this.points = points;
      return this;
    }
    /**
     * @override
     */

  }, {
    key: "getGeojsonType",
    value: function getGeojsonType() {
      return GEOJSON_TYPE;
    }
    /**
     * @override
     */

  }, {
    key: "getWktType",
    value: function getWktType() {
      return WKT_TYPE;
    }
    /**
     * @override
     */

  }, {
    key: "jsonCoordinatePairs",
    value: function jsonCoordinatePairs() {
      var pointsArray = [];
      this.getPoints().forEach(function (point) {
        pointsArray.push([point.getX(), point.getY()]);
      });
      return pointsArray;
    }
    /**
     * @override
     */

  }, {
    key: "wktCoordinatePairs",
    value: function wktCoordinatePairs() {
      return this.getPoints().map(function (point) {
        return "".concat(point.getX(), " ").concat(point.getY());
      }).join(',');
    }
  }]);
  return LineString;
}(_geometry["default"]);

var _default = LineString;
exports["default"] = _default;

/***/ }),

/***/ "./src/data/geo/point.js":
/*!*******************************!*\
  !*** ./src/data/geo/point.js ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));

var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js"));

var _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ "./node_modules/@babel/runtime/helpers/inherits.js"));

var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"));

var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "./node_modules/@babel/runtime/helpers/getPrototypeOf.js"));

var _geometry = _interopRequireDefault(__webpack_require__(/*! ./geometry */ "./src/data/geo/geometry.js"));

var _constants = __webpack_require__(/*! ./constants */ "./src/data/geo/constants.js");

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2["default"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2["default"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2["default"])(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

var GEOJSON_TYPE = _constants.GeoTypes.POINT;
var WKT_TYPE = GEOJSON_TYPE.toUpperCase();
var PRECISION = .000000001;

var Point = /*#__PURE__*/function (_Geometry) {
  (0, _inherits2["default"])(Point, _Geometry);

  var _super = _createSuper(Point);

  function Point(srs) {
    (0, _classCallCheck2["default"])(this, Point);
    return _super.call(this, srs);
  }

  (0, _createClass2["default"])(Point, [{
    key: "getX",
    value: function getX() {
      return this.x;
    }
  }, {
    key: "getY",
    value: function getY() {
      return this.y;
    }
  }, {
    key: "getLongitude",
    value: function getLongitude() {
      return this.x;
    }
  }, {
    key: "getLatitude",
    value: function getLatitude() {
      return this.y;
    }
  }, {
    key: "setX",
    value: function setX(x) {
      this.x = x;
      return this;
    }
  }, {
    key: "setY",
    value: function setY(y) {
      this.y = y;
      return this;
    }
  }, {
    key: "setLongitude",
    value: function setLongitude(x) {
      return this.setX(x);
    }
  }, {
    key: "setLatitude",
    value: function setLatitude(y) {
      return this.setY(y);
    }
    /**
     * @override
     */

  }, {
    key: "getGeojsonType",
    value: function getGeojsonType() {
      return GEOJSON_TYPE;
    }
    /**
     * @override
     */

  }, {
    key: "getWktType",
    value: function getWktType() {
      return WKT_TYPE;
    }
    /**
     * @override
     */

  }, {
    key: "wktCoordinatePairs",
    value: function wktCoordinatePairs() {
      return "".concat(this.x, " ").concat(this.y);
    }
    /**
     * @override
     */

  }, {
    key: "jsonCoordinatePairs",
    value: function jsonCoordinatePairs() {
      return [this.x, this.y];
    }
  }, {
    key: "equals",
    value: function equals(point) {
      if (this === point) {
        return true;
      }

      if (!(point instanceof Point)) {
        return false;
      }

      return Math.abs(point.x - this.x) < PRECISION && Math.abs(point.y - this.y) < PRECISION && this.srs === point.srs;
    }
  }]);
  return Point;
}(_geometry["default"]);

exports["default"] = Point;

/***/ }),

/***/ "./src/data/geo/polygon.js":
/*!*********************************!*\
  !*** ./src/data/geo/polygon.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _toConsumableArray2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ "./node_modules/@babel/runtime/helpers/toConsumableArray.js"));

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));

var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js"));

var _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ "./node_modules/@babel/runtime/helpers/inherits.js"));

var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"));

var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "./node_modules/@babel/runtime/helpers/getPrototypeOf.js"));

var _geometry = _interopRequireDefault(__webpack_require__(/*! ./geometry */ "./src/data/geo/geometry.js"));

var _linestring = _interopRequireDefault(__webpack_require__(/*! ./linestring */ "./src/data/geo/linestring.js"));

var _constants = __webpack_require__(/*! ./constants */ "./src/data/geo/constants.js");

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2["default"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2["default"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2["default"])(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

var GEOJSON_TYPE = _constants.GeoTypes.POLYGON;
var WKT_TYPE = GEOJSON_TYPE.toUpperCase();

var Polygon = /*#__PURE__*/function (_Geometry) {
  (0, _inherits2["default"])(Polygon, _Geometry);

  var _super = _createSuper(Polygon);

  function Polygon(boundary, holes, srs) {
    var _this;

    (0, _classCallCheck2["default"])(this, Polygon);
    _this = _super.call(this, srs);

    _this.setBoundary(boundary);

    _this.setHoles(holes);

    return _this;
  }

  (0, _createClass2["default"])(Polygon, [{
    key: "getBoundary",
    value: function getBoundary() {
      return this.boundary;
    }
  }, {
    key: "setBoundary",
    value: function setBoundary(boundary) {
      if (!boundary) {
        throw new Error('The \'boundary\' argument is required.');
      }

      if (!(boundary instanceof _linestring["default"])) {
        boundary = new _linestring["default"](boundary, this.srs);
      }

      this.boundary = boundary;
      return this;
    }
  }, {
    key: "getHoles",
    value: function getHoles() {
      return this.holes;
    }
  }, {
    key: "setHoles",
    value: function setHoles(holes) {
      this.holes = holes || [];
      return this;
    }
    /**
     * @override
     */

  }, {
    key: "getGeojsonType",
    value: function getGeojsonType() {
      return GEOJSON_TYPE;
    }
    /**
     * @override
     */

  }, {
    key: "getWktType",
    value: function getWktType() {
      return WKT_TYPE;
    }
    /**
     * @override
     */

  }, {
    key: "jsonCoordinatePairs",
    value: function jsonCoordinatePairs() {
      var outerBoundaries = [];
      this.getBoundary().getPoints().forEach(function (point) {
        outerBoundaries.push([point.getX(), point.getY()]);
      });
      var innerBoundaries = this.holes.map(function (hole) {
        return hole.getPoints().map(function (point) {
          return [point.getX(), point.getY()];
        });
      });
      return [outerBoundaries].concat((0, _toConsumableArray2["default"])(innerBoundaries));
    }
    /**
     * @override
     */

  }, {
    key: "wktCoordinatePairs",
    value: function wktCoordinatePairs() {
      var wktPairsListCollection = [this.getBoundary().wktCoordinatePairs()];
      this.holes.forEach(function (hole) {
        return wktPairsListCollection.push(hole.wktCoordinatePairs());
      });

      var wrapParens = function wrapParens(str) {
        return '(' + str + ')';
      };

      return wktPairsListCollection.map(wrapParens).join(',');
    }
  }]);
  return Polygon;
}(_geometry["default"]);

var _default = Polygon;
exports["default"] = _default;

/***/ }),

/***/ "./src/data/geo/spatial-reference-system.js":
/*!**************************************************!*\
  !*** ./src/data/geo/spatial-reference-system.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));

var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js"));

var SpatialType = /*#__PURE__*/function () {
  function SpatialType(_ref) {
    var srsId = _ref.srsId,
        name = _ref.name;
    (0, _classCallCheck2["default"])(this, SpatialType);
    this.srsId = srsId;
    this.name = name;
  }

  (0, _createClass2["default"])(SpatialType, [{
    key: "getSRSId",
    value: function getSRSId() {
      return this.srsId;
    }
  }, {
    key: "getName",
    value: function getName() {
      return this.name;
    }
  }, {
    key: "toString",
    value: function toString() {
      return this.getName() + '(' + this.getSRSId() + ')';
    }
  }]);
  return SpatialType;
}();

var CARTESIAN = new SpatialType({
  srsId: 0,
  name: 'Cartesian'
});
var PULKOVO_1995 = new SpatialType({
  srsId: 4200,
  name: 'Pulkovo 1995'
});
var WGS84 = new SpatialType({
  srsId: 4326,
  name: 'WGS 84'
});
var WGS84_PSEUDO_MERCATOR = new SpatialType({
  srsId: 3857,
  name: 'WGS 84 / Pseudo-Mercator'
});
var WGS84_WORLD_MERCATOR = new SpatialType({
  srsId: 3395,
  name: 'WGS 84 / World Mercator'
});
var SpatialReferenceSystem = {
  CARTESIAN: CARTESIAN,
  PULKOVO_1995: PULKOVO_1995,
  WGS84: WGS84,
  WGS84_PSEUDO_MERCATOR: WGS84_PSEUDO_MERCATOR,
  WGS84_WORLD_MERCATOR: WGS84_WORLD_MERCATOR,
  DEFAULT: WGS84,
  SRS_MAP: {},
  valueBySRSId: function valueBySRSId(srsId) {
    return SpatialReferenceSystem.SRS_MAP[srsId];
  }
};
Object.keys(SpatialReferenceSystem).forEach(function (type) {
  if (SpatialReferenceSystem[type] instanceof SpatialType) {
    var spatialType = SpatialReferenceSystem[type];
    SpatialReferenceSystem.SRS_MAP[spatialType.getSRSId()] = spatialType;
  }
});
var _default = SpatialReferenceSystem;
exports["default"] = _default;

/***/ }),

/***/ "./src/data/geo/wkt-parser.js":
/*!************************************!*\
  !*** ./src/data/geo/wkt-parser.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = exports.WKTParser = void 0;

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));

var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js"));

var _wktToGeojson = _interopRequireDefault(__webpack_require__(/*! ./wkt-to-geojson */ "./src/data/geo/wkt-to-geojson.js"));

var _geoConstructor = _interopRequireDefault(__webpack_require__(/*! ./geo-constructor */ "./src/data/geo/geo-constructor.js"));

var WKTParser = /*#__PURE__*/function () {
  function WKTParser(srs) {
    (0, _classCallCheck2["default"])(this, WKTParser);
    this.srs = srs;
  }

  (0, _createClass2["default"])(WKTParser, [{
    key: "read",
    value: function read(wktString) {
      var geoObject = (0, _wktToGeojson["default"])(wktString);

      if (!geoObject) {
        throw new Error('WKT string is invalid');
      }

      return (0, _geoConstructor["default"])(geoObject, this.srs);
    }
  }]);
  return WKTParser;
}();

exports.WKTParser = WKTParser;
var _default = WKTParser;
exports["default"] = _default;

/***/ }),

/***/ "./src/data/geo/wkt-to-geojson.js":
/*!****************************************!*\
  !*** ./src/data/geo/wkt-to-geojson.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _toConsumableArray2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ "./node_modules/@babel/runtime/helpers/toConsumableArray.js"));

var _constants = __webpack_require__(/*! ./constants */ "./src/data/geo/constants.js");

var numberRegexp = /[-+]?([0-9]*\.[0-9]+|[0-9]+)([eE][-+]?[0-9]+)?/; // Matches sequences like '100 100' or '100 100 100'.

var tuples = new RegExp('^' + numberRegexp.source + '(\\s' + numberRegexp.source + '){1,}');

var wktToGeoJSON = function wktToGeoJSON(wktString) {
  var i = 0;

  var matches = function matches(re) {
    var match = wktString.substring(i).match(re);

    if (!match) {
      return null;
    } else {
      i += match[0].length;
      return match[0];
    }
  };

  var white = function white() {
    return matches(/^\s*/);
  };

  var getMultiCoordinates = function getMultiCoordinates() {
    white();
    var depth = 0;
    var rings = [];
    var stack = [rings];
    var pointer = rings;
    var elem;

    while (elem = matches(/^(\()/) || matches(/^(\))/) || matches(/^(,)/) || matches(tuples)) {
      if (elem === '(') {
        stack.push(pointer);
        pointer = [];
        stack[stack.length - 1].push(pointer);
        depth++;
      } else if (elem === ')') {
        // For the case: Polygon(), ...
        if (pointer.length === 0) {
          return null;
        }

        pointer = stack.pop(); // the stack was empty, wkt string was malformed

        if (!pointer) {
          return null;
        }

        depth--;

        if (depth === 0) {
          break;
        }
      } else if (elem === ',') {
        pointer = [];
        stack[stack.length - 1].push(pointer);
      } else if (!elem.split(/\s/g).some(isNaN)) {
        Array.prototype.push.apply(pointer, elem.split(/\s/g).map(parseFloat));
      } else {
        return null;
      }

      white();
    }

    if (depth !== 0) {
      return null;
    }

    return rings;
  };

  var getCoordinates = function getCoordinates() {
    var list = [];
    var item;
    var pt;

    while (pt = matches(tuples) || matches(/^(,)/)) {
      if (pt === ',') {
        list.push(item);
        item = [];
      } else if (!pt.split(/\s/g).some(isNaN)) {
        if (!item) {
          item = [];
        }

        item = [].concat((0, _toConsumableArray2["default"])(item), (0, _toConsumableArray2["default"])(pt.split(/\s/g).map(parseFloat)));
      }

      white();
    }

    if (item) {
      list.push(item);
    } else {
      return null;
    }

    return list.length ? list : null;
  };

  var point = function point() {
    if (!matches(/^(point(\sz)?)/i)) {
      return null;
    }

    white();

    if (!matches(/^(\()/)) {
      return null;
    }

    white();
    var coordinates = getCoordinates();

    if (!coordinates) {
      return null;
    }

    if (!matches(/^(\))/)) {
      return null;
    }

    return {
      type: _constants.GeoTypes.POINT,
      coordinates: coordinates[0]
    };
  };

  var linestring = function linestring() {
    if (!matches(/^(linestring(\sz)?)/i)) {
      return null;
    }

    white();

    if (!matches(/^(\()/)) {
      return null;
    }

    var coordinates = getCoordinates();

    if (!coordinates) {
      return null;
    }

    if (!matches(/^(\))/)) {
      return null;
    }

    return {
      type: _constants.GeoTypes.LINE_STRING,
      coordinates: coordinates
    };
  };

  var polygon = function polygon() {
    if (!matches(/^(polygon(\sz)?)/i)) {
      return null;
    }

    white();
    var coordinates = getMultiCoordinates();

    if (!coordinates) {
      return null;
    }

    return {
      type: _constants.GeoTypes.POLYGON,
      coordinates: coordinates
    };
  };

  return point() || linestring() || polygon();
};

var _default = wktToGeoJSON;
exports["default"] = _default;

/***/ }),

/***/ "./src/data/index.js":
/*!***************************!*\
  !*** ./src/data/index.js ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));

var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js"));

var _applyDecoratedDescriptor2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/applyDecoratedDescriptor */ "./node_modules/@babel/runtime/helpers/applyDecoratedDescriptor.js"));

var _utils = _interopRequireDefault(__webpack_require__(/*! ../utils */ "./src/utils.js"));

var _decorators = __webpack_require__(/*! ../decorators */ "./src/decorators/index.js");

var _user = _interopRequireDefault(__webpack_require__(/*! ../users/user */ "./src/users/user.js"));

var _permissions = _interopRequireDefault(__webpack_require__(/*! ./permissions */ "./src/data/permissions/index.js"));

var _store = _interopRequireDefault(__webpack_require__(/*! ./store */ "./src/data/store/index.js"));

var _queryBuilder = _interopRequireDefault(__webpack_require__(/*! ./query-builder */ "./src/data/query-builder.js"));

var _loadRelationsQueryBuilder = _interopRequireDefault(__webpack_require__(/*! ./load-relations-query-builder */ "./src/data/load-relations-query-builder.js"));

var _describe2 = __webpack_require__(/*! ./describe */ "./src/data/describe.js");

var _point = _interopRequireDefault(__webpack_require__(/*! ./geo/point */ "./src/data/geo/point.js"));

var _linestring = _interopRequireDefault(__webpack_require__(/*! ./geo/linestring */ "./src/data/geo/linestring.js"));

var _polygon = _interopRequireDefault(__webpack_require__(/*! ./geo/polygon */ "./src/data/geo/polygon.js"));

var _geometry = _interopRequireDefault(__webpack_require__(/*! ./geo/geometry */ "./src/data/geo/geometry.js"));

var _spatialReferenceSystem = _interopRequireDefault(__webpack_require__(/*! ./geo/spatial-reference-system */ "./src/data/geo/spatial-reference-system.js"));

var _wktParser = _interopRequireDefault(__webpack_require__(/*! ./geo/wkt-parser */ "./src/data/geo/wkt-parser.js"));

var _geoJsonParser = _interopRequireDefault(__webpack_require__(/*! ./geo/geo-json-parser */ "./src/data/geo/geo-json-parser.js"));

var _dec, _dec2, _dec3, _class;

var Data = (_dec = (0, _decorators.deprecated)('Backendless.Data', 'Backendless.Data.describe'), _dec2 = (0, _decorators.deprecated)('Backendless.Data', 'Backendless.Data.of(<ClassName>).save'), _dec3 = (0, _decorators.deprecated)('Backendless.Data', 'Backendless.Data.of(<ClassName>).save'), (_class = /*#__PURE__*/function () {
  function Data(app) {
    (0, _classCallCheck2["default"])(this, Data);
    this.app = app;
    this.classToTableMap = (0, _defineProperty2["default"])({}, _user["default"].className, _user["default"]);
    this.Permissions = new _permissions["default"](app);
    this.QueryBuilder = _queryBuilder["default"];
    this.LoadRelationsQueryBuilder = _loadRelationsQueryBuilder["default"];
    this.Point = _point["default"];
    this.LineString = _linestring["default"];
    this.Polygon = _polygon["default"];
    this.Geometry = _geometry["default"];
    this.GeoJSONParser = _geoJsonParser["default"];
    this.WKTParser = _wktParser["default"];
    this.SpatialReferenceSystem = _spatialReferenceSystem["default"];
  }

  (0, _createClass2["default"])(Data, [{
    key: "of",
    value: function of(model) {
      return new _store["default"](model, this.classToTableMap, this.app);
    }
  }, {
    key: "describeSync",
    value: function describeSync() {
      var _Utils$synchronized;

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      return (_Utils$synchronized = _utils["default"]["synchronized"](_describe2.describe)).call.apply(_Utils$synchronized, [this].concat(args));
    }
  }, {
    key: "describe",
    value: function describe() {
      var _Utils$promisified;

      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        args[_key2] = arguments[_key2];
      }

      return (_Utils$promisified = _utils["default"].promisified(_describe2.describe)).call.apply(_Utils$promisified, [this].concat(args));
    }
  }, {
    key: "save",
    value: function save(className, obj) {
      return this.of(className).save(obj);
    }
  }, {
    key: "saveSync",
    value: function saveSync(className, obj, asyncHandler) {
      return this.of(className).saveSync(obj, asyncHandler);
    }
  }, {
    key: "mapTableToClass",
    value: function mapTableToClass(tableName, clientClass) {
      if (typeof tableName === 'function') {
        clientClass = tableName;
        tableName = _utils["default"].getClassName(clientClass);
      }

      if (!tableName || typeof tableName !== 'string') {
        throw new Error('Table Name must be provided and must be a string.');
      }

      if (!clientClass || typeof clientClass !== 'function') {
        throw new Error('Class must be provided and must be a constructor function.');
      }

      this.classToTableMap[tableName] = clientClass;
    }
  }]);
  return Data;
}(), ((0, _applyDecoratedDescriptor2["default"])(_class.prototype, "describeSync", [_dec], Object.getOwnPropertyDescriptor(_class.prototype, "describeSync"), _class.prototype), (0, _applyDecoratedDescriptor2["default"])(_class.prototype, "save", [_dec2], Object.getOwnPropertyDescriptor(_class.prototype, "save"), _class.prototype), (0, _applyDecoratedDescriptor2["default"])(_class.prototype, "saveSync", [_dec3], Object.getOwnPropertyDescriptor(_class.prototype, "saveSync"), _class.prototype)), _class));
exports["default"] = Data;

/***/ }),

/***/ "./src/data/load-relations-query-builder.js":
/*!**************************************************!*\
  !*** ./src/data/load-relations-query-builder.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));

var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js"));

var _query = _interopRequireDefault(__webpack_require__(/*! ./query */ "./src/data/query.js"));

var _pagingQueryBuilder = _interopRequireDefault(__webpack_require__(/*! ./paging-query-builder */ "./src/data/paging-query-builder.js"));

var _utils = _interopRequireDefault(__webpack_require__(/*! ../utils */ "./src/utils.js"));

var LoadRelationsQueryBuilder = /*#__PURE__*/function () {
  (0, _createClass2["default"])(LoadRelationsQueryBuilder, null, [{
    key: "create",
    value: function create() {
      return new LoadRelationsQueryBuilder();
    }
  }, {
    key: "of",
    value: function of(RelationModel) {
      return new LoadRelationsQueryBuilder(RelationModel);
    }
  }]);

  function LoadRelationsQueryBuilder(RelationModel) {
    (0, _classCallCheck2["default"])(this, LoadRelationsQueryBuilder);
    this._query = new _query["default"]();
    this._query.relationModel = RelationModel;
    this._paging = new _pagingQueryBuilder["default"]();
  }

  (0, _createClass2["default"])(LoadRelationsQueryBuilder, [{
    key: "setRelationModel",
    value: function setRelationModel(RelationModel) {
      this._query.relationModel = RelationModel;
    }
  }, {
    key: "setRelationName",
    value: function setRelationName(relationName) {
      this._query.setOption('relationName', relationName);

      return this;
    }
  }, {
    key: "setPageSize",
    value: function setPageSize(pageSize) {
      this._paging.setPageSize(pageSize);

      return this;
    }
  }, {
    key: "getPageSize",
    value: function getPageSize() {
      return this._paging.getPageSize();
    }
  }, {
    key: "setOffset",
    value: function setOffset(offset) {
      this._paging.setOffset(offset);

      return this;
    }
  }, {
    key: "getOffset",
    value: function getOffset() {
      return this._paging.getOffset();
    }
  }, {
    key: "prepareNextPage",
    value: function prepareNextPage() {
      this._paging.prepareNextPage();

      return this;
    }
  }, {
    key: "preparePreviousPage",
    value: function preparePreviousPage() {
      this._paging.preparePreviousPage();

      return this;
    }
  }, {
    key: "getProperties",
    value: function getProperties() {
      return this._query.properties;
    }
  }, {
    key: "setProperties",
    value: function setProperties(properties) {
      this._query.properties = _utils["default"].castArray(properties);
      return this;
    }
  }, {
    key: "addProperty",
    value: function addProperty(property) {
      this._query.addProperty(property);

      return this;
    }
  }, {
    key: "addProperties",
    value: function addProperties() {
      var _this = this;

      for (var _len = arguments.length, properties = new Array(_len), _key = 0; _key < _len; _key++) {
        properties[_key] = arguments[_key];
      }

      properties.forEach(function (p) {
        _utils["default"].castArray(p).forEach(function (property) {
          return _this._query.addProperty(property);
        });
      });
      return this;
    }
  }, {
    key: "addAllProperties",
    value: function addAllProperties() {
      this.addProperty('*');
      return this;
    }
  }, {
    key: "excludeProperty",
    value: function excludeProperty(property) {
      this._query.excludeProperties(property);

      return this;
    }
  }, {
    key: "excludeProperties",
    value: function excludeProperties() {
      var _this$_query;

      (_this$_query = this._query).excludeProperties.apply(_this$_query, arguments);

      return this;
    }
  }, {
    key: "getExcludeProperties",
    value: function getExcludeProperties() {
      return this._query.excludeProps;
    }
  }, {
    key: "getWhereClause",
    value: function getWhereClause() {
      return this._query.condition;
    }
  }, {
    key: "setWhereClause",
    value: function setWhereClause(whereClause) {
      this._query.condition = whereClause;
      return this;
    }
  }, {
    key: "getHavingClause",
    value: function getHavingClause() {
      return this._query.havingClause;
    }
  }, {
    key: "setHavingClause",
    value: function setHavingClause(havingClause) {
      this._query.havingClause = havingClause;
      return this;
    }
  }, {
    key: "getSortBy",
    value: function getSortBy() {
      return this._query.getOption('sortBy');
    }
  }, {
    key: "setSortBy",
    value: function setSortBy(sortBy) {
      this._query.setOption('sortBy', _utils["default"].castArray(sortBy));

      return this;
    }
  }, {
    key: "getGroupBy",
    value: function getGroupBy() {
      return this._query.getOption('groupBy');
    }
  }, {
    key: "setGroupBy",
    value: function setGroupBy(groupBy) {
      this._query.setOption('groupBy', _utils["default"].castArray(groupBy));

      return this;
    }
  }, {
    key: "getRelated",
    value: function getRelated() {
      return this._query.getOption('relations');
    }
  }, {
    key: "setRelated",
    value: function setRelated(relations) {
      this._query.setOption('relations', _utils["default"].castArray(relations));

      return this;
    }
  }, {
    key: "addRelated",
    value: function addRelated(relations) {
      var option = this._query.getOption('relations') || [];

      this._query.setOption('relations', option.concat(relations));

      return this;
    }
  }, {
    key: "getRelationsDepth",
    value: function getRelationsDepth() {
      return this._query.getOption('relationsDepth');
    }
  }, {
    key: "setRelationsDepth",
    value: function setRelationsDepth(relationsDepth) {
      this._query.setOption('relationsDepth', relationsDepth);

      return this;
    }
  }, {
    key: "getRelationsPageSize",
    value: function getRelationsPageSize() {
      return this._query.getOption('relationsPageSize');
    }
  }, {
    key: "setRelationsPageSize",
    value: function setRelationsPageSize(relationsPageSize) {
      this._query.setOption('relationsPageSize', relationsPageSize);

      return this;
    }
  }, {
    key: "build",
    value: function build() {
      this._query.setOptions(this._paging.build());

      return this._query;
    }
  }, {
    key: "toJSON",
    value: function toJSON() {
      var source = {
        pageSize: this._paging.pageSize,
        offset: this._paging.offset,
        props: this._query.properties,
        where: this._query.condition,
        having: this._query.havingClause,
        excludeProps: this._query.excludeProps,
        sortBy: this._query.options && this._query.options.sortBy,
        groupBy: this._query.options && this._query.options.groupBy,
        loadRelations: this._query.options && this._query.options.relations,
        relationsDepth: this._query.options && this._query.options.relationsDepth,
        relationsPageSize: this._query.options && this._query.options.relationsPageSize
      };
      var target = {};

      if (source.pageSize > 0) {
        target.pageSize = source.pageSize;
      }

      if (source.offset > 0) {
        target.offset = source.offset;
      }

      if (Array.isArray(source.props) && source.props.length) {
        target.props = source.props;
      }

      if (source.where) {
        target.where = source.where;
      }

      if (source.having) {
        target.having = source.having;
      }

      if (source.sortBy) {
        target.sortBy = source.sortBy;
      }

      if (source.groupBy) {
        target.groupBy = source.groupBy;
      }

      if (Array.isArray(source.excludeProps) && source.excludeProps.length) {
        target.excludeProps = source.excludeProps;
      }

      if (Array.isArray(source.loadRelations)) {
        target.loadRelations = source.loadRelations.length ? source.loadRelations : '*';
      }

      if (source.relationsDepth > 0) {
        target.relationsDepth = source.relationsDepth;
      }

      if (source.relationsPageSize > 0) {
        target.relationsPageSize = source.relationsPageSize;
      }

      return target;
    }
  }]);
  return LoadRelationsQueryBuilder;
}();

exports["default"] = LoadRelationsQueryBuilder;

/***/ }),

/***/ "./src/data/paging-query-builder.js":
/*!******************************************!*\
  !*** ./src/data/paging-query-builder.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));

var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js"));

var PAGING_DEFAULTS = {
  pageSize: 10,
  offset: 0
};

var DataPagingQueryBuilder = /*#__PURE__*/function () {
  function DataPagingQueryBuilder() {
    (0, _classCallCheck2["default"])(this, DataPagingQueryBuilder);
    this.offset = PAGING_DEFAULTS.offset;
    this.pageSize = PAGING_DEFAULTS.pageSize;
  }

  (0, _createClass2["default"])(DataPagingQueryBuilder, [{
    key: "setPageSize",
    value: function setPageSize(pageSize) {
      if (pageSize <= 0) {
        throw new Error('Page size must be a positive value.');
      }

      this.pageSize = pageSize;
      return this;
    }
  }, {
    key: "getPageSize",
    value: function getPageSize() {
      return this.pageSize;
    }
  }, {
    key: "setOffset",
    value: function setOffset(offset) {
      if (offset < 0) {
        throw new Error('Offset cannot have a negative value.');
      }

      this.offset = offset;
      return this;
    }
  }, {
    key: "getOffset",
    value: function getOffset() {
      return this.offset;
    }
  }, {
    key: "prepareNextPage",
    value: function prepareNextPage() {
      this.setOffset(this.offset + this.pageSize);
      return this;
    }
  }, {
    key: "preparePreviousPage",
    value: function preparePreviousPage() {
      var newOffset = this.offset > this.pageSize ? this.offset - this.pageSize : 0;
      this.setOffset(newOffset);
      return this;
    }
  }, {
    key: "build",
    value: function build() {
      return {
        pageSize: this.pageSize,
        offset: this.offset
      };
    }
  }]);
  return DataPagingQueryBuilder;
}();

exports["default"] = DataPagingQueryBuilder;

/***/ }),

/***/ "./src/data/permissions/index.js":
/*!***************************************!*\
  !*** ./src/data/permissions/index.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));

var _persmission = _interopRequireDefault(__webpack_require__(/*! ./persmission */ "./src/data/permissions/persmission.js"));

var DataPermissions = function DataPermissions(app) {
  (0, _classCallCheck2["default"])(this, DataPermissions);
  this.FIND = new _persmission["default"]('FIND', app);
  this.REMOVE = new _persmission["default"]('REMOVE', app);
  this.UPDATE = new _persmission["default"]('UPDATE', app);
};

exports["default"] = DataPermissions;

/***/ }),

/***/ "./src/data/permissions/persmission.js":
/*!*********************************************!*\
  !*** ./src/data/permissions/persmission.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _applyDecoratedDescriptor2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/applyDecoratedDescriptor */ "./node_modules/@babel/runtime/helpers/applyDecoratedDescriptor.js"));

var _extends2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/extends */ "./node_modules/@babel/runtime/helpers/extends.js"));

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));

var _utils = _interopRequireDefault(__webpack_require__(/*! ../../utils */ "./src/utils.js"));

var _decorators = __webpack_require__(/*! ../../decorators */ "./src/decorators/index.js");

var _sendRequest = __webpack_require__(/*! ./send-request */ "./src/data/permissions/send-request.js");

var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _dec7, _dec8, _dec9, _dec10, _dec11, _dec12, _obj, _init, _init2, _init3, _init4, _init5, _init6, _init7, _init8, _init9, _init10, _init11, _init12;

var PermissionTypes = {
  GRANT: 'GRANT',
  DENY: 'DENY'
};

function grantForUser(userId, object, asyncHandler) {
  return this.sendRequest(PermissionTypes.GRANT, object, {
    userId: userId
  }, asyncHandler);
}

function denyForUser(userId, object, asyncHandler) {
  return this.sendRequest(PermissionTypes.DENY, object, {
    userId: userId
  }, asyncHandler);
}

function grantForRole(roleName, object, asyncHandler) {
  return this.sendRequest(PermissionTypes.GRANT, object, {
    roleName: roleName
  }, asyncHandler);
}

function denyForRole(roleName, object, asyncHandler) {
  return this.sendRequest(PermissionTypes.DENY, object, {
    roleName: roleName
  }, asyncHandler);
}

function grantForAllUsers(object, asyncHandler) {
  return this.sendRequest(PermissionTypes.GRANT, object, {
    userId: '*'
  }, asyncHandler);
}

function denyForAllUsers(object, asyncHandler) {
  return this.sendRequest(PermissionTypes.DENY, object, {
    userId: '*'
  }, asyncHandler);
}

function grantForAllRoles(object, asyncHandler) {
  return this.sendRequest(PermissionTypes.GRANT, object, {
    roleName: '*'
  }, asyncHandler);
}

function denyForAllRoles(object, asyncHandler) {
  return this.sendRequest(PermissionTypes.DENY, object, {
    roleName: '*'
  }, asyncHandler);
}

var DataPermission = function DataPermission(permission, app) {
  (0, _classCallCheck2["default"])(this, DataPermission);
  this.permission = permission;
  this.app = app;
}; //TODO: will be removed when remove sync methods


var namespaceLabel = 'Backendless.Data.Permissions.{FIND|REMOVE|UPDATE}';
(0, _extends2["default"])(DataPermission.prototype, (_dec = (0, _decorators.deprecated)(namespaceLabel, "".concat(namespaceLabel, ".grantForUser")), _dec2 = (0, _decorators.deprecated)(namespaceLabel, "".concat(namespaceLabel, ".grantForUser")), _dec3 = (0, _decorators.deprecated)(namespaceLabel, "".concat(namespaceLabel, ".denyForUser")), _dec4 = (0, _decorators.deprecated)(namespaceLabel, "".concat(namespaceLabel, ".denyForUser")), _dec5 = (0, _decorators.deprecated)(namespaceLabel, "".concat(namespaceLabel, ".grantForRole")), _dec6 = (0, _decorators.deprecated)(namespaceLabel, "".concat(namespaceLabel, ".grantForRole")), _dec7 = (0, _decorators.deprecated)(namespaceLabel, "".concat(namespaceLabel, ".denyForRole")), _dec8 = (0, _decorators.deprecated)(namespaceLabel, "".concat(namespaceLabel, ".denyForRole")), _dec9 = (0, _decorators.deprecated)(namespaceLabel, "".concat(namespaceLabel, ".grantForAllUsers")), _dec10 = (0, _decorators.deprecated)(namespaceLabel, "".concat(namespaceLabel, ".grantForAllUsers")), _dec11 = (0, _decorators.deprecated)(namespaceLabel, "".concat(namespaceLabel, ".denyForAllUsers")), _dec12 = (0, _decorators.deprecated)(namespaceLabel, "".concat(namespaceLabel, ".denyForAllUsers")), (_obj = {
  grantUserSync: _utils["default"]["synchronized"](grantForUser),
  grantUser: _utils["default"].promisified(grantForUser),
  denyUserSync: _utils["default"]["synchronized"](denyForUser),
  denyUser: _utils["default"].promisified(denyForUser),
  grantRoleSync: _utils["default"]["synchronized"](grantForRole),
  grantRole: _utils["default"].promisified(grantForRole),
  denyRoleSync: _utils["default"]["synchronized"](denyForRole),
  denyRole: _utils["default"].promisified(denyForRole),
  grantSync: _utils["default"]["synchronized"](grantForAllUsers),
  grant: _utils["default"].promisified(grantForAllUsers),
  denySync: _utils["default"]["synchronized"](denyForAllUsers),
  deny: _utils["default"].promisified(denyForAllUsers),
  grantForUser: _utils["default"].promisified(grantForUser),
  denyForUser: _utils["default"].promisified(denyForUser),
  grantForRole: _utils["default"].promisified(grantForRole),
  denyForRole: _utils["default"].promisified(denyForRole),
  grantForAllUsers: _utils["default"].promisified(grantForAllUsers),
  denyForAllUsers: _utils["default"].promisified(denyForAllUsers),
  grantForAllRoles: _utils["default"].promisified(grantForAllRoles),
  denyForAllRoles: _utils["default"].promisified(denyForAllRoles),
  sendRequest: _sendRequest.sendRequest
}, ((0, _applyDecoratedDescriptor2["default"])(_obj, "grantUserSync", [_dec], (_init = Object.getOwnPropertyDescriptor(_obj, "grantUserSync"), _init = _init ? _init.value : undefined, {
  enumerable: true,
  configurable: true,
  writable: true,
  initializer: function initializer() {
    return _init;
  }
}), _obj), (0, _applyDecoratedDescriptor2["default"])(_obj, "grantUser", [_dec2], (_init2 = Object.getOwnPropertyDescriptor(_obj, "grantUser"), _init2 = _init2 ? _init2.value : undefined, {
  enumerable: true,
  configurable: true,
  writable: true,
  initializer: function initializer() {
    return _init2;
  }
}), _obj), (0, _applyDecoratedDescriptor2["default"])(_obj, "denyUserSync", [_dec3], (_init3 = Object.getOwnPropertyDescriptor(_obj, "denyUserSync"), _init3 = _init3 ? _init3.value : undefined, {
  enumerable: true,
  configurable: true,
  writable: true,
  initializer: function initializer() {
    return _init3;
  }
}), _obj), (0, _applyDecoratedDescriptor2["default"])(_obj, "denyUser", [_dec4], (_init4 = Object.getOwnPropertyDescriptor(_obj, "denyUser"), _init4 = _init4 ? _init4.value : undefined, {
  enumerable: true,
  configurable: true,
  writable: true,
  initializer: function initializer() {
    return _init4;
  }
}), _obj), (0, _applyDecoratedDescriptor2["default"])(_obj, "grantRoleSync", [_dec5], (_init5 = Object.getOwnPropertyDescriptor(_obj, "grantRoleSync"), _init5 = _init5 ? _init5.value : undefined, {
  enumerable: true,
  configurable: true,
  writable: true,
  initializer: function initializer() {
    return _init5;
  }
}), _obj), (0, _applyDecoratedDescriptor2["default"])(_obj, "grantRole", [_dec6], (_init6 = Object.getOwnPropertyDescriptor(_obj, "grantRole"), _init6 = _init6 ? _init6.value : undefined, {
  enumerable: true,
  configurable: true,
  writable: true,
  initializer: function initializer() {
    return _init6;
  }
}), _obj), (0, _applyDecoratedDescriptor2["default"])(_obj, "denyRoleSync", [_dec7], (_init7 = Object.getOwnPropertyDescriptor(_obj, "denyRoleSync"), _init7 = _init7 ? _init7.value : undefined, {
  enumerable: true,
  configurable: true,
  writable: true,
  initializer: function initializer() {
    return _init7;
  }
}), _obj), (0, _applyDecoratedDescriptor2["default"])(_obj, "denyRole", [_dec8], (_init8 = Object.getOwnPropertyDescriptor(_obj, "denyRole"), _init8 = _init8 ? _init8.value : undefined, {
  enumerable: true,
  configurable: true,
  writable: true,
  initializer: function initializer() {
    return _init8;
  }
}), _obj), (0, _applyDecoratedDescriptor2["default"])(_obj, "grantSync", [_dec9], (_init9 = Object.getOwnPropertyDescriptor(_obj, "grantSync"), _init9 = _init9 ? _init9.value : undefined, {
  enumerable: true,
  configurable: true,
  writable: true,
  initializer: function initializer() {
    return _init9;
  }
}), _obj), (0, _applyDecoratedDescriptor2["default"])(_obj, "grant", [_dec10], (_init10 = Object.getOwnPropertyDescriptor(_obj, "grant"), _init10 = _init10 ? _init10.value : undefined, {
  enumerable: true,
  configurable: true,
  writable: true,
  initializer: function initializer() {
    return _init10;
  }
}), _obj), (0, _applyDecoratedDescriptor2["default"])(_obj, "denySync", [_dec11], (_init11 = Object.getOwnPropertyDescriptor(_obj, "denySync"), _init11 = _init11 ? _init11.value : undefined, {
  enumerable: true,
  configurable: true,
  writable: true,
  initializer: function initializer() {
    return _init11;
  }
}), _obj), (0, _applyDecoratedDescriptor2["default"])(_obj, "deny", [_dec12], (_init12 = Object.getOwnPropertyDescriptor(_obj, "deny"), _init12 = _init12 ? _init12.value : undefined, {
  enumerable: true,
  configurable: true,
  writable: true,
  initializer: function initializer() {
    return _init12;
  }
}), _obj)), _obj)));
var _default = DataPermission;
exports["default"] = _default;

/***/ }),

/***/ "./src/data/permissions/send-request.js":
/*!**********************************************!*\
  !*** ./src/data/permissions/send-request.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.sendRequest = sendRequest;

function sendRequest(type, object, options, asyncHandler) {
  var permission = this.permission;
  var url = this.app.urls.dataObjectPermission(object.___class, type, object.objectId);
  var userId = options.userId,
      roleName = options.roleName;

  if (!object.___class || !object.objectId) {
    throw new Error('"dataObject.___class" and "dataObject.objectId" need to be specified');
  }

  var data = {
    permission: permission
  };

  if (userId) {
    data.user = userId;
  } else if (roleName) {
    data.role = roleName;
  }

  return this.app.request.put({
    url: url,
    data: data,
    asyncHandler: asyncHandler,
    isAsync: !!asyncHandler
  });
}

/***/ }),

/***/ "./src/data/query-builder.js":
/*!***********************************!*\
  !*** ./src/data/query-builder.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));

var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js"));

var _utils = _interopRequireDefault(__webpack_require__(/*! ../utils */ "./src/utils.js"));

var _query = _interopRequireDefault(__webpack_require__(/*! ./query */ "./src/data/query.js"));

var _pagingQueryBuilder = _interopRequireDefault(__webpack_require__(/*! ./paging-query-builder */ "./src/data/paging-query-builder.js"));

var DataQueryBuilder = /*#__PURE__*/function () {
  (0, _createClass2["default"])(DataQueryBuilder, null, [{
    key: "create",
    value: function create() {
      return new DataQueryBuilder();
    }
  }]);

  function DataQueryBuilder() {
    (0, _classCallCheck2["default"])(this, DataQueryBuilder);
    this._query = new _query["default"]();
    this._paging = new _pagingQueryBuilder["default"]();
  }

  (0, _createClass2["default"])(DataQueryBuilder, [{
    key: "setPageSize",
    value: function setPageSize(pageSize) {
      this._paging.setPageSize(pageSize);

      return this;
    }
  }, {
    key: "getPageSize",
    value: function getPageSize() {
      return this._paging.getPageSize();
    }
  }, {
    key: "setOffset",
    value: function setOffset(offset) {
      this._paging.setOffset(offset);

      return this;
    }
  }, {
    key: "getOffset",
    value: function getOffset() {
      return this._paging.getOffset();
    }
  }, {
    key: "prepareNextPage",
    value: function prepareNextPage() {
      this._paging.prepareNextPage();

      return this;
    }
  }, {
    key: "preparePreviousPage",
    value: function preparePreviousPage() {
      this._paging.preparePreviousPage();

      return this;
    }
  }, {
    key: "getProperties",
    value: function getProperties() {
      return this._query.properties;
    }
  }, {
    key: "setProperties",
    value: function setProperties(properties) {
      this._query.properties = _utils["default"].castArray(properties);
      return this;
    }
  }, {
    key: "addProperty",
    value: function addProperty(property) {
      this._query.addProperty(property);

      return this;
    }
  }, {
    key: "addProperties",
    value: function addProperties() {
      var _this = this;

      for (var _len = arguments.length, properties = new Array(_len), _key = 0; _key < _len; _key++) {
        properties[_key] = arguments[_key];
      }

      properties.forEach(function (p) {
        _utils["default"].castArray(p).forEach(function (property) {
          return _this._query.addProperty(property);
        });
      });
      return this;
    }
  }, {
    key: "addAllProperties",
    value: function addAllProperties() {
      this.addProperty('*');
      return this;
    }
  }, {
    key: "excludeProperty",
    value: function excludeProperty(property) {
      this._query.excludeProperties(property);

      return this;
    }
  }, {
    key: "excludeProperties",
    value: function excludeProperties() {
      var _this$_query;

      (_this$_query = this._query).excludeProperties.apply(_this$_query, arguments);

      return this;
    }
  }, {
    key: "getExcludeProperties",
    value: function getExcludeProperties() {
      return this._query.excludeProps;
    }
  }, {
    key: "getWhereClause",
    value: function getWhereClause() {
      return this._query.condition;
    }
  }, {
    key: "setWhereClause",
    value: function setWhereClause(whereClause) {
      this._query.condition = whereClause;
      return this;
    }
  }, {
    key: "getHavingClause",
    value: function getHavingClause() {
      return this._query.havingClause;
    }
  }, {
    key: "setHavingClause",
    value: function setHavingClause(havingClause) {
      this._query.havingClause = havingClause;
      return this;
    }
  }, {
    key: "getSortBy",
    value: function getSortBy() {
      return this._query.getOption('sortBy');
    }
  }, {
    key: "setSortBy",
    value: function setSortBy(sortBy) {
      this._query.setOption('sortBy', _utils["default"].castArray(sortBy));

      return this;
    }
  }, {
    key: "getGroupBy",
    value: function getGroupBy() {
      return this._query.getOption('groupBy');
    }
  }, {
    key: "setGroupBy",
    value: function setGroupBy(groupBy) {
      this._query.setOption('groupBy', _utils["default"].castArray(groupBy));

      return this;
    }
  }, {
    key: "getRelated",
    value: function getRelated() {
      return this._query.getOption('relations');
    }
  }, {
    key: "setRelated",
    value: function setRelated(relations) {
      this._query.setOption('relations', _utils["default"].castArray(relations));

      return this;
    }
  }, {
    key: "addRelated",
    value: function addRelated(relations) {
      var option = this._query.getOption('relations') || [];

      this._query.setOption('relations', option.concat(relations));

      return this;
    }
  }, {
    key: "getRelationsDepth",
    value: function getRelationsDepth() {
      return this._query.getOption('relationsDepth');
    }
  }, {
    key: "setRelationsDepth",
    value: function setRelationsDepth(relationsDepth) {
      this._query.setOption('relationsDepth', relationsDepth);

      return this;
    }
  }, {
    key: "getRelationsPageSize",
    value: function getRelationsPageSize() {
      return this._query.getOption('relationsPageSize');
    }
  }, {
    key: "setRelationsPageSize",
    value: function setRelationsPageSize(relationsPageSize) {
      this._query.setOption('relationsPageSize', relationsPageSize);

      return this;
    }
  }, {
    key: "build",
    value: function build() {
      this._query.setOptions(this._paging.build());

      return this._query;
    }
  }, {
    key: "toJSON",
    value: function toJSON() {
      var source = {
        pageSize: this._paging.pageSize,
        offset: this._paging.offset,
        props: this._query.properties,
        where: this._query.condition,
        having: this._query.havingClause,
        excludeProps: this._query.excludeProps,
        sortBy: this._query.options && this._query.options.sortBy,
        groupBy: this._query.options && this._query.options.groupBy,
        loadRelations: this._query.options && this._query.options.relations,
        relationsDepth: this._query.options && this._query.options.relationsDepth,
        relationsPageSize: this._query.options && this._query.options.relationsPageSize
      };
      var target = {};

      if (source.pageSize > 0) {
        target.pageSize = source.pageSize;
      }

      if (source.offset > 0) {
        target.offset = source.offset;
      }

      if (Array.isArray(source.props) && source.props.length) {
        target.props = source.props;
      }

      if (source.where) {
        target.where = source.where;
      }

      if (source.having) {
        target.having = source.having;
      }

      if (source.sortBy) {
        target.sortBy = source.sortBy;
      }

      if (source.groupBy) {
        target.groupBy = source.groupBy;
      }

      if (Array.isArray(source.excludeProps) && source.excludeProps.length) {
        target.excludeProps = source.excludeProps;
      }

      if (Array.isArray(source.loadRelations)) {
        target.loadRelations = source.loadRelations.length ? source.loadRelations : '*';
      }

      if (source.relationsDepth > 0) {
        target.relationsDepth = source.relationsDepth;
      }

      if (source.relationsPageSize > 0) {
        target.relationsPageSize = source.relationsPageSize;
      }

      return target;
    }
  }]);
  return DataQueryBuilder;
}();

exports["default"] = DataQueryBuilder;

/***/ }),

/***/ "./src/data/query.js":
/*!***************************!*\
  !*** ./src/data/query.js ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));

var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js"));

var _utils = _interopRequireDefault(__webpack_require__(/*! ../utils */ "./src/utils.js"));

var DataQuery = /*#__PURE__*/function () {
  function DataQuery(args) {
    (0, _classCallCheck2["default"])(this, DataQuery);
    args = args || {};
    this.properties = args.properties || [];
    this.excludeProps = args.excludeProps || [];
    this.condition = args.condition || null;
    this.havingClause = args.havingClause || null;
    this.options = args.options || null;
    this.url = args.url || null;
  }

  (0, _createClass2["default"])(DataQuery, [{
    key: "addProperty",
    value: function addProperty(prop) {
      this.properties = this.properties || [];
      this.properties.push(prop);
    }
  }, {
    key: "excludeProperties",
    value: function excludeProperties() {
      var _this = this;

      this.excludeProps = this.excludeProps || [];

      for (var _len = arguments.length, properties = new Array(_len), _key = 0; _key < _len; _key++) {
        properties[_key] = arguments[_key];
      }

      properties.forEach(function (p) {
        _utils["default"].castArray(p).forEach(function (property) {
          return _this.excludeProps.push(property);
        });
      });
      return this;
    }
  }, {
    key: "setOption",
    value: function setOption(name, value) {
      this.options = this.options || {};
      this.options[name] = value;
    }
  }, {
    key: "setOptions",
    value: function setOptions(options) {
      for (var key in options) {
        if (options.hasOwnProperty(key)) {
          this.setOption(key, options[key]);
        }
      }
    }
  }, {
    key: "getOption",
    value: function getOption(name) {
      return this.options && this.options[name];
    }
  }]);
  return DataQuery;
}();

exports["default"] = DataQuery;

/***/ }),

/***/ "./src/data/rt-store/index.js":
/*!************************************!*\
  !*** ./src/data/rt-store/index.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));

var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js"));

var _get2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/get */ "./node_modules/@babel/runtime/helpers/get.js"));

var _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ "./node_modules/@babel/runtime/helpers/inherits.js"));

var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"));

var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "./node_modules/@babel/runtime/helpers/getPrototypeOf.js"));

var _rt = __webpack_require__(/*! ../../rt */ "./src/rt.js");

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2["default"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2["default"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2["default"])(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

var ChangesTypes = {
  CREATED: 'created',
  UPDATED: 'updated',
  DELETED: 'deleted',
  BULK_CREATED: 'bulk-created',
  BULK_UPDATED: 'bulk-updated',
  BULK_DELETED: 'bulk-deleted'
};
var SingleChangesTypes = [ChangesTypes.CREATED, ChangesTypes.UPDATED, ChangesTypes.DELETED];

var EventHandler = /*#__PURE__*/function (_RTListeners) {
  (0, _inherits2["default"])(EventHandler, _RTListeners);

  var _super = _createSuper(EventHandler);

  function EventHandler(dataStore, app) {
    var _this;

    (0, _classCallCheck2["default"])(this, EventHandler);
    _this = _super.call(this);
    _this.app = app;
    _this.dataStore = dataStore;
    return _this;
  }

  (0, _createClass2["default"])(EventHandler, [{
    key: "getSubscriptionOptions",
    value: function getSubscriptionOptions() {
      return {
        tableName: this.dataStore.className
      };
    }
  }, {
    key: "addCreateListener",
    value: function addCreateListener(whereClause, callback, onError) {
      this.addChangesListener(ChangesTypes.CREATED, whereClause, callback, onError);
    }
  }, {
    key: "removeCreateListeners",
    value: function removeCreateListeners(whereClause, callback) {
      this.removeChangesListeners(ChangesTypes.CREATED, whereClause, callback);
    }
  }, {
    key: "removeCreateListener",
    value: function removeCreateListener(callback) {
      if (!callback || typeof callback !== 'function') {
        throw new Error('Listener Function must be passed.');
      }

      this.removeCreateListeners(undefined, callback);
    }
  }, {
    key: "addUpdateListener",
    value: function addUpdateListener(whereClause, callback, onError) {
      this.addChangesListener(ChangesTypes.UPDATED, whereClause, callback, onError);
    }
  }, {
    key: "removeUpdateListeners",
    value: function removeUpdateListeners(whereClause, callback) {
      this.removeChangesListeners(ChangesTypes.UPDATED, whereClause, callback);
    }
  }, {
    key: "removeUpdateListener",
    value: function removeUpdateListener(callback) {
      if (!callback || typeof callback !== 'function') {
        throw new Error('Listener Function must be passed.');
      }

      this.removeUpdateListeners(undefined, callback);
    }
  }, {
    key: "addDeleteListener",
    value: function addDeleteListener(whereClause, callback, onError) {
      this.addChangesListener(ChangesTypes.DELETED, whereClause, callback, onError);
    }
  }, {
    key: "removeDeleteListeners",
    value: function removeDeleteListeners(whereClause, callback) {
      this.removeChangesListeners(ChangesTypes.DELETED, whereClause, callback);
    }
  }, {
    key: "removeDeleteListener",
    value: function removeDeleteListener(callback) {
      if (!callback || typeof callback !== 'function') {
        throw new Error('Listener Function must be passed.');
      }

      this.removeDeleteListeners(undefined, callback);
    }
  }, {
    key: "addBulkCreateListener",
    value: function addBulkCreateListener(whereClause, callback, onError) {
      this.addChangesListener(ChangesTypes.BULK_CREATED, whereClause, callback, onError);
    }
  }, {
    key: "removeBulkCreateListeners",
    value: function removeBulkCreateListeners() {
      this.removeChangesListeners(ChangesTypes.BULK_CREATED);
    }
  }, {
    key: "removeBulkCreateListener",
    value: function removeBulkCreateListener(callback) {
      if (!callback || typeof callback !== 'function') {
        throw new Error('Listener Function must be passed.');
      }

      this.removeChangesListeners(ChangesTypes.BULK_CREATED, undefined, callback);
    }
  }, {
    key: "addBulkUpdateListener",
    value: function addBulkUpdateListener(whereClause, callback, onError) {
      this.addChangesListener(ChangesTypes.BULK_UPDATED, whereClause, callback, onError);
    }
  }, {
    key: "removeBulkUpdateListeners",
    value: function removeBulkUpdateListeners(whereClause, callback) {
      this.removeChangesListeners(ChangesTypes.BULK_UPDATED, whereClause, callback);
    }
  }, {
    key: "removeBulkUpdateListener",
    value: function removeBulkUpdateListener(callback) {
      if (!callback || typeof callback !== 'function') {
        throw new Error('Listener Function must be passed.');
      }

      this.removeBulkUpdateListeners(undefined, callback);
    }
  }, {
    key: "addBulkDeleteListener",
    value: function addBulkDeleteListener(whereClause, callback, onError) {
      this.addChangesListener(ChangesTypes.BULK_DELETED, whereClause, callback, onError);
    }
  }, {
    key: "removeBulkDeleteListeners",
    value: function removeBulkDeleteListeners(whereClause, callback) {
      this.removeChangesListeners(ChangesTypes.BULK_DELETED, whereClause, callback);
    }
  }, {
    key: "removeBulkDeleteListener",
    value: function removeBulkDeleteListener(callback) {
      if (!callback || typeof callback !== 'function') {
        throw new Error('Listener Function must be passed.');
      }

      this.removeBulkDeleteListeners(undefined, callback);
    }
  }, {
    key: "addChangesListener",
    value: function addChangesListener(event, whereClause, callback, onError) {
      if (typeof whereClause === 'function') {
        onError = callback;
        callback = whereClause;
        whereClause = undefined;
      }

      if (typeof callback !== 'function') {
        throw new Error('Listener Function must be passed.');
      }

      this.addSubscription(event, this.app.RT.subscriptions.onObjectsChanges, {
        callback: callback,
        onError: onError,
        parser: SingleChangesTypes.includes(event) ? this.parseObjectToInstance.bind(this) : undefined,
        params: {
          event: event,
          whereClause: whereClause
        }
      });
    }
  }, {
    key: "removeChangesListeners",
    value: function removeChangesListeners(event, whereClause, callback) {
      if (typeof whereClause === 'function') {
        callback = whereClause;
        whereClause = undefined;
      }

      var matcher = function matcher(subscription) {
        var params = subscription.params;

        if (whereClause) {
          return params.whereClause === whereClause;
        }

        if (callback) {
          return subscription.callback === callback;
        }

        return true;
      };

      this.stopSubscription(event, {
        matcher: matcher
      });
    }
  }, {
    key: "removeAllListeners",
    value: function removeAllListeners() {
      (0, _get2["default"])((0, _getPrototypeOf2["default"])(EventHandler.prototype), "removeAllListeners", this).call(this);
    }
    /**
     * @private
     * */

  }, {
    key: "parseObjectToInstance",
    value: function parseObjectToInstance(object) {
      return this.dataStore.parseFindResponse(object);
    }
  }]);
  return EventHandler;
}(_rt.RTListeners);

exports["default"] = EventHandler;

/***/ }),

/***/ "./src/data/store/bulk.js":
/*!********************************!*\
  !*** ./src/data/store/bulk.js ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.bulkCreate = bulkCreate;
exports.bulkUpdate = bulkUpdate;
exports.bulkDelete = bulkDelete;

var _utils = _interopRequireDefault(__webpack_require__(/*! ../../utils */ "./src/utils.js"));

var _async = _interopRequireDefault(__webpack_require__(/*! ../../request/async */ "./src/request/async.js"));

function bulkCreate(objects, asyncHandler) {
  var MSG_ERROR = 'Invalid bulkCreate argument. ' + 'The first argument must contain only array of objects.';

  if (!_utils["default"].isArray(objects)) {
    throw new Error(MSG_ERROR);
  }

  objects.forEach(function (obj) {
    if (!_utils["default"].isObject(obj) || Array.isArray(obj)) {
      throw new Error(MSG_ERROR);
    }
  });
  return this.app.request.post({
    url: this.app.urls.dataBulkTable(this.className),
    data: objects,
    isAsync: !!asyncHandler,
    asyncHandler: asyncHandler
  });
}

function bulkUpdate(where, changes, asyncHandler) {
  if (!where || !_utils["default"].isString(where)) {
    throw new Error('Invalid bulkUpdate argument. The first argument must be "whereClause" string.');
  }

  if (!_utils["default"].isObject(changes) || Array.isArray(changes) || changes instanceof _async["default"]) {
    throw new Error('Invalid bulkUpdate argument. The second argument must be object.');
  }

  return this.app.request.put({
    url: this.app.urls.dataBulkTable(this.className),
    query: {
      where: where
    },
    data: changes,
    isAsync: !!asyncHandler,
    asyncHandler: asyncHandler
  });
}

function bulkDelete(where, asyncHandler) {
  if (!_utils["default"].isArray(where) && !_utils["default"].isString(where)) {
    throw new Error('Invalid bulkDelete argument. ' + 'The first argument must contain array of objects or array of id or "whereClause" string.');
  }

  var queryData = {
    where: _utils["default"].isString(where) ? where : objectsToWhereClause(where)
  };
  return this.app.request.post({
    url: this.app.urls.dataBulkTableDelete(this.className),
    isAsync: !!asyncHandler,
    asyncHandler: asyncHandler,
    data: queryData
  });
}

function objectsToWhereClause(objects) {
  var objectIds = objects.map(function (obj) {
    if (!obj || !_utils["default"].isString(obj) && !obj.objectId) {
      throw new Error('Can not transform "objects" to "whereClause". ' + 'Item must be a string or an object with property "objectId" as string.');
    }

    return "'".concat(_utils["default"].isString(obj) ? obj : obj.objectId, "'");
  });
  return "objectId in (".concat(objectIds.join(','), ")");
}

/***/ }),

/***/ "./src/data/store/count.js":
/*!*********************************!*\
  !*** ./src/data/store/count.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getObjectCount = getObjectCount;

var _async = _interopRequireDefault(__webpack_require__(/*! ../../request/async */ "./src/request/async.js"));

var _queryBuilder = _interopRequireDefault(__webpack_require__(/*! ../query-builder */ "./src/data/query-builder.js"));

function getObjectCount(condition, asyncHandler) {
  if (condition instanceof _async["default"]) {
    asyncHandler = condition;
    condition = undefined;
  }

  if (condition instanceof _queryBuilder["default"]) {
    condition = condition.build().condition || undefined;
  }

  return this.app.request.get({
    url: this.app.urls.dataTableCount(this.className),
    query: {
      where: condition
    },
    isAsync: !!asyncHandler,
    asyncHandler: asyncHandler
  });
}

/***/ }),

/***/ "./src/data/store/extract-query-options.js":
/*!*************************************************!*\
  !*** ./src/data/store/extract-query-options.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.extractQueryOptions = extractQueryOptions;

var _utils = _interopRequireDefault(__webpack_require__(/*! ../../utils */ "./src/utils.js"));

//TODO: refactor me
//TODO: does make sense to move this logic into QueryBuilder?
function extractQueryOptions(options) {
  var params = [];

  if (typeof options.pageSize !== 'undefined') {
    if (options.pageSize < 1) {
      throw new Error('PageSize can not be less then 1');
    }

    params.push('pageSize=' + encodeURIComponent(options.pageSize));
  }

  if (typeof options.offset !== 'undefined') {
    if (options.offset < 0) {
      throw new Error('Offset can not be less then 0');
    }

    params.push('offset=' + encodeURIComponent(options.offset));
  }

  if (options.sortBy) {
    if (_utils["default"].isString(options.sortBy)) {
      params.push('sortBy=' + encodeURIComponent(options.sortBy));
    } else if (_utils["default"].isArray(options.sortBy)) {
      params.push('sortBy=' + _utils["default"].encodeArrayToUriComponent(options.sortBy));
    }
  }

  if (options.groupBy) {
    if (_utils["default"].isString(options.groupBy)) {
      params.push('groupBy=' + encodeURIComponent(options.groupBy));
    } else if (_utils["default"].isArray(options.groupBy)) {
      params.push('groupBy=' + _utils["default"].encodeArrayToUriComponent(options.groupBy));
    }
  }

  if (_utils["default"].isNumber(options.relationsDepth)) {
    params.push('relationsDepth=' + options.relationsDepth);
  }

  if (_utils["default"].isNumber(options.relationsPageSize)) {
    params.push('relationsPageSize=' + options.relationsPageSize);
  }

  if (options.relations) {
    if (_utils["default"].isArray(options.relations)) {
      var loadRelations = options.relations.length ? _utils["default"].encodeArrayToUriComponent(options.relations) : '*';
      params.push('loadRelations=' + loadRelations);
    }
  }

  return params.join('&');
}

/***/ }),

/***/ "./src/data/store/find.js":
/*!********************************!*\
  !*** ./src/data/store/find.js ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.find = find;
exports.findById = findById;
exports.findFirst = findFirst;
exports.findLast = findLast;

var _utils = _interopRequireDefault(__webpack_require__(/*! ../../utils */ "./src/utils.js"));

var _async = _interopRequireDefault(__webpack_require__(/*! ../../request/async */ "./src/request/async.js"));

var _queryBuilder = _interopRequireDefault(__webpack_require__(/*! ../query-builder */ "./src/data/query-builder.js"));

var _extractQueryOptions = __webpack_require__(/*! ./extract-query-options */ "./src/data/store/extract-query-options.js");

//TODO: refactor me
function findUtil(url, Model, dataQuery, asyncHandler) {
  var _this = this;

  dataQuery = dataQuery || {};
  var dataQueryURL = dataQuery.url;

  if (dataQuery instanceof _queryBuilder["default"]) {
    dataQuery = dataQuery.build();
  }

  var query = [];

  if (asyncHandler) {
    asyncHandler = _utils["default"].wrapAsync(asyncHandler, function (resp) {
      return _this.parseFindResponse(resp);
    });
  }

  if (dataQuery.options) {
    query.push((0, _extractQueryOptions.extractQueryOptions)(dataQuery.options));
  }

  if (dataQuery.condition) {
    query.push('where=' + encodeURIComponent(dataQuery.condition));
  }

  if (dataQuery.havingClause) {
    query.push('having=' + encodeURIComponent(dataQuery.havingClause));
  }

  if (Array.isArray(dataQuery.properties)) {
    dataQuery.properties.forEach(function (property) {
      query.push('property=' + encodeURIComponent(property));
    });
  }

  if (Array.isArray(dataQuery.excludeProps) && dataQuery.excludeProps.length) {
    query.push('excludeProps=' + _utils["default"].encodeArrayToUriComponent(dataQuery.excludeProps));
  }

  if (dataQueryURL) {
    url += '/' + dataQueryURL;
  }

  if (query.length) {
    url += '?' + query.join('&');
  }

  var result = this.app.request.get({
    url: url,
    isAsync: !!asyncHandler,
    asyncHandler: asyncHandler,
    cachePolicy: dataQuery.cachePolicy
  });

  if (asyncHandler) {
    return result;
  }

  return this.parseFindResponse(result, Model, this.classToTableMap);
}

function find(queryBuilder, asyncHandler) {
  //TODO: add an ability to get object as QueryBuilder
  if (queryBuilder instanceof _async["default"]) {
    asyncHandler = queryBuilder;
    queryBuilder = undefined;
  }

  if (queryBuilder && !(queryBuilder instanceof _queryBuilder["default"])) {
    throw new Error('The first argument should be instance of Backendless.DataQueryBuilder');
  }

  var dataQuery = queryBuilder ? queryBuilder.build() : {};
  var url = this.app.urls.dataTable(this.className);
  return findUtil.call(this, url, this.model, dataQuery, asyncHandler, this.classToTableMap);
}

function findById() {
  var _this2 = this;

  var argsObj;

  var responder = _utils["default"].extractResponder(arguments);

  var url = this.app.urls.dataTable(this.className);

  if (_utils["default"].isString(arguments[0])) {
    argsObj = !(arguments[1] instanceof _async["default"]) ? arguments[1] || {} : {};
    argsObj.url = arguments[0];

    if (!argsObj.url) {
      throw new Error('missing argument "object ID" for method findById()');
    }

    return findUtil.call(this, url, this.model, argsObj, responder, this.classToTableMap);
  } else if (_utils["default"].isObject(arguments[0])) {
    argsObj = arguments[0];
    var isAsync = !!responder;
    var send = '/pk?';

    for (var key in argsObj) {
      send += key + '=' + argsObj[key] + '&';
    }

    if (responder) {
      responder = _utils["default"].wrapAsync(responder, function (resp) {
        return _this2.parseFindResponse(resp);
      });
    }

    var result = this.app.request.get({
      url: url + send.replace(/&$/, ''),
      isAsync: isAsync,
      asyncHandler: responder
    });
    return isAsync ? result : this.parseFindResponse(result);
  }
}

function findFirst(dataQuery, asyncHandler) {
  if (dataQuery instanceof _async["default"]) {
    asyncHandler = dataQuery;
    dataQuery = {};
  }

  dataQuery.url = 'first';
  var url = this.app.urls.dataTable(this.className);
  return findUtil.call(this, url, this.model, dataQuery, asyncHandler, this.classToTableMap);
}

function findLast(dataQuery, asyncHandler) {
  if (dataQuery instanceof _async["default"]) {
    asyncHandler = dataQuery;
    dataQuery = {};
  }

  dataQuery.url = 'last';
  var url = this.app.urls.dataTable(this.className);
  return findUtil.call(this, url, this.model, dataQuery, asyncHandler, this.classToTableMap);
}

/***/ }),

/***/ "./src/data/store/index.js":
/*!*********************************!*\
  !*** ./src/data/store/index.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _applyDecoratedDescriptor2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/applyDecoratedDescriptor */ "./node_modules/@babel/runtime/helpers/applyDecoratedDescriptor.js"));

var _extends2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/extends */ "./node_modules/@babel/runtime/helpers/extends.js"));

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));

var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js"));

var _utils = _interopRequireDefault(__webpack_require__(/*! ../../utils */ "./src/utils.js"));

var _decorators = __webpack_require__(/*! ../../decorators */ "./src/decorators/index.js");

var _rtStore = _interopRequireDefault(__webpack_require__(/*! ../rt-store */ "./src/data/rt-store/index.js"));

var _relations = __webpack_require__(/*! ./relations */ "./src/data/store/relations.js");

var _bulk = __webpack_require__(/*! ./bulk */ "./src/data/store/bulk.js");

var _find = __webpack_require__(/*! ./find */ "./src/data/store/find.js");

var _save = __webpack_require__(/*! ./save */ "./src/data/store/save.js");

var _remove = __webpack_require__(/*! ./remove */ "./src/data/store/remove.js");

var _count = __webpack_require__(/*! ./count */ "./src/data/store/count.js");

var _parse = __webpack_require__(/*! ./parse */ "./src/data/store/parse.js");

var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _dec7, _dec8, _dec9, _dec10, _dec11, _dec12, _dec13, _dec14, _obj, _init, _init2, _init3, _init4, _init5, _init6, _init7, _init8, _init9, _init10, _init11, _init12, _init13, _init14;

//TODO: will be removed when remove sync methods
var namespaceLabel = 'Backendless.Data.of(<ClassName>)';

var DataStore = /*#__PURE__*/function () {
  function DataStore(model, classToTableMap, app) {
    (0, _classCallCheck2["default"])(this, DataStore);
    this.classToTableMap = classToTableMap;

    if (typeof model === 'string') {
      this.className = model;
      this.model = this.classToTableMap[this.className];
    } else {
      this.className = _utils["default"].getClassName(model);
      this.model = this.classToTableMap[this.className] || model;
    }

    if (!this.className) {
      throw new Error('Class name should be specified');
    }

    this.app = app;
  }

  (0, _createClass2["default"])(DataStore, [{
    key: "rt",
    value: function rt() {
      return this.eventHandler = this.eventHandler || new _rtStore["default"](this, this.app);
    }
  }, {
    key: "parseFindResponse",
    value: function parseFindResponse(result, model) {
      return (0, _parse.parseFindResponse)(result, model || this.model, this.classToTableMap);
    }
  }]);
  return DataStore;
}();

(0, _extends2["default"])(DataStore.prototype, (_dec = (0, _decorators.deprecated)(namespaceLabel, "".concat(namespaceLabel, ".save")), _dec2 = (0, _decorators.deprecated)(namespaceLabel, "".concat(namespaceLabel, ".remove")), _dec3 = (0, _decorators.deprecated)(namespaceLabel, "".concat(namespaceLabel, ".find")), _dec4 = (0, _decorators.deprecated)(namespaceLabel, "".concat(namespaceLabel, ".findById")), _dec5 = (0, _decorators.deprecated)(namespaceLabel, "".concat(namespaceLabel, ".loadRelations")), _dec6 = (0, _decorators.deprecated)(namespaceLabel, "".concat(namespaceLabel, ".findFirst")), _dec7 = (0, _decorators.deprecated)(namespaceLabel, "".concat(namespaceLabel, ".findLast")), _dec8 = (0, _decorators.deprecated)(namespaceLabel, "".concat(namespaceLabel, ".getObjectCount")), _dec9 = (0, _decorators.deprecated)(namespaceLabel, "".concat(namespaceLabel, ".setRelation")), _dec10 = (0, _decorators.deprecated)(namespaceLabel, "".concat(namespaceLabel, ".addRelation")), _dec11 = (0, _decorators.deprecated)(namespaceLabel, "".concat(namespaceLabel, ".deleteRelation")), _dec12 = (0, _decorators.deprecated)(namespaceLabel, "".concat(namespaceLabel, ".bulkCreate")), _dec13 = (0, _decorators.deprecated)(namespaceLabel, "".concat(namespaceLabel, ".bulkUpdate")), _dec14 = (0, _decorators.deprecated)(namespaceLabel, "".concat(namespaceLabel, ".bulkDelete")), (_obj = {
  saveSync: _utils["default"]["synchronized"](_save.save),
  save: _utils["default"].promisified(_save.save),
  removeSync: _utils["default"]["synchronized"](_remove.remove),
  remove: _utils["default"].promisified(_remove.remove),
  findSync: _utils["default"]["synchronized"](_find.find),
  find: _utils["default"].promisified(_find.find),
  findByIdSync: _utils["default"]["synchronized"](_find.findById),
  findById: _utils["default"].promisified(_find.findById),
  loadRelationsSync: _utils["default"]["synchronized"](_relations.loadRelations),
  loadRelations: _utils["default"].promisified(_relations.loadRelations),
  findFirstSync: _utils["default"]["synchronized"](_find.findFirst),
  findFirst: _utils["default"].promisified(_find.findFirst),
  findLastSync: _utils["default"]["synchronized"](_find.findLast),
  findLast: _utils["default"].promisified(_find.findLast),
  getObjectCountSync: _utils["default"]["synchronized"](_count.getObjectCount),
  getObjectCount: _utils["default"].promisified(_count.getObjectCount),
  setRelationSync: _utils["default"]["synchronized"](_relations.setRelation),
  setRelation: _utils["default"].promisified(_relations.setRelation),
  addRelationSync: _utils["default"]["synchronized"](_relations.addRelation),
  addRelation: _utils["default"].promisified(_relations.addRelation),
  deleteRelationSync: _utils["default"]["synchronized"](_relations.deleteRelation),
  deleteRelation: _utils["default"].promisified(_relations.deleteRelation),
  bulkCreateSync: _utils["default"]["synchronized"](_bulk.bulkCreate),
  bulkCreate: _utils["default"].promisified(_bulk.bulkCreate),
  bulkUpdateSync: _utils["default"]["synchronized"](_bulk.bulkUpdate),
  bulkUpdate: _utils["default"].promisified(_bulk.bulkUpdate),
  bulkDeleteSync: _utils["default"]["synchronized"](_bulk.bulkDelete),
  bulkDelete: _utils["default"].promisified(_bulk.bulkDelete)
}, ((0, _applyDecoratedDescriptor2["default"])(_obj, "saveSync", [_dec], (_init = Object.getOwnPropertyDescriptor(_obj, "saveSync"), _init = _init ? _init.value : undefined, {
  enumerable: true,
  configurable: true,
  writable: true,
  initializer: function initializer() {
    return _init;
  }
}), _obj), (0, _applyDecoratedDescriptor2["default"])(_obj, "removeSync", [_dec2], (_init2 = Object.getOwnPropertyDescriptor(_obj, "removeSync"), _init2 = _init2 ? _init2.value : undefined, {
  enumerable: true,
  configurable: true,
  writable: true,
  initializer: function initializer() {
    return _init2;
  }
}), _obj), (0, _applyDecoratedDescriptor2["default"])(_obj, "findSync", [_dec3], (_init3 = Object.getOwnPropertyDescriptor(_obj, "findSync"), _init3 = _init3 ? _init3.value : undefined, {
  enumerable: true,
  configurable: true,
  writable: true,
  initializer: function initializer() {
    return _init3;
  }
}), _obj), (0, _applyDecoratedDescriptor2["default"])(_obj, "findByIdSync", [_dec4], (_init4 = Object.getOwnPropertyDescriptor(_obj, "findByIdSync"), _init4 = _init4 ? _init4.value : undefined, {
  enumerable: true,
  configurable: true,
  writable: true,
  initializer: function initializer() {
    return _init4;
  }
}), _obj), (0, _applyDecoratedDescriptor2["default"])(_obj, "loadRelationsSync", [_dec5], (_init5 = Object.getOwnPropertyDescriptor(_obj, "loadRelationsSync"), _init5 = _init5 ? _init5.value : undefined, {
  enumerable: true,
  configurable: true,
  writable: true,
  initializer: function initializer() {
    return _init5;
  }
}), _obj), (0, _applyDecoratedDescriptor2["default"])(_obj, "findFirstSync", [_dec6], (_init6 = Object.getOwnPropertyDescriptor(_obj, "findFirstSync"), _init6 = _init6 ? _init6.value : undefined, {
  enumerable: true,
  configurable: true,
  writable: true,
  initializer: function initializer() {
    return _init6;
  }
}), _obj), (0, _applyDecoratedDescriptor2["default"])(_obj, "findLastSync", [_dec7], (_init7 = Object.getOwnPropertyDescriptor(_obj, "findLastSync"), _init7 = _init7 ? _init7.value : undefined, {
  enumerable: true,
  configurable: true,
  writable: true,
  initializer: function initializer() {
    return _init7;
  }
}), _obj), (0, _applyDecoratedDescriptor2["default"])(_obj, "getObjectCountSync", [_dec8], (_init8 = Object.getOwnPropertyDescriptor(_obj, "getObjectCountSync"), _init8 = _init8 ? _init8.value : undefined, {
  enumerable: true,
  configurable: true,
  writable: true,
  initializer: function initializer() {
    return _init8;
  }
}), _obj), (0, _applyDecoratedDescriptor2["default"])(_obj, "setRelationSync", [_dec9], (_init9 = Object.getOwnPropertyDescriptor(_obj, "setRelationSync"), _init9 = _init9 ? _init9.value : undefined, {
  enumerable: true,
  configurable: true,
  writable: true,
  initializer: function initializer() {
    return _init9;
  }
}), _obj), (0, _applyDecoratedDescriptor2["default"])(_obj, "addRelationSync", [_dec10], (_init10 = Object.getOwnPropertyDescriptor(_obj, "addRelationSync"), _init10 = _init10 ? _init10.value : undefined, {
  enumerable: true,
  configurable: true,
  writable: true,
  initializer: function initializer() {
    return _init10;
  }
}), _obj), (0, _applyDecoratedDescriptor2["default"])(_obj, "deleteRelationSync", [_dec11], (_init11 = Object.getOwnPropertyDescriptor(_obj, "deleteRelationSync"), _init11 = _init11 ? _init11.value : undefined, {
  enumerable: true,
  configurable: true,
  writable: true,
  initializer: function initializer() {
    return _init11;
  }
}), _obj), (0, _applyDecoratedDescriptor2["default"])(_obj, "bulkCreateSync", [_dec12], (_init12 = Object.getOwnPropertyDescriptor(_obj, "bulkCreateSync"), _init12 = _init12 ? _init12.value : undefined, {
  enumerable: true,
  configurable: true,
  writable: true,
  initializer: function initializer() {
    return _init12;
  }
}), _obj), (0, _applyDecoratedDescriptor2["default"])(_obj, "bulkUpdateSync", [_dec13], (_init13 = Object.getOwnPropertyDescriptor(_obj, "bulkUpdateSync"), _init13 = _init13 ? _init13.value : undefined, {
  enumerable: true,
  configurable: true,
  writable: true,
  initializer: function initializer() {
    return _init13;
  }
}), _obj), (0, _applyDecoratedDescriptor2["default"])(_obj, "bulkDeleteSync", [_dec14], (_init14 = Object.getOwnPropertyDescriptor(_obj, "bulkDeleteSync"), _init14 = _init14 ? _init14.value : undefined, {
  enumerable: true,
  configurable: true,
  writable: true,
  initializer: function initializer() {
    return _init14;
  }
}), _obj)), _obj)));
var _default = DataStore;
exports["default"] = _default;

/***/ }),

/***/ "./src/data/store/parse.js":
/*!*********************************!*\
  !*** ./src/data/store/parse.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.parseFindResponse = parseFindResponse;

var _slicedToArray2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ "./node_modules/@babel/runtime/helpers/slicedToArray.js"));

var _typeof2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/typeof */ "./node_modules/@babel/runtime/helpers/typeof.js"));

var _utils = _interopRequireDefault(__webpack_require__(/*! ../../utils */ "./src/utils.js"));

var _geoConstructor = _interopRequireDefault(__webpack_require__(/*! ../geo/geo-constructor */ "./src/data/geo/geo-constructor.js"));

var GEO_CLASSES = ['com.backendless.persistence.Polygon', 'com.backendless.persistence.LineString', 'com.backendless.persistence.Point', 'com.backendless.persistence.Geometry'];

function parseCircularDependencies(obj) {
  var result = new obj.constructor();
  var subIds = {};
  var postAssign = [];
  var iteratedItems = [];

  function ensureCircularDep(source, target, prop) {
    if (subIds[source[prop].__originSubID]) {
      target[prop] = subIds[source[prop].__originSubID];
    } else {
      postAssign.push([target, prop, source[prop].__originSubID]);
    }
  }

  function processModel(source, target, prop) {
    if (source[prop].__subID && subIds[source[prop].__subID]) {
      target[prop] = subIds[source[prop].__subID];
    } else {
      target[prop] = new source[prop].constructor();
    }

    if (source[prop].__subID) {
      subIds[source[prop].__subID] = target[prop];
      delete source[prop].__subID;
    }
  }

  function buildCircularDeps(source, target) {
    if (!iteratedItems.includes(source)) {
      iteratedItems.push(source);

      for (var prop in source) {
        if (source.hasOwnProperty(prop) && (!Array.isArray(target[prop]) || !target[prop])) {
          if (Array.isArray(source[prop])) {
            buildCircularDeps(source[prop], target[prop] = []);
          } else if (source[prop] && (0, _typeof2["default"])(source[prop]) === 'object') {
            if (GEO_CLASSES.includes(source[prop].___class)) {
              target[prop] = (0, _geoConstructor["default"])(source[prop]);
            } else if (source[prop].__originSubID) {
              ensureCircularDep(source, target, prop);
            } else {
              processModel(source, target, prop);
              buildCircularDeps(source[prop], target[prop]);
            }
          } else {
            target[prop] = source[prop];
          }
        }
      }
    }
  }

  buildCircularDeps(obj, result);
  postAssign.forEach(function (_ref) {
    var _ref2 = (0, _slicedToArray2["default"])(_ref, 3),
        target = _ref2[0],
        prop = _ref2[1],
        __originSubID = _ref2[2];

    return target[prop] = subIds[__originSubID];
  });
  return result;
}

function parseFindResponse(response, Model, classToTableMap) {
  var sanitizeResponseItem = function sanitizeResponseItem(record) {
    Model = typeof Model === 'function' ? Model : classToTableMap[record.___class];
    return _utils["default"].deepExtend(Model ? new Model() : {}, record, classToTableMap);
  };

  var result = Array.isArray(response) ? response.map(sanitizeResponseItem) : sanitizeResponseItem(response);
  return parseCircularDependencies(result);
}

/***/ }),

/***/ "./src/data/store/relations.js":
/*!*************************************!*\
  !*** ./src/data/store/relations.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.loadRelations = loadRelations;
exports.setRelation = setRelation;
exports.addRelation = addRelation;
exports.deleteRelation = deleteRelation;

var _utils = _interopRequireDefault(__webpack_require__(/*! ../../utils */ "./src/utils.js"));

var _loadRelationsQueryBuilder = _interopRequireDefault(__webpack_require__(/*! ../load-relations-query-builder */ "./src/data/load-relations-query-builder.js"));

var _extractQueryOptions = __webpack_require__(/*! ./extract-query-options */ "./src/data/store/extract-query-options.js");

//TODO: refactor me
function collectRelationObject(parent, columnName, children) {
  var relation = {
    columnName: columnName
  };

  if (_utils["default"].isString(parent)) {
    relation.parentId = parent;
  } else if (_utils["default"].isObject(parent)) {
    relation.parentId = parent.objectId;
  }

  if (_utils["default"].isString(children)) {
    relation.whereClause = children;
  } else if (_utils["default"].isArray(children)) {
    relation.childrenIds = children.map(function (child) {
      return _utils["default"].isObject(child) ? child.objectId : child;
    });
  }

  return relation;
}

function manageRelation(method, url, relation, asyncHandler) {
  var responder = asyncHandler;

  if (!relation.parentId) {
    throw new Error('Invalid value for the "parent" argument. ' + 'The argument is required and must contain only string or object values.');
  }

  if (!relation.columnName) {
    throw new Error('Invalid value for the "columnName" argument. ' + 'The argument is required and must contain only string values.');
  }

  if (!relation.whereClause && !relation.childrenIds) {
    throw new Error('Invalid value for the third argument. ' + 'The argument is required and must contain string values if it sets whereClause ' + 'or array if it sets childObjects.');
  }

  return this.app.request.send({
    method: method,
    url: url,
    isAsync: !!responder,
    asyncHandler: responder,
    data: relation.childrenIds
  });
}

function buildRelationUrl(className, relation) {
  var url = this.app.urls.dataTableObjectRelation(className, relation.parentId, relation.columnName);

  if (relation.whereClause) {
    url += '?' + _utils["default"].toQueryParams({
      whereClause: relation.whereClause
    });
  }

  return url;
}

function loadRelations(parentObjectId, queryBuilder, asyncHandler) {
  var _this = this;

  if (!parentObjectId || !_utils["default"].isString(parentObjectId)) {
    throw new Error('The parentObjectId is required argument and must be a nonempty string');
  }

  if (!(queryBuilder instanceof _loadRelationsQueryBuilder["default"])) {
    throw new Error('Invalid queryBuilder object.' + 'The queryBuilder is required and must be instance of the Backendless.LoadRelationsQueryBuilder');
  }

  var dataQuery = queryBuilder.build();
  var relationName = dataQuery.options && dataQuery.options.relationName;

  if (!relationName || !_utils["default"].isString(relationName)) {
    throw new Error('The options relationName is required and must contain string value');
  }

  var options;
  var query = [];

  if (dataQuery.options) {
    options = (0, _extractQueryOptions.extractQueryOptions)(dataQuery.options);
  }

  if (options) {
    query.push(options);
  }

  if (dataQuery.condition) {
    query.push('where=' + encodeURIComponent(dataQuery.condition));
  }

  if (dataQuery.havingClause) {
    query.push('having=' + encodeURIComponent(dataQuery.havingClause));
  }

  if (dataQuery.properties && dataQuery.properties.length) {
    query.push('props=' + _utils["default"].encodeArrayToUriComponent(dataQuery.properties));
  }

  var url = this.app.urls.dataTableObjectRelation(this.className, parentObjectId, relationName);

  if (asyncHandler) {
    asyncHandler = _utils["default"].wrapAsync(asyncHandler, function (resp) {
      return _this.parseFindResponse(resp, dataQuery.relationModel);
    });
  }

  if (query.length) {
    url += '?' + query.join('&');
  }

  var result = this.app.request.get({
    url: url,
    isAsync: !!asyncHandler,
    asyncHandler: asyncHandler
  });

  if (asyncHandler) {
    return result;
  }

  return this.parseFindResponse(result, dataQuery.relationModel);
}

function setRelation(parent, columnName, children, asyncHandler) {
  var relation = collectRelationObject(parent, columnName, children);
  var url = buildRelationUrl.call(this, this.className, relation);
  return manageRelation.call(this, 'POST', url, relation, asyncHandler);
}

function addRelation(parent, columnName, children, asyncHandler) {
  var relation = collectRelationObject(parent, columnName, children);
  var url = buildRelationUrl.call(this, this.className, relation);
  return manageRelation.call(this, 'PUT', url, relation, asyncHandler);
}

function deleteRelation(parent, columnName, children, asyncHandler) {
  var relation = collectRelationObject(parent, columnName, children);
  var url = buildRelationUrl.call(this, this.className, relation);
  return manageRelation.call(this, 'DELETE', url, relation, asyncHandler);
}

/***/ }),

/***/ "./src/data/store/remove.js":
/*!**********************************!*\
  !*** ./src/data/store/remove.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.remove = remove;

var _utils = _interopRequireDefault(__webpack_require__(/*! ../../utils */ "./src/utils.js"));

function remove(object, asyncHandler) {
  if (!_utils["default"].isObject(object) && !_utils["default"].isString(object)) {
    throw new Error('Invalid value for the "value" argument. The argument must contain only string or object values');
  }

  var result = this.app.request["delete"]({
    url: this.app.urls.dataTableObject(this.className, object.objectId || object),
    isAsync: !!asyncHandler,
    asyncHandler: asyncHandler
  });

  if (asyncHandler) {
    return result;
  }

  return this.parseFindResponse(result);
}

/***/ }),

/***/ "./src/data/store/save.js":
/*!********************************!*\
  !*** ./src/data/store/save.js ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.replCircDeps = replCircDeps;
exports.save = save;

var _typeof2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/typeof */ "./node_modules/@babel/runtime/helpers/typeof.js"));

var _utils = _interopRequireDefault(__webpack_require__(/*! ../../utils */ "./src/utils.js"));

var genID = function genID() {
  //TODO: refactor me
  var b = '';

  for (var a = b; a++ < 36; b += a * 51 && 52 ? (a ^ 15 ? 8 ^ Math.random() * (a ^ 20 ? 16 : 4) : 4).toString(16) : '-') {}

  return b;
};

function replCircDeps(object) {
  var objMap = [object];
  var pos;

  var _replCircDepsHelper = function _replCircDepsHelper(obj) {
    for (var prop in obj) {
      if (obj.hasOwnProperty(prop) && (0, _typeof2["default"])(obj[prop]) === 'object' && obj[prop] != null) {
        if ((pos = objMap.indexOf(obj[prop])) !== -1) {
          objMap[pos]['__subID'] = objMap[pos]['__subID'] || genID();
          obj[prop] = {
            '__originSubID': objMap[pos]['__subID']
          };
        } else if (_utils["default"].isDate(obj[prop])) {
          obj[prop] = obj[prop].getTime();
        } else {
          objMap.push(obj[prop]);

          _replCircDepsHelper(obj[prop]);
        }
      }
    }
  };

  _replCircDepsHelper(object);
}

function save(obj, asyncHandler) {
  var _this = this;

  replCircDeps(obj);
  var objRef = obj;

  if (asyncHandler) {
    asyncHandler = _utils["default"].wrapAsync(asyncHandler, function (resp) {
      return _this.parseFindResponse(resp);
    });
  }

  var result = this.app.request.put({
    url: this.app.urls.dataTable(this.className),
    data: obj,
    isAsync: !!asyncHandler,
    asyncHandler: asyncHandler
  });

  if (asyncHandler) {
    return result;
  }

  return _utils["default"].deepExtend(objRef, this.parseFindResponse(result), this.classToTableMap);
}

/***/ }),

/***/ "./src/decorators/deprecated.js":
/*!**************************************!*\
  !*** ./src/decorators/deprecated.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.deprecated = void 0;

var deprecated = function deprecated(namespace, alternative) {
  return function (target, prop, descriptor) {
    var value = target[prop];

    descriptor.initializer = function () {
      return function () {
        var mainMessage = "\"".concat(namespace, ".").concat(prop, "\" is deprecated and will be removed in the nearest release.");
        var helpMessage = "Please use ".concat(alternative, "."); // eslint-disable-next-line no-console

        console.warn("".concat(mainMessage, " ").concat(alternative ? helpMessage : ''));
        return value.apply(this, arguments);
      };
    };

    return descriptor;
  };
};

exports.deprecated = deprecated;

/***/ }),

/***/ "./src/decorators/index.js":
/*!*********************************!*\
  !*** ./src/decorators/index.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _deprecated = __webpack_require__(/*! ./deprecated */ "./src/decorators/deprecated.js");

Object.keys(_deprecated).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _deprecated[key];
    }
  });
});

/***/ }),

/***/ "./src/device/index.js":
/*!*****************************!*\
  !*** ./src/device/index.js ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));

var Device = function Device(props) {
  (0, _classCallCheck2["default"])(this, Device);

  if (!props || !props.uuid || !props.platform || !props.version) {
    throw new Error('Device properties object must consist of fields "uuid", "platform" and "version".');
  }

  this.uuid = props.uuid;
  this.platform = props.platform.toUpperCase();
  this.version = props.version;
};

exports["default"] = Device;

/***/ }),

/***/ "./src/files/copy.js":
/*!***************************!*\
  !*** ./src/files/copy.js ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.copyFile = copyFile;

var _utils = _interopRequireDefault(__webpack_require__(/*! ./utils */ "./src/files/utils.js"));

function copyFile(sourcePath, targetPath, asyncHandler) {
  var parameters = {
    sourcePath: _utils["default"].ensureSlashInPath(sourcePath),
    targetPath: _utils["default"].ensureSlashInPath(targetPath)
  };
  return this.app.request.put({
    url: this.app.urls.fileCopy(),
    data: parameters,
    isAsync: !!asyncHandler,
    asyncHandler: asyncHandler
  });
}

/***/ }),

/***/ "./src/files/count.js":
/*!****************************!*\
  !*** ./src/files/count.js ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getFileCount = getFileCount;

var _utils = _interopRequireDefault(__webpack_require__(/*! ../utils */ "./src/utils.js"));

var _async = _interopRequireDefault(__webpack_require__(/*! ../request/async */ "./src/request/async.js"));

function getFileCount(path, pattern, sub, countDirectories, asyncHandler) {
  if (countDirectories instanceof _async["default"]) {
    asyncHandler = countDirectories;
    countDirectories = undefined;
  } else if (sub instanceof _async["default"]) {
    asyncHandler = sub;
    sub = undefined;
    countDirectories = undefined;
  } else if (pattern instanceof _async["default"]) {
    asyncHandler = pattern;
    pattern = undefined;
    sub = undefined;
    countDirectories = undefined;
  }

  var query = {
    action: 'count',
    pattern: pattern !== undefined ? pattern : '*',
    sub: !!sub,
    countDirectories: !!countDirectories
  };

  if (!path || !_utils["default"].isString(path)) {
    throw new Error('Files "path" must not be empty and must be String');
  }

  if (!query.pattern || !_utils["default"].isString(query.pattern)) {
    throw new Error('Files "path" must not be empty and must be String');
  }

  return this.app.request.get({
    url: this.app.urls.filePath(path),
    query: query,
    isAsync: !!asyncHandler,
    asyncHandler: asyncHandler
  });
}

/***/ }),

/***/ "./src/files/exists.js":
/*!*****************************!*\
  !*** ./src/files/exists.js ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.exists = exists;

var _utils = _interopRequireDefault(__webpack_require__(/*! ../utils */ "./src/utils.js"));

function exists(path, asyncHandler) {
  if (!path || !_utils["default"].isString(path)) {
    throw new Error('Files "path" must not be empty and must be String');
  }

  return this.app.request.get({
    url: this.app.urls.filePath(path),
    query: {
      action: 'exists'
    },
    isAsync: !!asyncHandler,
    asyncHandler: asyncHandler
  });
}

/***/ }),

/***/ "./src/files/index.js":
/*!****************************!*\
  !*** ./src/files/index.js ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _applyDecoratedDescriptor2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/applyDecoratedDescriptor */ "./node_modules/@babel/runtime/helpers/applyDecoratedDescriptor.js"));

var _extends2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/extends */ "./node_modules/@babel/runtime/helpers/extends.js"));

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));

var _utils = _interopRequireDefault(__webpack_require__(/*! ../utils */ "./src/utils.js"));

var _decorators = __webpack_require__(/*! ../decorators */ "./src/decorators/index.js");

var _persmissions = _interopRequireDefault(__webpack_require__(/*! ./persmissions */ "./src/files/persmissions/index.js"));

var _save = __webpack_require__(/*! ./save */ "./src/files/save.js");

var _upload = __webpack_require__(/*! ./upload */ "./src/files/upload.js");

var _listinig = __webpack_require__(/*! ./listinig */ "./src/files/listinig.js");

var _rename = __webpack_require__(/*! ./rename */ "./src/files/rename.js");

var _move = __webpack_require__(/*! ./move */ "./src/files/move.js");

var _remove = __webpack_require__(/*! ./remove */ "./src/files/remove.js");

var _copy = __webpack_require__(/*! ./copy */ "./src/files/copy.js");

var _exists = __webpack_require__(/*! ./exists */ "./src/files/exists.js");

var _removeDirectory = __webpack_require__(/*! ./remove-directory */ "./src/files/remove-directory.js");

var _count = __webpack_require__(/*! ./count */ "./src/files/count.js");

var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _dec7, _dec8, _dec9, _dec10, _obj, _init, _init2, _init3, _init4, _init5, _init6, _init7, _init8, _init9, _init10;

var Files = function Files(app) {
  (0, _classCallCheck2["default"])(this, Files);
  this.app = app;
  this.Permissions = new _persmissions["default"](app);
};

(0, _extends2["default"])(Files.prototype, (_dec = (0, _decorators.deprecated)('Backendless.Files', 'Backendless.Files.saveFile'), _dec2 = (0, _decorators.deprecated)('Backendless.Files', 'Backendless.Files.upload'), _dec3 = (0, _decorators.deprecated)('Backendless.Files', 'Backendless.Files.listing'), _dec4 = (0, _decorators.deprecated)('Backendless.Files', 'Backendless.Files.renameFile'), _dec5 = (0, _decorators.deprecated)('Backendless.Files', 'Backendless.Files.moveFile'), _dec6 = (0, _decorators.deprecated)('Backendless.Files', 'Backendless.Files.copyFile'), _dec7 = (0, _decorators.deprecated)('Backendless.Files', 'Backendless.Files.remove'), _dec8 = (0, _decorators.deprecated)('Backendless.Files', 'Backendless.Files.exists'), _dec9 = (0, _decorators.deprecated)('Backendless.Files', 'Backendless.Files.removeDirectory'), _dec10 = (0, _decorators.deprecated)('Backendless.Files', 'Backendless.Files.getFileCount'), (_obj = {
  saveFileSync: _utils["default"]["synchronized"](_save.saveFile),
  saveFile: _utils["default"].promisified(_save.saveFile),
  uploadSync: _utils["default"]["synchronized"](_upload.upload),
  upload: _utils["default"].promisified(_upload.upload),
  listingSync: _utils["default"]["synchronized"](_listinig.listing),
  listing: _utils["default"].promisified(_listinig.listing),
  renameFileSync: _utils["default"]["synchronized"](_rename.renameFile),
  renameFile: _utils["default"].promisified(_rename.renameFile),
  moveFileSync: _utils["default"]["synchronized"](_move.moveFile),
  moveFile: _utils["default"].promisified(_move.moveFile),
  copyFileSync: _utils["default"]["synchronized"](_copy.copyFile),
  copyFile: _utils["default"].promisified(_copy.copyFile),
  removeSync: _utils["default"]["synchronized"](_remove.remove),
  remove: _utils["default"].promisified(_remove.remove),
  existsSync: _utils["default"]["synchronized"](_exists.exists),
  exists: _utils["default"].promisified(_exists.exists),
  removeDirectorySync: _utils["default"]["synchronized"](_removeDirectory.removeDirectory),
  removeDirectory: _utils["default"].promisified(_removeDirectory.removeDirectory),
  getFileCountSync: _utils["default"]["synchronized"](_count.getFileCount),
  getFileCount: _utils["default"].promisified(_count.getFileCount)
}, ((0, _applyDecoratedDescriptor2["default"])(_obj, "saveFileSync", [_dec], (_init = Object.getOwnPropertyDescriptor(_obj, "saveFileSync"), _init = _init ? _init.value : undefined, {
  enumerable: true,
  configurable: true,
  writable: true,
  initializer: function initializer() {
    return _init;
  }
}), _obj), (0, _applyDecoratedDescriptor2["default"])(_obj, "uploadSync", [_dec2], (_init2 = Object.getOwnPropertyDescriptor(_obj, "uploadSync"), _init2 = _init2 ? _init2.value : undefined, {
  enumerable: true,
  configurable: true,
  writable: true,
  initializer: function initializer() {
    return _init2;
  }
}), _obj), (0, _applyDecoratedDescriptor2["default"])(_obj, "listingSync", [_dec3], (_init3 = Object.getOwnPropertyDescriptor(_obj, "listingSync"), _init3 = _init3 ? _init3.value : undefined, {
  enumerable: true,
  configurable: true,
  writable: true,
  initializer: function initializer() {
    return _init3;
  }
}), _obj), (0, _applyDecoratedDescriptor2["default"])(_obj, "renameFileSync", [_dec4], (_init4 = Object.getOwnPropertyDescriptor(_obj, "renameFileSync"), _init4 = _init4 ? _init4.value : undefined, {
  enumerable: true,
  configurable: true,
  writable: true,
  initializer: function initializer() {
    return _init4;
  }
}), _obj), (0, _applyDecoratedDescriptor2["default"])(_obj, "moveFileSync", [_dec5], (_init5 = Object.getOwnPropertyDescriptor(_obj, "moveFileSync"), _init5 = _init5 ? _init5.value : undefined, {
  enumerable: true,
  configurable: true,
  writable: true,
  initializer: function initializer() {
    return _init5;
  }
}), _obj), (0, _applyDecoratedDescriptor2["default"])(_obj, "copyFileSync", [_dec6], (_init6 = Object.getOwnPropertyDescriptor(_obj, "copyFileSync"), _init6 = _init6 ? _init6.value : undefined, {
  enumerable: true,
  configurable: true,
  writable: true,
  initializer: function initializer() {
    return _init6;
  }
}), _obj), (0, _applyDecoratedDescriptor2["default"])(_obj, "removeSync", [_dec7], (_init7 = Object.getOwnPropertyDescriptor(_obj, "removeSync"), _init7 = _init7 ? _init7.value : undefined, {
  enumerable: true,
  configurable: true,
  writable: true,
  initializer: function initializer() {
    return _init7;
  }
}), _obj), (0, _applyDecoratedDescriptor2["default"])(_obj, "existsSync", [_dec8], (_init8 = Object.getOwnPropertyDescriptor(_obj, "existsSync"), _init8 = _init8 ? _init8.value : undefined, {
  enumerable: true,
  configurable: true,
  writable: true,
  initializer: function initializer() {
    return _init8;
  }
}), _obj), (0, _applyDecoratedDescriptor2["default"])(_obj, "removeDirectorySync", [_dec9], (_init9 = Object.getOwnPropertyDescriptor(_obj, "removeDirectorySync"), _init9 = _init9 ? _init9.value : undefined, {
  enumerable: true,
  configurable: true,
  writable: true,
  initializer: function initializer() {
    return _init9;
  }
}), _obj), (0, _applyDecoratedDescriptor2["default"])(_obj, "getFileCountSync", [_dec10], (_init10 = Object.getOwnPropertyDescriptor(_obj, "getFileCountSync"), _init10 = _init10 ? _init10.value : undefined, {
  enumerable: true,
  configurable: true,
  writable: true,
  initializer: function initializer() {
    return _init10;
  }
}), _obj)), _obj)));
var _default = Files;
exports["default"] = _default;

/***/ }),

/***/ "./src/files/listinig.js":
/*!*******************************!*\
  !*** ./src/files/listinig.js ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.listing = listing;

var _utils = _interopRequireDefault(__webpack_require__(/*! ../utils */ "./src/utils.js"));

var _async = _interopRequireDefault(__webpack_require__(/*! ../request/async */ "./src/request/async.js"));

function listing(path, pattern, sub, pagesize, offset, asyncHandler) {
  if (offset instanceof _async["default"]) {
    asyncHandler = offset;
    offset = undefined;
  } else if (pagesize instanceof _async["default"]) {
    asyncHandler = pagesize;
    pagesize = undefined;
    offset = undefined;
  } else if (sub instanceof _async["default"]) {
    asyncHandler = sub;
    sub = undefined;
    pagesize = undefined;
    offset = undefined;
  } else if (pattern instanceof _async["default"]) {
    asyncHandler = pattern;
    pattern = undefined;
    sub = undefined;
    pagesize = undefined;
    offset = undefined;
  }

  var query = {};

  if (_utils["default"].isString(pattern)) {
    query.pattern = pattern;
  }

  if (_utils["default"].isBoolean(sub)) {
    query.sub = sub;
  }

  if (_utils["default"].isNumber(pagesize)) {
    query.pagesize = pagesize;
  }

  if (_utils["default"].isNumber(offset)) {
    query.offset = offset;
  }

  return this.app.request.get({
    url: this.app.urls.filePath(path),
    query: query,
    isAsync: !!asyncHandler,
    asyncHandler: asyncHandler
  });
}

/***/ }),

/***/ "./src/files/move.js":
/*!***************************!*\
  !*** ./src/files/move.js ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.moveFile = moveFile;

var _utils = _interopRequireDefault(__webpack_require__(/*! ./utils */ "./src/files/utils.js"));

function moveFile(sourcePath, targetPath, asyncHandler) {
  var parameters = {
    sourcePath: _utils["default"].ensureSlashInPath(sourcePath),
    targetPath: _utils["default"].ensureSlashInPath(targetPath)
  };
  return this.app.request.put({
    url: this.app.urls.fileMove(),
    data: parameters,
    isAsync: !!asyncHandler,
    asyncHandler: asyncHandler
  });
}

/***/ }),

/***/ "./src/files/persmissions/index.js":
/*!*****************************************!*\
  !*** ./src/files/persmissions/index.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));

var _persmission = _interopRequireDefault(__webpack_require__(/*! ./persmission */ "./src/files/persmissions/persmission.js"));

var FilePermissions = function FilePermissions(app) {
  (0, _classCallCheck2["default"])(this, FilePermissions);
  this.app = app;
  this.READ = new _persmission["default"]('READ', app);
  this.DELETE = new _persmission["default"]('DELETE', app);
  this.WRITE = new _persmission["default"]('WRITE', app);
};

exports["default"] = FilePermissions;

/***/ }),

/***/ "./src/files/persmissions/persmission.js":
/*!***********************************************!*\
  !*** ./src/files/persmissions/persmission.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _applyDecoratedDescriptor2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/applyDecoratedDescriptor */ "./node_modules/@babel/runtime/helpers/applyDecoratedDescriptor.js"));

var _extends2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/extends */ "./node_modules/@babel/runtime/helpers/extends.js"));

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));

var _utils = _interopRequireDefault(__webpack_require__(/*! ../../utils */ "./src/utils.js"));

var _decorators = __webpack_require__(/*! ../../decorators */ "./src/decorators/index.js");

var _sendRequest = __webpack_require__(/*! ./send-request */ "./src/files/persmissions/send-request.js");

var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _dec7, _dec8, _dec9, _dec10, _dec11, _dec12, _obj, _init, _init2, _init3, _init4, _init5, _init6, _init7, _init8, _init9, _init10, _init11, _init12;

var PermissionTypes = {
  GRANT: 'GRANT',
  DENY: 'DENY'
};

function grantForUser(userId, url, asyncHandler) {
  return _sendRequest.sendRequest.call(this, PermissionTypes.GRANT, url, {
    userId: userId
  }, asyncHandler);
}

function denyForUser(userId, url, asyncHandler) {
  return _sendRequest.sendRequest.call(this, PermissionTypes.DENY, url, {
    userId: userId
  }, asyncHandler);
}

function grantForRole(roleName, url, asyncHandler) {
  return _sendRequest.sendRequest.call(this, PermissionTypes.GRANT, url, {
    roleName: roleName
  }, asyncHandler);
}

function denyForRole(roleName, url, asyncHandler) {
  return _sendRequest.sendRequest.call(this, PermissionTypes.DENY, url, {
    roleName: roleName
  }, asyncHandler);
}

function grantForAllUsers(url, asyncHandler) {
  return _sendRequest.sendRequest.call(this, PermissionTypes.GRANT, url, {
    userId: '*'
  }, asyncHandler);
}

function denyForAllUsers(url, asyncHandler) {
  return _sendRequest.sendRequest.call(this, PermissionTypes.DENY, url, {
    userId: '*'
  }, asyncHandler);
}

function grantForAllRoles(url, asyncHandler) {
  return _sendRequest.sendRequest.call(this, PermissionTypes.GRANT, url, {
    roleName: '*'
  }, asyncHandler);
}

function denyForAllRoles(url, asyncHandler) {
  return _sendRequest.sendRequest.call(this, PermissionTypes.DENY, url, {
    roleName: '*'
  }, asyncHandler);
} //TODO: will be removed when remove sync methods


var namespaceLabel = 'Backendless.Files.Permissions.{READ|DELETE|WRITE}';

var FilePermission = function FilePermission(permission, app) {
  (0, _classCallCheck2["default"])(this, FilePermission);
  this.permission = permission;
  this.app = app;
};

exports["default"] = FilePermission;
(0, _extends2["default"])(FilePermission.prototype, (_dec = (0, _decorators.deprecated)(namespaceLabel, "".concat(namespaceLabel, ".grantForUser")), _dec2 = (0, _decorators.deprecated)(namespaceLabel, "".concat(namespaceLabel, ".grantForUser")), _dec3 = (0, _decorators.deprecated)(namespaceLabel, "".concat(namespaceLabel, ".denyForUser")), _dec4 = (0, _decorators.deprecated)(namespaceLabel, "".concat(namespaceLabel, ".denyForUser")), _dec5 = (0, _decorators.deprecated)(namespaceLabel, "".concat(namespaceLabel, ".grantForRole")), _dec6 = (0, _decorators.deprecated)(namespaceLabel, "".concat(namespaceLabel, ".grantForRole")), _dec7 = (0, _decorators.deprecated)(namespaceLabel, "".concat(namespaceLabel, ".denyForRole")), _dec8 = (0, _decorators.deprecated)(namespaceLabel, "".concat(namespaceLabel, ".denyForRole")), _dec9 = (0, _decorators.deprecated)(namespaceLabel, "".concat(namespaceLabel, ".grantForAllUsers")), _dec10 = (0, _decorators.deprecated)(namespaceLabel, "".concat(namespaceLabel, ".grantForAllUsers")), _dec11 = (0, _decorators.deprecated)(namespaceLabel, "".concat(namespaceLabel, ".denyForAllUsers")), _dec12 = (0, _decorators.deprecated)(namespaceLabel, "".concat(namespaceLabel, ".denyForAllUsers")), (_obj = {
  grantUserSync: _utils["default"]["synchronized"](grantForUser),
  grantUser: _utils["default"].promisified(grantForUser),
  denyUserSync: _utils["default"]["synchronized"](denyForUser),
  denyUser: _utils["default"].promisified(denyForUser),
  grantRoleSync: _utils["default"]["synchronized"](grantForRole),
  grantRole: _utils["default"].promisified(grantForRole),
  denyRoleSync: _utils["default"]["synchronized"](denyForRole),
  denyRole: _utils["default"].promisified(denyForRole),
  grantSync: _utils["default"]["synchronized"](grantForAllUsers),
  grant: _utils["default"].promisified(grantForAllUsers),
  denySync: _utils["default"]["synchronized"](denyForAllUsers),
  deny: _utils["default"].promisified(denyForAllUsers),
  grantForUser: _utils["default"].promisified(grantForUser),
  denyForUser: _utils["default"].promisified(denyForUser),
  grantForRole: _utils["default"].promisified(grantForRole),
  denyForRole: _utils["default"].promisified(denyForRole),
  grantForAllUsers: _utils["default"].promisified(grantForAllUsers),
  denyForAllUsers: _utils["default"].promisified(denyForAllUsers),
  grantForAllRoles: _utils["default"].promisified(grantForAllRoles),
  denyForAllRoles: _utils["default"].promisified(denyForAllRoles)
}, ((0, _applyDecoratedDescriptor2["default"])(_obj, "grantUserSync", [_dec], (_init = Object.getOwnPropertyDescriptor(_obj, "grantUserSync"), _init = _init ? _init.value : undefined, {
  enumerable: true,
  configurable: true,
  writable: true,
  initializer: function initializer() {
    return _init;
  }
}), _obj), (0, _applyDecoratedDescriptor2["default"])(_obj, "grantUser", [_dec2], (_init2 = Object.getOwnPropertyDescriptor(_obj, "grantUser"), _init2 = _init2 ? _init2.value : undefined, {
  enumerable: true,
  configurable: true,
  writable: true,
  initializer: function initializer() {
    return _init2;
  }
}), _obj), (0, _applyDecoratedDescriptor2["default"])(_obj, "denyUserSync", [_dec3], (_init3 = Object.getOwnPropertyDescriptor(_obj, "denyUserSync"), _init3 = _init3 ? _init3.value : undefined, {
  enumerable: true,
  configurable: true,
  writable: true,
  initializer: function initializer() {
    return _init3;
  }
}), _obj), (0, _applyDecoratedDescriptor2["default"])(_obj, "denyUser", [_dec4], (_init4 = Object.getOwnPropertyDescriptor(_obj, "denyUser"), _init4 = _init4 ? _init4.value : undefined, {
  enumerable: true,
  configurable: true,
  writable: true,
  initializer: function initializer() {
    return _init4;
  }
}), _obj), (0, _applyDecoratedDescriptor2["default"])(_obj, "grantRoleSync", [_dec5], (_init5 = Object.getOwnPropertyDescriptor(_obj, "grantRoleSync"), _init5 = _init5 ? _init5.value : undefined, {
  enumerable: true,
  configurable: true,
  writable: true,
  initializer: function initializer() {
    return _init5;
  }
}), _obj), (0, _applyDecoratedDescriptor2["default"])(_obj, "grantRole", [_dec6], (_init6 = Object.getOwnPropertyDescriptor(_obj, "grantRole"), _init6 = _init6 ? _init6.value : undefined, {
  enumerable: true,
  configurable: true,
  writable: true,
  initializer: function initializer() {
    return _init6;
  }
}), _obj), (0, _applyDecoratedDescriptor2["default"])(_obj, "denyRoleSync", [_dec7], (_init7 = Object.getOwnPropertyDescriptor(_obj, "denyRoleSync"), _init7 = _init7 ? _init7.value : undefined, {
  enumerable: true,
  configurable: true,
  writable: true,
  initializer: function initializer() {
    return _init7;
  }
}), _obj), (0, _applyDecoratedDescriptor2["default"])(_obj, "denyRole", [_dec8], (_init8 = Object.getOwnPropertyDescriptor(_obj, "denyRole"), _init8 = _init8 ? _init8.value : undefined, {
  enumerable: true,
  configurable: true,
  writable: true,
  initializer: function initializer() {
    return _init8;
  }
}), _obj), (0, _applyDecoratedDescriptor2["default"])(_obj, "grantSync", [_dec9], (_init9 = Object.getOwnPropertyDescriptor(_obj, "grantSync"), _init9 = _init9 ? _init9.value : undefined, {
  enumerable: true,
  configurable: true,
  writable: true,
  initializer: function initializer() {
    return _init9;
  }
}), _obj), (0, _applyDecoratedDescriptor2["default"])(_obj, "grant", [_dec10], (_init10 = Object.getOwnPropertyDescriptor(_obj, "grant"), _init10 = _init10 ? _init10.value : undefined, {
  enumerable: true,
  configurable: true,
  writable: true,
  initializer: function initializer() {
    return _init10;
  }
}), _obj), (0, _applyDecoratedDescriptor2["default"])(_obj, "denySync", [_dec11], (_init11 = Object.getOwnPropertyDescriptor(_obj, "denySync"), _init11 = _init11 ? _init11.value : undefined, {
  enumerable: true,
  configurable: true,
  writable: true,
  initializer: function initializer() {
    return _init11;
  }
}), _obj), (0, _applyDecoratedDescriptor2["default"])(_obj, "deny", [_dec12], (_init12 = Object.getOwnPropertyDescriptor(_obj, "deny"), _init12 = _init12 ? _init12.value : undefined, {
  enumerable: true,
  configurable: true,
  writable: true,
  initializer: function initializer() {
    return _init12;
  }
}), _obj)), _obj)));

/***/ }),

/***/ "./src/files/persmissions/send-request.js":
/*!************************************************!*\
  !*** ./src/files/persmissions/send-request.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.sendRequest = sendRequest;

function sendRequest(type, path, options, asyncHandler) {
  var userId = options.userId,
      roleName = options.roleName;
  var permission = this.permission;
  var data = {
    permission: permission
  };

  if (userId) {
    data.user = userId;
  } else if (roleName) {
    data.role = roleName;
  }

  return this.app.request.put({
    url: this.app.urls.filePermission(type, path),
    data: data,
    isAsync: !!asyncHandler,
    asyncHandler: asyncHandler
  });
}

/***/ }),

/***/ "./src/files/remove-directory.js":
/*!***************************************!*\
  !*** ./src/files/remove-directory.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.removeDirectory = removeDirectory;

var _utils = _interopRequireDefault(__webpack_require__(/*! ../utils */ "./src/utils.js"));

function removeDirectory(path, asyncHandler) {
  if (!path || !_utils["default"].isString(path)) {
    throw new Error('Directory "path" must not be empty and must be String');
  }

  this.app.request["delete"]({
    url: this.app.urls.filePath(path),
    isAsync: !!asyncHandler,
    asyncHandler: asyncHandler
  });
}

/***/ }),

/***/ "./src/files/remove.js":
/*!*****************************!*\
  !*** ./src/files/remove.js ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.remove = remove;

var _utils = _interopRequireDefault(__webpack_require__(/*! ../utils */ "./src/utils.js"));

var isRemoteUrl = function isRemoteUrl(url) {
  return url.startsWith('http://') || url.startsWith('https://');
};

function remove(path, asyncHandler) {
  if (!path || !_utils["default"].isString(path)) {
    throw new Error('File "path" must not be empty and must be String');
  }

  return this.app.request["delete"]({
    url: isRemoteUrl(path) ? path : this.app.urls.filePath(path),
    isAsync: !!asyncHandler,
    asyncHandler: asyncHandler
  });
}

/***/ }),

/***/ "./src/files/rename.js":
/*!*****************************!*\
  !*** ./src/files/rename.js ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.renameFile = renameFile;

var _utils = _interopRequireDefault(__webpack_require__(/*! ../utils */ "./src/utils.js"));

var _utils2 = _interopRequireDefault(__webpack_require__(/*! ./utils */ "./src/files/utils.js"));

function renameFile(oldPathName, newName, asyncHandler) {
  if (!oldPathName || !_utils["default"].isString(oldPathName)) {
    throw new Error('Old File "path" must not be empty and must be String');
  }

  if (!newName || !_utils["default"].isString(newName)) {
    throw new Error('New File "path" must not be empty and must be String');
  }

  var parameters = {
    oldPathName: _utils2["default"].ensureSlashInPath(oldPathName),
    newName: newName
  };
  return this.app.request.put({
    url: this.app.urls.fileRename(),
    data: parameters,
    isAsync: !!asyncHandler,
    asyncHandler: asyncHandler
  });
}

/***/ }),

/***/ "./src/files/save.js":
/*!***************************!*\
  !*** ./src/files/save.js ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.saveFile = saveFile;

var _utils = _interopRequireDefault(__webpack_require__(/*! ../utils */ "./src/utils.js"));

var _async = _interopRequireDefault(__webpack_require__(/*! ../request/async */ "./src/request/async.js"));

var _urls = _interopRequireDefault(__webpack_require__(/*! ../urls */ "./src/urls.js"));

var toBase64 = function toBase64(content) {
  if (typeof Blob !== 'undefined') {
    if (!(content instanceof Blob)) {
      content = new Blob([content], {
        type: ''
      });
    }

    return new Promise(function (resolve, reject) {
      var reader = new FileReader();

      reader.onerror = function (error) {
        return reject(error);
      };

      reader.onload = function (event) {
        return resolve(event.target.result.split(';base64,')[1]);
      };

      reader.readAsDataURL(content);
    });
  }

  if (typeof Buffer !== 'undefined') {
    return Promise.resolve(Buffer.from(content).toString('base64'));
  }

  return Promise.resolve(content);
};

var sanitizeFileName = function sanitizeFileName(fileName) {
  return encodeURIComponent(fileName).replace(/'/g, '%27').replace(/"/g, '%22');
};
/**
 * @param {String} filePath
 * @param {String} fileName
 * @param {String|Uint8Array} fileContent
 * @param {Boolean} overwrite
 * @param {Async} asyncHandler
 * @returns {Promise.<String>}
 */


function saveFile(filePath, fileName, fileContent, overwrite, asyncHandler) {
  var _this = this;

  if (!filePath || !_utils["default"].isString(filePath)) {
    throw new Error('Missing value for the "path" argument. The argument must contain a string value');
  }

  if (!fileName || !_utils["default"].isString(fileName)) {
    throw new Error('Missing value for the "fileName" argument. The argument must contain a string value');
  }

  if (overwrite instanceof _async["default"]) {
    asyncHandler = overwrite;
    overwrite = undefined;
  }

  return toBase64(fileContent).then(function (fileContent) {
    var query = {};

    if (_utils["default"].isBoolean(overwrite)) {
      query.overwrite = overwrite;
    }

    return _this.app.request.put({
      url: "".concat(_this.app.urls.fileBinaryPath(filePath), "/").concat(sanitizeFileName(fileName)),
      query: query,
      headers: {
        'Content-Type': 'text/plain'
      },
      data: fileContent,
      asyncHandler: asyncHandler
    });
  });
}

/***/ }),

/***/ "./src/files/send.js":
/*!***************************!*\
  !*** ./src/files/send.js ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.sendFile = sendFile;

var _utils = _interopRequireDefault(__webpack_require__(/*! ../utils */ "./src/utils.js"));

var sanitizeFileName = function sanitizeFileName(fileName) {
  return encodeURIComponent(fileName).replace(/'/g, '%27').replace(/"/g, '%22');
};

function sendFile(options) {
  var url = this.app.urls.filePath(options.path) + '/' + sanitizeFileName(options.fileName);
  var query = {};

  if (_utils["default"].isBoolean(options.overwrite)) {
    query.overwrite = options.overwrite;
  }

  return this.app.request.post({
    url: url,
    query: query,
    form: {
      file: options.file
    },
    asyncHandler: options.asyncHandler
  });
}

/***/ }),

/***/ "./src/files/upload.js":
/*!*****************************!*\
  !*** ./src/files/upload.js ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.upload = upload;

var _async = _interopRequireDefault(__webpack_require__(/*! ../request/async */ "./src/request/async.js"));

var _send = __webpack_require__(/*! ./send */ "./src/files/send.js");

var getFileName = function getFileName(file) {
  if (file.name) {
    return file.name;
  }

  if (file.path) {
    var path = file.path.split('/');
    return path[path.length - 1]; //last item of the file path
  }
};
/**
 * @param {File} file
 * @param {String} filePath
 * @param {Boolean} overwrite
 * @param {Async} asyncHandler
 * @returns {Promise.<String>}
 */


function upload(file, filePath, overwrite, asyncHandler) {
  var fileName = getFileName(file);

  if (!fileName) {
    throw new Error('Wrong type of the file source object. Can not get file name');
  }

  if (overwrite instanceof _async["default"]) {
    asyncHandler = overwrite;
    overwrite = undefined;
  }

  return _send.sendFile.call(this, {
    overwrite: overwrite,
    path: filePath,
    fileName: fileName,
    file: file,
    asyncHandler: asyncHandler
  });
}

/***/ }),

/***/ "./src/files/utils.js":
/*!****************************!*\
  !*** ./src/files/utils.js ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var FilesUtils = {
  ensureSlashInPath: function ensureSlashInPath(path) {
    if (!/^\//.test(path)) {
      return '/' + path;
    }

    return path;
  }
};
var _default = FilesUtils;
exports["default"] = _default;

/***/ }),

/***/ "./src/geo/add-category.js":
/*!*********************************!*\
  !*** ./src/geo/add-category.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.addCategory = addCategory;

function addCategory(name, asyncHandler) {
  if (!name) {
    throw new Error('Category name is required.');
  }

  var result = this.app.request.put({
    url: this.app.urls.geoCategory(name),
    isAsync: !!asyncHandler,
    asyncHandler: asyncHandler
  });
  return typeof result.result === 'undefined' ? result : result.result;
}

/***/ }),

/***/ "./src/geo/cluster.js":
/*!****************************!*\
  !*** ./src/geo/cluster.js ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));

var GeoCluster = function GeoCluster(args) {
  (0, _classCallCheck2["default"])(this, GeoCluster);
  args = args || {};
  this.categories = args.categories;
  this.latitude = args.latitude;
  this.longitude = args.longitude;
  this.metadata = args.metadata;
  this.objectId = args.objectId;
  this.totalPoints = args.totalPoints;
  this.geoQuery = args.geoQuery;
  this.distance = args.distance;
};

exports["default"] = GeoCluster;

/***/ }),

/***/ "./src/geo/constants.js":
/*!******************************!*\
  !*** ./src/geo/constants.js ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.UNITS = exports.EARTH_RADIUS = void 0;
var EARTH_RADIUS = 6378100.0;
exports.EARTH_RADIUS = EARTH_RADIUS;
var UNITS = {
  METERS: 'METERS',
  KILOMETERS: 'KILOMETERS',
  MILES: 'MILES',
  YARDS: 'YARDS',
  FEET: 'FEET'
};
exports.UNITS = UNITS;

/***/ }),

/***/ "./src/geo/delete-category.js":
/*!************************************!*\
  !*** ./src/geo/delete-category.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.deleteCategory = deleteCategory;

function deleteCategory(name, asyncHandler) {
  if (!name) {
    throw new Error('Category name is required.');
  }

  var result = {};

  try {
    result = this.app.request["delete"]({
      url: this.app.urls.geoCategory(name),
      isAsync: !!asyncHandler,
      asyncHandler: asyncHandler
    });
  } catch (e) {
    if (e.statusCode === 404) {
      result = false;
    } else {
      throw e;
    }
  }

  return typeof result.result === 'undefined' ? result : result.result;
}

/***/ }),

/***/ "./src/geo/delete-point.js":
/*!*********************************!*\
  !*** ./src/geo/delete-point.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.deletePoint = deletePoint;

var _utils = _interopRequireDefault(__webpack_require__(/*! ../utils */ "./src/utils.js"));

function deletePoint(point, asyncHandler) {
  if (!point || _utils["default"].isFunction(point)) {
    throw new Error('Point argument name is required, must be string (object Id), or point object');
  }

  var pointId = _utils["default"].isString(point) ? point : point.objectId;
  var result = {};

  try {
    result = this.app.request["delete"]({
      url: this.app.urls.geoPoint(pointId),
      isAsync: !!asyncHandler,
      asyncHandler: asyncHandler
    });
  } catch (e) {
    if (e.statusCode === 404) {
      result = false;
    } else {
      throw e;
    }
  }

  return typeof result.result === 'undefined' ? result : result.result;
}

/***/ }),

/***/ "./src/geo/find-helpers.js":
/*!*********************************!*\
  !*** ./src/geo/find-helpers.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _utils = _interopRequireDefault(__webpack_require__(/*! ../utils */ "./src/utils.js"));

//TODO: refactor me
var FindHelpers = {
  searchRectangle: function searchRectangle(arg) {
    var rect = ['nwlat=' + arg[0], 'nwlon=' + arg[1], 'selat=' + arg[2], 'selon=' + arg[3]];
    return rect.join('&');
  },
  latitude: function latitude(arg) {
    return 'lat=' + arg;
  },
  longitude: function longitude(arg) {
    return 'lon=' + arg;
  },
  metadata: function metadata(arg) {
    return 'metadata=' + encodeURIComponent(JSON.stringify(arg));
  },
  units: function units(arg) {
    return 'units=' + arg;
  },
  radius: function radius(arg) {
    return 'r=' + arg;
  },
  categories: function categories(arg) {
    arg = _utils["default"].isString(arg) ? [arg] : arg;
    return 'categories=' + _utils["default"].encodeArrayToUriComponent(arg);
  },
  includeMetadata: function includeMetadata(arg) {
    return 'includemetadata=' + arg;
  },
  pageSize: function pageSize(arg) {
    if (arg < 1) {
      throw new Error('PageSize can not be less then 1');
    }

    return 'pagesize=' + arg;
  },
  offset: function offset(arg) {
    if (arg < 0) {
      throw new Error('Offset can not be less then 0');
    }

    return 'offset=' + arg;
  },
  relativeFindPercentThreshold: function relativeFindPercentThreshold(arg) {
    if (arg <= 0) {
      throw new Error('Threshold can not be less then or equal 0');
    }

    return 'relativeFindPercentThreshold=' + arg;
  },
  relativeFindMetadata: function relativeFindMetadata(arg) {
    return 'relativeFindMetadata=' + encodeURIComponent(JSON.stringify(arg));
  },
  condition: function condition(arg) {
    return 'whereClause=' + encodeURIComponent(arg);
  },
  degreePerPixel: function degreePerPixel(arg) {
    return 'dpp=' + arg;
  },
  clusterGridSize: function clusterGridSize(arg) {
    return 'clustergridsize=' + arg;
  },
  geoFence: function geoFence(arg) {
    return 'geoFence=' + arg;
  }
};
var _default = FindHelpers;
exports["default"] = _default;

/***/ }),

/***/ "./src/geo/get-categories.js":
/*!***********************************!*\
  !*** ./src/geo/get-categories.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getCategories = getCategories;

function getCategories(asyncHandler) {
  return this.app.request.get({
    url: this.app.urls.geoCategories(),
    isAsync: !!asyncHandler,
    asyncHandler: asyncHandler
  });
}

/***/ }),

/***/ "./src/geo/get-cluster-points.js":
/*!***************************************!*\
  !*** ./src/geo/get-cluster-points.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getClusterPoints = getClusterPoints;

var _async = _interopRequireDefault(__webpack_require__(/*! ../request/async */ "./src/request/async.js"));

var _cluster = _interopRequireDefault(__webpack_require__(/*! ./cluster */ "./src/geo/cluster.js"));

var _point = _interopRequireDefault(__webpack_require__(/*! ./point */ "./src/geo/point.js"));

var _query = _interopRequireDefault(__webpack_require__(/*! ./query */ "./src/geo/query.js"));

var _findHelpers = _interopRequireDefault(__webpack_require__(/*! ./find-helpers */ "./src/geo/find-helpers.js"));

function getClusterPoints(geoObject, asyncHandler) {
  if (!geoObject.objectId || !(geoObject instanceof _cluster["default"])) {
    throw new Error('Method argument must be a valid instance of GeoCluster persisted on the server');
  }

  if (!(geoObject.geoQuery instanceof _query["default"])) {
    throw new Error('Invalid GeoCluster object. ' + 'Make sure to obtain an instance of GeoCluster using the Backendless.Geo.find API');
  }

  var url = this.app.urls.geoClusterPoints(geoObject.objectId) + '?';
  var geoQuery = geoObject.geoQuery;

  for (var prop in geoQuery) {
    if (geoQuery.hasOwnProperty(prop) && _findHelpers["default"].hasOwnProperty(prop) && geoQuery[prop] != null) {
      url += '&' + _findHelpers["default"][prop](geoQuery[prop]);
    }
  }

  var responderOverride = function responderOverride(asyncHandler) {
    var success = function success(geoCollection) {
      for (var i = 0; i < geoCollection.length; i++) {
        geoCollection[i] = new _point["default"](geoCollection[i]);
      }

      asyncHandler.success(geoCollection);
    };

    var error = function error(data) {
      return asyncHandler.fault(data);
    };

    return new _async["default"](success, error);
  };

  asyncHandler = responderOverride(asyncHandler);
  return this.app.request.get({
    url: url,
    isAsync: !!asyncHandler,
    asyncHandler: asyncHandler
  });
}

/***/ }),

/***/ "./src/geo/get-points-count.js":
/*!*************************************!*\
  !*** ./src/geo/get-points-count.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getGeopointCount = getGeopointCount;

var _utils = _interopRequireDefault(__webpack_require__(/*! ../utils */ "./src/utils.js"));

var _queryValidator = __webpack_require__(/*! ./query-validator */ "./src/geo/query-validator.js");

var _queryParams = __webpack_require__(/*! ./query-params */ "./src/geo/query-params.js");

function getGeopointCount(fenceName, query, asyncHandler) {
  if (_utils["default"].isObject(fenceName)) {
    asyncHandler = query;
    query = fenceName;
    fenceName = undefined;
  }

  if (!_utils["default"].isObject(query)) {
    throw new Error('Geo query must be specified');
  }

  if (fenceName) {
    query['geoFence'] = fenceName;
  }

  (0, _queryValidator.validateQueryObject)(query);
  var url = this.app.urls.geoCount() + '?' + (0, _queryParams.toQueryParams)(query);
  return this.app.request.get({
    url: url,
    isAsync: !!asyncHandler,
    asyncHandler: asyncHandler
  });
}

/***/ }),

/***/ "./src/geo/index.js":
/*!**************************!*\
  !*** ./src/geo/index.js ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));

var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js"));

var _applyDecoratedDescriptor2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/applyDecoratedDescriptor */ "./node_modules/@babel/runtime/helpers/applyDecoratedDescriptor.js"));

var _utils = _interopRequireDefault(__webpack_require__(/*! ../utils */ "./src/utils.js"));

var _utils2 = _interopRequireDefault(__webpack_require__(/*! ./utils */ "./src/geo/utils/index.js"));

var _decorators = __webpack_require__(/*! ../decorators */ "./src/decorators/index.js");

var _constants = __webpack_require__(/*! ./constants */ "./src/geo/constants.js");

var _trackerMonitor = _interopRequireDefault(__webpack_require__(/*! ./tracker-monitor */ "./src/geo/tracker-monitor/index.js"));

var _cluster = _interopRequireDefault(__webpack_require__(/*! ./cluster */ "./src/geo/cluster.js"));

var _point = _interopRequireDefault(__webpack_require__(/*! ./point */ "./src/geo/point.js"));

var _query = _interopRequireDefault(__webpack_require__(/*! ./query */ "./src/geo/query.js"));

var _savePoint2 = __webpack_require__(/*! ./save-point */ "./src/geo/save-point.js");

var _addCategory2 = __webpack_require__(/*! ./add-category */ "./src/geo/add-category.js");

var _deleteCategory2 = __webpack_require__(/*! ./delete-category */ "./src/geo/delete-category.js");

var _getCategories2 = __webpack_require__(/*! ./get-categories */ "./src/geo/get-categories.js");

var _deletePoint2 = __webpack_require__(/*! ./delete-point */ "./src/geo/delete-point.js");

var _getPointsCount = __webpack_require__(/*! ./get-points-count */ "./src/geo/get-points-count.js");

var _getClusterPoints2 = __webpack_require__(/*! ./get-cluster-points */ "./src/geo/get-cluster-points.js");

var _loadPoints = __webpack_require__(/*! ./load-points */ "./src/geo/load-points.js");

var _loadMetadata2 = __webpack_require__(/*! ./load-metadata */ "./src/geo/load-metadata.js");

var _relativeFind2 = __webpack_require__(/*! ./relative-find */ "./src/geo/relative-find.js");

var _loadFencePoints = __webpack_require__(/*! ./load-fence-points */ "./src/geo/load-fence-points.js");

var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _dec7, _dec8, _dec9, _dec10, _dec11, _dec12, _dec13, _dec14, _dec15, _dec16, _dec17, _dec18, _dec19, _dec20, _dec21, _dec22, _dec23, _dec24, _dec25, _dec26, _dec27, _dec28, _dec29, _dec30, _dec31, _dec32, _dec33, _dec34, _class;

var alternativeForDepreciation = 'Spatial Data Types [POINT,LINESTRING,POLYGON]. ' + 'See more details here: https://backendless.com/docs/js/data_spatial_overview.html ';
var Geo = (_dec = (0, _decorators.deprecated)('Backendless.Geo', alternativeForDepreciation), _dec2 = (0, _decorators.deprecated)('Backendless.Geo', alternativeForDepreciation), _dec3 = (0, _decorators.deprecated)('Backendless.Geo', alternativeForDepreciation), _dec4 = (0, _decorators.deprecated)('Backendless.Geo', alternativeForDepreciation), _dec5 = (0, _decorators.deprecated)('Backendless.Geo', alternativeForDepreciation), _dec6 = (0, _decorators.deprecated)('Backendless.Geo', alternativeForDepreciation), _dec7 = (0, _decorators.deprecated)('Backendless.Geo', alternativeForDepreciation), _dec8 = (0, _decorators.deprecated)('Backendless.Geo', alternativeForDepreciation), _dec9 = (0, _decorators.deprecated)('Backendless.Geo', alternativeForDepreciation), _dec10 = (0, _decorators.deprecated)('Backendless.Geo', alternativeForDepreciation), _dec11 = (0, _decorators.deprecated)('Backendless.Geo', alternativeForDepreciation), _dec12 = (0, _decorators.deprecated)('Backendless.Geo', alternativeForDepreciation), _dec13 = (0, _decorators.deprecated)('Backendless.Geo', alternativeForDepreciation), _dec14 = (0, _decorators.deprecated)('Backendless.Geo', alternativeForDepreciation), _dec15 = (0, _decorators.deprecated)('Backendless.Geo', alternativeForDepreciation), _dec16 = (0, _decorators.deprecated)('Backendless.Geo', alternativeForDepreciation), _dec17 = (0, _decorators.deprecated)('Backendless.Geo', alternativeForDepreciation), _dec18 = (0, _decorators.deprecated)('Backendless.Geo', alternativeForDepreciation), _dec19 = (0, _decorators.deprecated)('Backendless.Geo', alternativeForDepreciation), _dec20 = (0, _decorators.deprecated)('Backendless.Geo', alternativeForDepreciation), _dec21 = (0, _decorators.deprecated)('Backendless.Geo', alternativeForDepreciation), _dec22 = (0, _decorators.deprecated)('Backendless.Geo', alternativeForDepreciation), _dec23 = (0, _decorators.deprecated)('Backendless.Geo', alternativeForDepreciation), _dec24 = (0, _decorators.deprecated)('Backendless.Geo'), _dec25 = (0, _decorators.deprecated)('Backendless.Geo'), _dec26 = (0, _decorators.deprecated)('Backendless.Geo'), _dec27 = (0, _decorators.deprecated)('Backendless.Geo'), _dec28 = (0, _decorators.deprecated)('Backendless.Geo'), _dec29 = (0, _decorators.deprecated)('Backendless.Geo'), _dec30 = (0, _decorators.deprecated)('Backendless.Geo'), _dec31 = (0, _decorators.deprecated)('Backendless.Geo'), _dec32 = (0, _decorators.deprecated)('Backendless.Geo'), _dec33 = (0, _decorators.deprecated)('Backendless.Geo'), _dec34 = (0, _decorators.deprecated)('Backendless.Geo'), (_class = /*#__PURE__*/function () {
  function Geo(app) {
    (0, _classCallCheck2["default"])(this, Geo);
    this.app = app;
    this.trackerMonitor = new _trackerMonitor["default"](app);
    this.EARTH_RADIUS = _constants.EARTH_RADIUS;
    this.UNITS = _constants.UNITS;
    this.Utils = _utils2["default"];
    this.Cluster = _cluster["default"];
    this.Point = _point["default"];
    this.Query = _query["default"];
  }

  (0, _createClass2["default"])(Geo, [{
    key: "addPoint",
    value: function addPoint()
    /** geopoint, async */
    {
      return this.savePoint.apply(this, arguments);
    }
  }, {
    key: "savePointSync",
    value: function savePointSync() {
      var _Utils$synchronized;

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      return (_Utils$synchronized = _utils["default"]["synchronized"](_savePoint2.savePoint)).call.apply(_Utils$synchronized, [this].concat(args));
    }
  }, {
    key: "savePoint",
    value: function savePoint() {
      var _Utils$promisified;

      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        args[_key2] = arguments[_key2];
      }

      return (_Utils$promisified = _utils["default"].promisified(_savePoint2.savePoint)).call.apply(_Utils$promisified, [this].concat(args));
    }
  }, {
    key: "findSync",
    value: function findSync() {
      var _Utils$synchronized2;

      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
        args[_key3] = arguments[_key3];
      }

      return (_Utils$synchronized2 = _utils["default"]["synchronized"](_loadPoints.loadPoints)).call.apply(_Utils$synchronized2, [this].concat(args));
    }
  }, {
    key: "find",
    value: function find() {
      var _Utils$promisified2;

      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
        args[_key4] = arguments[_key4];
      }

      return (_Utils$promisified2 = _utils["default"].promisified(_loadPoints.loadPoints)).call.apply(_Utils$promisified2, [this].concat(args));
    }
  }, {
    key: "loadMetadataSync",
    value: function loadMetadataSync() {
      var _Utils$synchronized3;

      for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {
        args[_key5] = arguments[_key5];
      }

      return (_Utils$synchronized3 = _utils["default"]["synchronized"](_loadMetadata2.loadMetadata)).call.apply(_Utils$synchronized3, [this].concat(args));
    }
  }, {
    key: "loadMetadata",
    value: function loadMetadata() {
      var _Utils$promisified3;

      for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {
        args[_key6] = arguments[_key6];
      }

      return (_Utils$promisified3 = _utils["default"].promisified(_loadMetadata2.loadMetadata)).call.apply(_Utils$promisified3, [this].concat(args));
    }
  }, {
    key: "getClusterPointsSync",
    value: function getClusterPointsSync() {
      var _Utils$synchronized4;

      for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {
        args[_key7] = arguments[_key7];
      }

      return (_Utils$synchronized4 = _utils["default"]["synchronized"](_getClusterPoints2.getClusterPoints)).call.apply(_Utils$synchronized4, [this].concat(args));
    }
  }, {
    key: "getClusterPoints",
    value: function getClusterPoints() {
      var _Utils$promisified4;

      for (var _len8 = arguments.length, args = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {
        args[_key8] = arguments[_key8];
      }

      return (_Utils$promisified4 = _utils["default"].promisified(_getClusterPoints2.getClusterPoints)).call.apply(_Utils$promisified4, [this].concat(args));
    }
  }, {
    key: "relativeFindSync",
    value: function relativeFindSync() {
      var _Utils$synchronized5;

      for (var _len9 = arguments.length, args = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {
        args[_key9] = arguments[_key9];
      }

      return (_Utils$synchronized5 = _utils["default"]["synchronized"](_relativeFind2.relativeFind)).call.apply(_Utils$synchronized5, [this].concat(args));
    }
  }, {
    key: "relativeFind",
    value: function relativeFind() {
      var _Utils$promisified5;

      for (var _len10 = arguments.length, args = new Array(_len10), _key10 = 0; _key10 < _len10; _key10++) {
        args[_key10] = arguments[_key10];
      }

      return (_Utils$promisified5 = _utils["default"].promisified(_relativeFind2.relativeFind)).call.apply(_Utils$promisified5, [this].concat(args));
    }
  }, {
    key: "addCategorySync",
    value: function addCategorySync() {
      var _Utils$synchronized6;

      for (var _len11 = arguments.length, args = new Array(_len11), _key11 = 0; _key11 < _len11; _key11++) {
        args[_key11] = arguments[_key11];
      }

      return (_Utils$synchronized6 = _utils["default"]["synchronized"](_addCategory2.addCategory)).call.apply(_Utils$synchronized6, [this].concat(args));
    }
  }, {
    key: "addCategory",
    value: function addCategory() {
      var _Utils$promisified6;

      for (var _len12 = arguments.length, args = new Array(_len12), _key12 = 0; _key12 < _len12; _key12++) {
        args[_key12] = arguments[_key12];
      }

      return (_Utils$promisified6 = _utils["default"].promisified(_addCategory2.addCategory)).call.apply(_Utils$promisified6, [this].concat(args));
    }
  }, {
    key: "getCategoriesSync",
    value: function getCategoriesSync() {
      var _Utils$synchronized7;

      for (var _len13 = arguments.length, args = new Array(_len13), _key13 = 0; _key13 < _len13; _key13++) {
        args[_key13] = arguments[_key13];
      }

      return (_Utils$synchronized7 = _utils["default"]["synchronized"](_getCategories2.getCategories)).call.apply(_Utils$synchronized7, [this].concat(args));
    }
  }, {
    key: "getCategories",
    value: function getCategories() {
      var _Utils$promisified7;

      for (var _len14 = arguments.length, args = new Array(_len14), _key14 = 0; _key14 < _len14; _key14++) {
        args[_key14] = arguments[_key14];
      }

      return (_Utils$promisified7 = _utils["default"].promisified(_getCategories2.getCategories)).call.apply(_Utils$promisified7, [this].concat(args));
    }
  }, {
    key: "deleteCategorySync",
    value: function deleteCategorySync() {
      var _Utils$synchronized8;

      for (var _len15 = arguments.length, args = new Array(_len15), _key15 = 0; _key15 < _len15; _key15++) {
        args[_key15] = arguments[_key15];
      }

      return (_Utils$synchronized8 = _utils["default"]["synchronized"](_deleteCategory2.deleteCategory)).call.apply(_Utils$synchronized8, [this].concat(args));
    }
  }, {
    key: "deleteCategory",
    value: function deleteCategory() {
      var _Utils$promisified8;

      for (var _len16 = arguments.length, args = new Array(_len16), _key16 = 0; _key16 < _len16; _key16++) {
        args[_key16] = arguments[_key16];
      }

      return (_Utils$promisified8 = _utils["default"].promisified(_deleteCategory2.deleteCategory)).call.apply(_Utils$promisified8, [this].concat(args));
    }
  }, {
    key: "deletePointSync",
    value: function deletePointSync() {
      var _Utils$synchronized9;

      for (var _len17 = arguments.length, args = new Array(_len17), _key17 = 0; _key17 < _len17; _key17++) {
        args[_key17] = arguments[_key17];
      }

      return (_Utils$synchronized9 = _utils["default"]["synchronized"](_deletePoint2.deletePoint)).call.apply(_Utils$synchronized9, [this].concat(args));
    }
  }, {
    key: "deletePoint",
    value: function deletePoint() {
      var _Utils$promisified9;

      for (var _len18 = arguments.length, args = new Array(_len18), _key18 = 0; _key18 < _len18; _key18++) {
        args[_key18] = arguments[_key18];
      }

      return (_Utils$promisified9 = _utils["default"].promisified(_deletePoint2.deletePoint)).call.apply(_Utils$promisified9, [this].concat(args));
    }
  }, {
    key: "getFencePointsSync",
    value: function getFencePointsSync() {
      var _Utils$synchronized10;

      for (var _len19 = arguments.length, args = new Array(_len19), _key19 = 0; _key19 < _len19; _key19++) {
        args[_key19] = arguments[_key19];
      }

      return (_Utils$synchronized10 = _utils["default"]["synchronized"](_loadFencePoints.loadFencePoints)).call.apply(_Utils$synchronized10, [this].concat(args));
    }
  }, {
    key: "getFencePoints",
    value: function getFencePoints() {
      var _Utils$promisified10;

      for (var _len20 = arguments.length, args = new Array(_len20), _key20 = 0; _key20 < _len20; _key20++) {
        args[_key20] = arguments[_key20];
      }

      return (_Utils$promisified10 = _utils["default"].promisified(_loadFencePoints.loadFencePoints)).call.apply(_Utils$promisified10, [this].concat(args));
    }
  }, {
    key: "getGeopointCountSync",
    value: function getGeopointCountSync() {
      var _Utils$synchronized11;

      for (var _len21 = arguments.length, args = new Array(_len21), _key21 = 0; _key21 < _len21; _key21++) {
        args[_key21] = arguments[_key21];
      }

      return (_Utils$synchronized11 = _utils["default"]["synchronized"](_getPointsCount.getGeopointCount)).call.apply(_Utils$synchronized11, [this].concat(args));
    }
  }, {
    key: "getGeopointCount",
    value: function getGeopointCount() {
      var _Utils$promisified11;

      for (var _len22 = arguments.length, args = new Array(_len22), _key22 = 0; _key22 < _len22; _key22++) {
        args[_key22] = arguments[_key22];
      }

      return (_Utils$promisified11 = _utils["default"].promisified(_getPointsCount.getGeopointCount)).call.apply(_Utils$promisified11, [this].concat(args));
    }
  }, {
    key: "runOnEnterActionSync",
    value: function runOnEnterActionSync() {
      var _this$trackerMonitor;

      return (_this$trackerMonitor = this.trackerMonitor).runOnEnterActionSync.apply(_this$trackerMonitor, arguments);
    }
  }, {
    key: "runOnEnterAction",
    value: function runOnEnterAction() {
      var _this$trackerMonitor2;

      return (_this$trackerMonitor2 = this.trackerMonitor).runOnEnterAction.apply(_this$trackerMonitor2, arguments);
    }
  }, {
    key: "runOnStayActionSync",
    value: function runOnStayActionSync() {
      var _this$trackerMonitor3;

      return (_this$trackerMonitor3 = this.trackerMonitor).runOnStayActionSync.apply(_this$trackerMonitor3, arguments);
    }
  }, {
    key: "runOnStayAction",
    value: function runOnStayAction() {
      var _this$trackerMonitor4;

      return (_this$trackerMonitor4 = this.trackerMonitor).runOnStayAction.apply(_this$trackerMonitor4, arguments);
    }
  }, {
    key: "runOnExitActionSync",
    value: function runOnExitActionSync() {
      var _this$trackerMonitor5;

      return (_this$trackerMonitor5 = this.trackerMonitor).runOnExitActionSync.apply(_this$trackerMonitor5, arguments);
    }
  }, {
    key: "runOnExitAction",
    value: function runOnExitAction() {
      var _this$trackerMonitor6;

      return (_this$trackerMonitor6 = this.trackerMonitor).runOnExitAction.apply(_this$trackerMonitor6, arguments);
    }
  }, {
    key: "startGeofenceMonitoringWithInAppCallbackSync",
    value: function startGeofenceMonitoringWithInAppCallbackSync() {
      var _this$trackerMonitor7;

      return (_this$trackerMonitor7 = this.trackerMonitor).startGeofenceMonitoringWithInAppCallbackSync.apply(_this$trackerMonitor7, arguments);
    }
  }, {
    key: "startGeofenceMonitoringWithInAppCallback",
    value: function startGeofenceMonitoringWithInAppCallback() {
      var _this$trackerMonitor8;

      return (_this$trackerMonitor8 = this.trackerMonitor).startGeofenceMonitoringWithInAppCallback.apply(_this$trackerMonitor8, arguments);
    }
  }, {
    key: "startGeofenceMonitoringWithRemoteCallbackSync",
    value: function startGeofenceMonitoringWithRemoteCallbackSync() {
      var _this$trackerMonitor9;

      return (_this$trackerMonitor9 = this.trackerMonitor).startGeofenceMonitoringWithRemoteCallbackSync.apply(_this$trackerMonitor9, arguments);
    }
  }, {
    key: "startGeofenceMonitoringWithRemoteCallback",
    value: function startGeofenceMonitoringWithRemoteCallback() {
      var _this$trackerMonitor10;

      return (_this$trackerMonitor10 = this.trackerMonitor).startGeofenceMonitoringWithRemoteCallback.apply(_this$trackerMonitor10, arguments);
    }
  }, {
    key: "stopGeofenceMonitoring",
    value: function stopGeofenceMonitoring() {
      var _this$trackerMonitor11;

      return (_this$trackerMonitor11 = this.trackerMonitor).stopGeofenceMonitoring.apply(_this$trackerMonitor11, arguments);
    }
  }, {
    key: "resetGeofenceMonitoring",
    value: function resetGeofenceMonitoring() {
      var _this$trackerMonitor12;

      return (_this$trackerMonitor12 = this.trackerMonitor).reset.apply(_this$trackerMonitor12, arguments);
    }
  }]);
  return Geo;
}(), ((0, _applyDecoratedDescriptor2["default"])(_class.prototype, "addPoint", [_dec], Object.getOwnPropertyDescriptor(_class.prototype, "addPoint"), _class.prototype), (0, _applyDecoratedDescriptor2["default"])(_class.prototype, "savePointSync", [_dec2], Object.getOwnPropertyDescriptor(_class.prototype, "savePointSync"), _class.prototype), (0, _applyDecoratedDescriptor2["default"])(_class.prototype, "savePoint", [_dec3], Object.getOwnPropertyDescriptor(_class.prototype, "savePoint"), _class.prototype), (0, _applyDecoratedDescriptor2["default"])(_class.prototype, "findSync", [_dec4], Object.getOwnPropertyDescriptor(_class.prototype, "findSync"), _class.prototype), (0, _applyDecoratedDescriptor2["default"])(_class.prototype, "find", [_dec5], Object.getOwnPropertyDescriptor(_class.prototype, "find"), _class.prototype), (0, _applyDecoratedDescriptor2["default"])(_class.prototype, "loadMetadataSync", [_dec6], Object.getOwnPropertyDescriptor(_class.prototype, "loadMetadataSync"), _class.prototype), (0, _applyDecoratedDescriptor2["default"])(_class.prototype, "loadMetadata", [_dec7], Object.getOwnPropertyDescriptor(_class.prototype, "loadMetadata"), _class.prototype), (0, _applyDecoratedDescriptor2["default"])(_class.prototype, "getClusterPointsSync", [_dec8], Object.getOwnPropertyDescriptor(_class.prototype, "getClusterPointsSync"), _class.prototype), (0, _applyDecoratedDescriptor2["default"])(_class.prototype, "getClusterPoints", [_dec9], Object.getOwnPropertyDescriptor(_class.prototype, "getClusterPoints"), _class.prototype), (0, _applyDecoratedDescriptor2["default"])(_class.prototype, "relativeFindSync", [_dec10], Object.getOwnPropertyDescriptor(_class.prototype, "relativeFindSync"), _class.prototype), (0, _applyDecoratedDescriptor2["default"])(_class.prototype, "relativeFind", [_dec11], Object.getOwnPropertyDescriptor(_class.prototype, "relativeFind"), _class.prototype), (0, _applyDecoratedDescriptor2["default"])(_class.prototype, "addCategorySync", [_dec12], Object.getOwnPropertyDescriptor(_class.prototype, "addCategorySync"), _class.prototype), (0, _applyDecoratedDescriptor2["default"])(_class.prototype, "addCategory", [_dec13], Object.getOwnPropertyDescriptor(_class.prototype, "addCategory"), _class.prototype), (0, _applyDecoratedDescriptor2["default"])(_class.prototype, "getCategoriesSync", [_dec14], Object.getOwnPropertyDescriptor(_class.prototype, "getCategoriesSync"), _class.prototype), (0, _applyDecoratedDescriptor2["default"])(_class.prototype, "getCategories", [_dec15], Object.getOwnPropertyDescriptor(_class.prototype, "getCategories"), _class.prototype), (0, _applyDecoratedDescriptor2["default"])(_class.prototype, "deleteCategorySync", [_dec16], Object.getOwnPropertyDescriptor(_class.prototype, "deleteCategorySync"), _class.prototype), (0, _applyDecoratedDescriptor2["default"])(_class.prototype, "deleteCategory", [_dec17], Object.getOwnPropertyDescriptor(_class.prototype, "deleteCategory"), _class.prototype), (0, _applyDecoratedDescriptor2["default"])(_class.prototype, "deletePointSync", [_dec18], Object.getOwnPropertyDescriptor(_class.prototype, "deletePointSync"), _class.prototype), (0, _applyDecoratedDescriptor2["default"])(_class.prototype, "deletePoint", [_dec19], Object.getOwnPropertyDescriptor(_class.prototype, "deletePoint"), _class.prototype), (0, _applyDecoratedDescriptor2["default"])(_class.prototype, "getFencePointsSync", [_dec20], Object.getOwnPropertyDescriptor(_class.prototype, "getFencePointsSync"), _class.prototype), (0, _applyDecoratedDescriptor2["default"])(_class.prototype, "getFencePoints", [_dec21], Object.getOwnPropertyDescriptor(_class.prototype, "getFencePoints"), _class.prototype), (0, _applyDecoratedDescriptor2["default"])(_class.prototype, "getGeopointCountSync", [_dec22], Object.getOwnPropertyDescriptor(_class.prototype, "getGeopointCountSync"), _class.prototype), (0, _applyDecoratedDescriptor2["default"])(_class.prototype, "getGeopointCount", [_dec23], Object.getOwnPropertyDescriptor(_class.prototype, "getGeopointCount"), _class.prototype), (0, _applyDecoratedDescriptor2["default"])(_class.prototype, "runOnEnterActionSync", [_dec24], Object.getOwnPropertyDescriptor(_class.prototype, "runOnEnterActionSync"), _class.prototype), (0, _applyDecoratedDescriptor2["default"])(_class.prototype, "runOnEnterAction", [_dec25], Object.getOwnPropertyDescriptor(_class.prototype, "runOnEnterAction"), _class.prototype), (0, _applyDecoratedDescriptor2["default"])(_class.prototype, "runOnStayActionSync", [_dec26], Object.getOwnPropertyDescriptor(_class.prototype, "runOnStayActionSync"), _class.prototype), (0, _applyDecoratedDescriptor2["default"])(_class.prototype, "runOnStayAction", [_dec27], Object.getOwnPropertyDescriptor(_class.prototype, "runOnStayAction"), _class.prototype), (0, _applyDecoratedDescriptor2["default"])(_class.prototype, "runOnExitActionSync", [_dec28], Object.getOwnPropertyDescriptor(_class.prototype, "runOnExitActionSync"), _class.prototype), (0, _applyDecoratedDescriptor2["default"])(_class.prototype, "runOnExitAction", [_dec29], Object.getOwnPropertyDescriptor(_class.prototype, "runOnExitAction"), _class.prototype), (0, _applyDecoratedDescriptor2["default"])(_class.prototype, "startGeofenceMonitoringWithInAppCallbackSync", [_dec30], Object.getOwnPropertyDescriptor(_class.prototype, "startGeofenceMonitoringWithInAppCallbackSync"), _class.prototype), (0, _applyDecoratedDescriptor2["default"])(_class.prototype, "startGeofenceMonitoringWithInAppCallback", [_dec31], Object.getOwnPropertyDescriptor(_class.prototype, "startGeofenceMonitoringWithInAppCallback"), _class.prototype), (0, _applyDecoratedDescriptor2["default"])(_class.prototype, "startGeofenceMonitoringWithRemoteCallbackSync", [_dec32], Object.getOwnPropertyDescriptor(_class.prototype, "startGeofenceMonitoringWithRemoteCallbackSync"), _class.prototype), (0, _applyDecoratedDescriptor2["default"])(_class.prototype, "startGeofenceMonitoringWithRemoteCallback", [_dec33], Object.getOwnPropertyDescriptor(_class.prototype, "startGeofenceMonitoringWithRemoteCallback"), _class.prototype), (0, _applyDecoratedDescriptor2["default"])(_class.prototype, "stopGeofenceMonitoring", [_dec34], Object.getOwnPropertyDescriptor(_class.prototype, "stopGeofenceMonitoring"), _class.prototype)), _class));
exports["default"] = Geo;

/***/ }),

/***/ "./src/geo/load-fence-points.js":
/*!**************************************!*\
  !*** ./src/geo/load-fence-points.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.loadFencePoints = loadFencePoints;

var _query = _interopRequireDefault(__webpack_require__(/*! ./query */ "./src/geo/query.js"));

var _loadItems = __webpack_require__(/*! ./load-items */ "./src/geo/load-items.js");

function loadFencePoints(geoFenceName, query, asyncHandler) {
  query = query || new _query["default"]();
  query.geoFence = geoFenceName;
  query.url = this.app.urls.geo();
  return _loadItems.loadItems.call(this, query, asyncHandler);
}

/***/ }),

/***/ "./src/geo/load-items.js":
/*!*******************************!*\
  !*** ./src/geo/load-items.js ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.loadItems = loadItems;

var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));

var _utils = _interopRequireDefault(__webpack_require__(/*! ../utils */ "./src/utils.js"));

var _cluster = _interopRequireDefault(__webpack_require__(/*! ./cluster */ "./src/geo/cluster.js"));

var _point = _interopRequireDefault(__webpack_require__(/*! ./point */ "./src/geo/point.js"));

var _queryValidator = __webpack_require__(/*! ./query-validator */ "./src/geo/query-validator.js");

var _queryParams = __webpack_require__(/*! ./query-params */ "./src/geo/query-params.js");

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

//TODO: refactor me
function loadItems(query, asyncHandler) {
  (0, _queryValidator.validateQueryObject)(query);
  var url = query.url + (query.searchRectangle ? '/rect' : '/points') + '?' + (0, _queryParams.toQueryParams)(query);

  if (asyncHandler) {
    asyncHandler = _utils["default"].wrapAsync(asyncHandler, function (resp) {
      return responseParser(resp, query);
    });
  }

  var result = this.app.request.get({
    url: url,
    isAsync: !!asyncHandler,
    asyncHandler: asyncHandler
  });

  if (asyncHandler) {
    return result;
  }

  return responseParser(result, query);
}

function responseParser(resp, geoQuery) {
  return resp.map(function (geoObject) {
    var GeoItem = geoObject.hasOwnProperty('totalPoints') ? _cluster["default"] : _point["default"];
    return new GeoItem(_objectSpread(_objectSpread({}, geoObject), {}, {
      geoQuery: geoQuery
    }));
  });
}

/***/ }),

/***/ "./src/geo/load-metadata.js":
/*!**********************************!*\
  !*** ./src/geo/load-metadata.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.loadMetadata = loadMetadata;

var _cluster = _interopRequireDefault(__webpack_require__(/*! ./cluster */ "./src/geo/cluster.js"));

var _point = _interopRequireDefault(__webpack_require__(/*! ./point */ "./src/geo/point.js"));

var _query = _interopRequireDefault(__webpack_require__(/*! ./query */ "./src/geo/query.js"));

var _findHelpers = _interopRequireDefault(__webpack_require__(/*! ./find-helpers */ "./src/geo/find-helpers.js"));

//TODO: refactor me
function loadMetadata(geoObject, asyncHandler) {
  var isCluster = geoObject instanceof _cluster["default"];
  var isPoint = geoObject instanceof _point["default"];

  if (!geoObject.objectId || !isCluster && !isPoint) {
    throw new Error('Method argument must be a valid instance of GeoPoint or GeoCluster persisted on the server');
  }

  var url = this.app.urls.geoPointMetaData(geoObject.objectId);

  if (isCluster) {
    var geoQuery = geoObject.geoQuery;

    if (!(geoQuery instanceof _query["default"])) {
      throw new Error('Invalid GeoCluster object. ' + 'Make sure to obtain an instance of GeoCluster using the Backendless.Geo.find API');
    }

    url += '?';

    for (var prop in geoQuery) {
      if (geoQuery.hasOwnProperty(prop) && _findHelpers["default"].hasOwnProperty(prop) && geoQuery[prop] != null) {
        url += '&' + _findHelpers["default"][prop](geoQuery[prop]);
      }
    }
  }

  return this.app.request.get({
    url: url,
    isAsync: !!asyncHandler,
    asyncHandler: asyncHandler
  });
}

/***/ }),

/***/ "./src/geo/load-points.js":
/*!********************************!*\
  !*** ./src/geo/load-points.js ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.loadPoints = loadPoints;

var _loadItems = __webpack_require__(/*! ./load-items */ "./src/geo/load-items.js");

function loadPoints(query, asyncHandler) {
  query.url = this.app.urls.geo();
  return _loadItems.loadItems.call(this, query, asyncHandler);
}

/***/ }),

/***/ "./src/geo/point.js":
/*!**************************!*\
  !*** ./src/geo/point.js ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));

var GeoPoint = function GeoPoint(args) {
  (0, _classCallCheck2["default"])(this, GeoPoint);
  args = args || {};
  this.___class = 'GeoPoint';
  this.categories = args.categories;
  this.latitude = args.latitude;
  this.longitude = args.longitude;
  this.metadata = args.metadata;
  this.objectId = args.objectId;
  this.distance = args.distance;
};

exports["default"] = GeoPoint;

/***/ }),

/***/ "./src/geo/query-params.js":
/*!*********************************!*\
  !*** ./src/geo/query-params.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.toQueryParams = toQueryParams;

var _findHelpers = _interopRequireDefault(__webpack_require__(/*! ./find-helpers */ "./src/geo/find-helpers.js"));

//TODO: refactor me
function toQueryParams(query) {
  var params = [];

  for (var prop in query) {
    if (query.hasOwnProperty(prop) && _findHelpers["default"].hasOwnProperty(prop) && query[prop] != null) {
      params.push(_findHelpers["default"][prop](query[prop]));
    }
  }

  return params.join('&');
}

/***/ }),

/***/ "./src/geo/query-validator.js":
/*!************************************!*\
  !*** ./src/geo/query-validator.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.validateQueryObject = validateQueryObject;

var _utils = _interopRequireDefault(__webpack_require__(/*! ../utils */ "./src/utils.js"));

//TODO: refactor me
function validateQueryObject(query) {
  if (query.geoFence !== undefined && !_utils["default"].isString(query.geoFence)) {
    throw new Error('Invalid value for argument "geoFenceName". Geo Fence Name must be a String');
  }

  if (query.searchRectangle && query.radius) {
    throw new Error('Inconsistent geo query. Query should not contain both rectangle and radius search parameters.');
  }

  if (query.radius && (query.latitude === undefined || query.longitude === undefined)) {
    throw new Error('Latitude and longitude should be provided to search in radius');
  }

  if ((query.relativeFindMetadata || query.relativeFindPercentThreshold) && !(query.relativeFindMetadata && query.relativeFindPercentThreshold)) {
    throw new Error('Inconsistent geo query. ' + 'Query should contain both relativeFindPercentThreshold and relativeFindMetadata or none of them');
  }
}

/***/ }),

/***/ "./src/geo/query.js":
/*!**************************!*\
  !*** ./src/geo/query.js ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));

var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js"));

var GeoQuery = /*#__PURE__*/function () {
  function GeoQuery(args) {
    (0, _classCallCheck2["default"])(this, GeoQuery);
    args = args || {};
    this.searchRectangle = args.searchRectangle || undefined;
    this.categories = args.categories || [];
    this.includeMetadata = args.includeMetadata || true;
    this.metadata = args.metadata || undefined;
    this.condition = args.condition || undefined;
    this.relativeFindMetadata = args.relativeFindMetadata || undefined;
    this.relativeFindPercentThreshold = args.relativeFindPercentThreshold || undefined;
    this.pageSize = args.pageSize || undefined;
    this.latitude = args.latitude || undefined;
    this.longitude = args.longitude || undefined;
    this.radius = args.radius || undefined;
    this.units = args.units || undefined;
    this.degreePerPixel = args.degreePerPixel || undefined;
    this.clusterGridSize = args.clusterGridSize || undefined;
  }

  (0, _createClass2["default"])(GeoQuery, [{
    key: "addCategory",
    value: function addCategory(category) {
      this.categories = this.categories || [];
      this.categories.push(category);
    }
  }, {
    key: "setClusteringParams",
    value: function setClusteringParams(westLongitude, eastLongitude, mapWidth, clusterGridSize) {
      clusterGridSize = clusterGridSize || 0;
      var parsedWestLongitude = parseFloat(westLongitude);
      var parsedEastLongitude = parseFloat(eastLongitude);
      var parsedMapWidth = parseInt(mapWidth);
      var parsedClusterGridSize = parseInt(clusterGridSize);

      if (!isFinite(parsedWestLongitude) || parsedWestLongitude < -180 || parsedWestLongitude > 180) {
        throw new Error('The westLongitude value must be a number in the range between -180 and 180');
      }

      if (!isFinite(parsedEastLongitude) || parsedEastLongitude < -180 || parsedEastLongitude > 180) {
        throw new Error('The eastLongitude value must be a number in the range between -180 and 180');
      }

      if (!isFinite(parsedMapWidth) || parsedMapWidth < 1) {
        throw new Error('The mapWidth value must be a number greater or equal to 1');
      }

      if (!isFinite(parsedClusterGridSize) || parsedClusterGridSize < 0) {
        throw new Error('The clusterGridSize value must be a number greater or equal to 0');
      }

      var longDiff = parsedEastLongitude - parsedWestLongitude;

      if (longDiff < 0) {
        longDiff += 360;
      }

      this.degreePerPixel = longDiff / parsedMapWidth;
      this.clusterGridSize = parsedClusterGridSize || null;
    }
  }]);
  return GeoQuery;
}();

exports["default"] = GeoQuery;

/***/ }),

/***/ "./src/geo/relative-find.js":
/*!**********************************!*\
  !*** ./src/geo/relative-find.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.relativeFind = relativeFind;

var _urls = _interopRequireDefault(__webpack_require__(/*! ../urls */ "./src/urls.js"));

var _utils = _interopRequireDefault(__webpack_require__(/*! ../utils */ "./src/utils.js"));

var _request = _interopRequireDefault(__webpack_require__(/*! ../request */ "./src/request/index.js"));

var _point = _interopRequireDefault(__webpack_require__(/*! ./point */ "./src/geo/point.js"));

var _queryValidator = __webpack_require__(/*! ./query-validator */ "./src/geo/query-validator.js");

var _queryParams = __webpack_require__(/*! ./query-params */ "./src/geo/query-params.js");

//TODO: refactor me
function relativeFind(query, asyncHandler) {
  if (!(query.relativeFindMetadata && query.relativeFindPercentThreshold)) {
    throw new Error('Inconsistent geo query. ' + 'Query should contain both relativeFindPercentThreshold and relativeFindMetadata');
  }

  (0, _queryValidator.validateQueryObject)(query);
  query.url = this.app.urls.geoRelative();
  var url = query.url + (query.searchRectangle ? '/rect' : '/points') + '?' + (0, _queryParams.toQueryParams)(query);

  if (asyncHandler) {
    asyncHandler = _utils["default"].wrapAsync(asyncHandler, function (resp) {
      return responseParser(resp);
    });
  }

  var result = this.app.request.get({
    url: url,
    isAsync: !!asyncHandler,
    asyncHandler: asyncHandler
  });

  if (asyncHandler) {
    return result;
  }

  return responseParser(result);
}

function responseParser(items) {
  return items.map(function (item) {
    return {
      geoPoint: new _point["default"](item.geoPoint),
      matches: item.matches
    };
  });
}

/***/ }),

/***/ "./src/geo/save-point.js":
/*!*******************************!*\
  !*** ./src/geo/save-point.js ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.savePoint = savePoint;

var _utils = _interopRequireDefault(__webpack_require__(/*! ../utils */ "./src/utils.js"));

var _point = _interopRequireDefault(__webpack_require__(/*! ./point */ "./src/geo/point.js"));

function savePoint(geoPoint, asyncHandler) {
  if (!_utils["default"].isNumber(geoPoint.latitude) || !_utils["default"].isNumber(geoPoint.longitude)) {
    throw new Error('Latitude or longitude not a number');
  }

  geoPoint.categories = _utils["default"].castArray(geoPoint.categories || ['Default']);

  if (asyncHandler) {
    asyncHandler = _utils["default"].wrapAsync(asyncHandler, parseResponse);
  }

  var method = geoPoint.objectId ? this.app.request.Methods.PATCH : this.app.request.Methods.POST;
  var url = geoPoint.objectId ? this.app.urls.geoPoint(geoPoint.objectId) : this.app.urls.geoPoints();
  var result = this.app.request.send({
    method: method,
    url: url,
    data: geoPoint,
    isAsync: !!asyncHandler,
    asyncHandler: asyncHandler
  });

  if (asyncHandler) {
    return result;
  }

  return parseResponse(result);
}

function parseResponse(resp) {
  var geoPoint = new _point["default"]();
  geoPoint.categories = resp.geopoint.categories;
  geoPoint.latitude = resp.geopoint.latitude;
  geoPoint.longitude = resp.geopoint.longitude;
  geoPoint.metadata = resp.geopoint.metadata;
  geoPoint.objectId = resp.geopoint.objectId;
  return geoPoint;
}

/***/ }),

/***/ "./src/geo/tracker-monitor/fence-actions.js":
/*!**************************************************!*\
  !*** ./src/geo/tracker-monitor/fence-actions.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));

var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js"));

var _utils = _interopRequireDefault(__webpack_require__(/*! ../../utils */ "./src/utils.js"));

var _async = _interopRequireDefault(__webpack_require__(/*! ../../request/async */ "./src/request/async.js"));

var _point = _interopRequireDefault(__webpack_require__(/*! ../point */ "./src/geo/point.js"));

//TODO: refactor me
var GeoFenceActions = /*#__PURE__*/function () {
  function GeoFenceActions(app) {
    (0, _classCallCheck2["default"])(this, GeoFenceActions);
    this.app = app;
  }

  (0, _createClass2["default"])(GeoFenceActions, [{
    key: "run",
    value: function run(action, geoFenceName, geoPoint, asyncHandler) {
      if (geoPoint instanceof _async["default"]) {
        asyncHandler = geoPoint;
        geoPoint = undefined;
      }

      if (!_utils["default"].isString(geoFenceName)) {
        throw new Error("Invalid value for parameter 'geoFenceName'. Geo Fence Name must be a String");
      }

      if (geoPoint && !(geoPoint instanceof _point["default"]) && !geoPoint.objectId) {
        throw new Error('Method argument must be a valid instance of GeoPoint persisted on the server');
      }

      return this.app.request.post({
        url: this.app.urls.geoFence(action, geoFenceName),
        isAsync: !!asyncHandler,
        data: geoPoint,
        asyncHandler: asyncHandler
      });
    }
  }, {
    key: "enter",
    value: function enter(geoFenceName, geoPoint, asyncHandler) {
      return this.run('onenter', geoFenceName, geoPoint, asyncHandler);
    }
  }, {
    key: "stay",
    value: function stay(geoFenceName, geoPoint, asyncHandler) {
      return this.run('onstay', geoFenceName, geoPoint, asyncHandler);
    }
  }, {
    key: "exit",
    value: function exit(geoFenceName, geoPoint, asyncHandler) {
      return this.run('onexit', geoFenceName, geoPoint, asyncHandler);
    }
  }]);
  return GeoFenceActions;
}();

exports["default"] = GeoFenceActions;

/***/ }),

/***/ "./src/geo/tracker-monitor/index.js":
/*!******************************************!*\
  !*** ./src/geo/tracker-monitor/index.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));

var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js"));

var _utils = _interopRequireDefault(__webpack_require__(/*! ../../utils */ "./src/utils.js"));

var _tracker = _interopRequireDefault(__webpack_require__(/*! ./tracker */ "./src/geo/tracker-monitor/tracker.js"));

var _fenceActions = _interopRequireDefault(__webpack_require__(/*! ./fence-actions */ "./src/geo/tracker-monitor/fence-actions.js"));

var _startMonitoring = _interopRequireDefault(__webpack_require__(/*! ./start-monitoring */ "./src/geo/tracker-monitor/start-monitoring.js"));

var _stopMonitoring = _interopRequireDefault(__webpack_require__(/*! ./stop-monitoring */ "./src/geo/tracker-monitor/stop-monitoring.js"));

var GeoTrackerMonitor = /*#__PURE__*/function () {
  function GeoTrackerMonitor(app) {
    (0, _classCallCheck2["default"])(this, GeoTrackerMonitor);
    this.app = app;
    this.geoFenceActions = new _fenceActions["default"](app);
    this.reset();
  }

  (0, _createClass2["default"])(GeoTrackerMonitor, [{
    key: "reset",
    value: function reset() {
      delete this.geoTracker;
      this.geoTracker = new _tracker["default"]();
    }
  }, {
    key: "runOnEnterAction",
    value: function runOnEnterAction() {
      var _Utils$promisified;

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      return (_Utils$promisified = _utils["default"].promisified(this.geoFenceActions.enter)).call.apply(_Utils$promisified, [this.geoFenceActions].concat(args));
    }
  }, {
    key: "runOnEnterActionSync",
    value: function runOnEnterActionSync() {
      var _Utils$synchronized;

      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        args[_key2] = arguments[_key2];
      }

      return (_Utils$synchronized = _utils["default"]["synchronized"](this.geoFenceActions.enter)).call.apply(_Utils$synchronized, [this.geoFenceActions].concat(args));
    }
  }, {
    key: "runOnStayAction",
    value: function runOnStayAction() {
      var _Utils$promisified2;

      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
        args[_key3] = arguments[_key3];
      }

      return (_Utils$promisified2 = _utils["default"].promisified(this.geoFenceActions.stay)).call.apply(_Utils$promisified2, [this.geoFenceActions].concat(args));
    }
  }, {
    key: "runOnStayActionSync",
    value: function runOnStayActionSync() {
      var _Utils$synchronized2;

      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
        args[_key4] = arguments[_key4];
      }

      return (_Utils$synchronized2 = _utils["default"]["synchronized"](this.geoFenceActions.stay)).call.apply(_Utils$synchronized2, [this.geoFenceActions].concat(args));
    }
  }, {
    key: "runOnExitAction",
    value: function runOnExitAction() {
      var _Utils$promisified3;

      for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {
        args[_key5] = arguments[_key5];
      }

      return (_Utils$promisified3 = _utils["default"].promisified(this.geoFenceActions.exit)).call.apply(_Utils$promisified3, [this.geoFenceActions].concat(args));
    }
  }, {
    key: "runOnExitActionSync",
    value: function runOnExitActionSync() {
      var _Utils$synchronized3;

      for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {
        args[_key6] = arguments[_key6];
      }

      return (_Utils$synchronized3 = _utils["default"]["synchronized"](this.geoFenceActions.exit)).call.apply(_Utils$synchronized3, [this.geoFenceActions].concat(args));
    }
  }, {
    key: "startGeofenceMonitoringWithInAppCallback",
    value: function startGeofenceMonitoringWithInAppCallback() {
      var _Utils$promisified4;

      for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {
        args[_key7] = arguments[_key7];
      }

      return (_Utils$promisified4 = _utils["default"].promisified(_startMonitoring["default"])).call.apply(_Utils$promisified4, [this].concat(args));
    }
  }, {
    key: "startGeofenceMonitoringWithInAppCallbackSync",
    value: function startGeofenceMonitoringWithInAppCallbackSync() {
      var _Utils$synchronized4;

      for (var _len8 = arguments.length, args = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {
        args[_key8] = arguments[_key8];
      }

      return (_Utils$synchronized4 = _utils["default"]["synchronized"](_startMonitoring["default"])).call.apply(_Utils$synchronized4, [this].concat(args));
    }
  }, {
    key: "startGeofenceMonitoringWithRemoteCallback",
    value: function startGeofenceMonitoringWithRemoteCallback() {
      var _Utils$promisified5;

      for (var _len9 = arguments.length, args = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {
        args[_key9] = arguments[_key9];
      }

      return (_Utils$promisified5 = _utils["default"].promisified(_startMonitoring["default"])).call.apply(_Utils$promisified5, [this].concat(args));
    }
  }, {
    key: "startGeofenceMonitoringWithRemoteCallbackSync",
    value: function startGeofenceMonitoringWithRemoteCallbackSync() {
      var _Utils$synchronized5;

      for (var _len10 = arguments.length, args = new Array(_len10), _key10 = 0; _key10 < _len10; _key10++) {
        args[_key10] = arguments[_key10];
      }

      return (_Utils$synchronized5 = _utils["default"]["synchronized"](_startMonitoring["default"])).call.apply(_Utils$synchronized5, [this].concat(args));
    }
  }, {
    key: "stopGeofenceMonitoring",
    value: function stopGeofenceMonitoring() {
      for (var _len11 = arguments.length, args = new Array(_len11), _key11 = 0; _key11 < _len11; _key11++) {
        args[_key11] = arguments[_key11];
      }

      return _stopMonitoring["default"].call.apply(_stopMonitoring["default"], [this].concat(args));
    }
  }, {
    key: "getFences",
    value: function getFences(geoFence) {
      return this.app.request.get({
        url: this.app.urls.geoFences(geoFence)
      });
    }
  }]);
  return GeoTrackerMonitor;
}();

exports["default"] = GeoTrackerMonitor;

/***/ }),

/***/ "./src/geo/tracker-monitor/start-monitoring.js":
/*!*****************************************************!*\
  !*** ./src/geo/tracker-monitor/start-monitoring.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = startMonitoring;

var _point = _interopRequireDefault(__webpack_require__(/*! ../point */ "./src/geo/point.js"));

var _utils = _interopRequireDefault(__webpack_require__(/*! ../utils */ "./src/geo/utils/index.js"));

var INTERVAL = 5000; //TODO: refactor me

function isDefiniteRect(nwPoint, sePoint) {
  return nwPoint != null && sePoint != null;
}

var TypesMapper = {
  'RECT': function RECT(fence) {
    fence.nwPoint = fence.nodes[0];
    fence.sePoint = fence.nodes[1];
  },
  'CIRCLE': function CIRCLE(fence) {
    var outRect = _utils["default"].getOutRectangle(fence.nodes[0], fence.nodes[1]);

    fence.nwPoint = {
      latitude: outRect[0],
      longitude: outRect[1]
    };
    fence.sePoint = {
      latitude: outRect[2],
      longitude: outRect[3]
    };
  },
  'SHAPE': function SHAPE(fence) {
    var outRect = _utils["default"].getOutRectangle(fence.nodes[0], fence.nodes[1]);

    fence.nwPoint = {
      latitude: outRect[0],
      longitude: outRect[1]
    };
    fence.sePoint = {
      latitude: outRect[2],
      longitude: outRect[3]
    };
  }
};
/**
 * @param {GeoTracker} tracker
 * @param {GeoFenceActions} fenceActions
 * @param {string} geofenceName
 * @param {Object} coords
 * @param {GeoPoint} geoPoint
 * @param {Object} GeoFenceCallback
 * @param {Object} lastResults
 * @param {Object} asyncHandler
 */
// eslint-disable-next-line max-len

function checkPosition(tracker, fenceActions, geofenceName, coords, geoPoint, GeoFenceCallback, lastResults, asyncHandler) {
  for (var k = 0; k < tracker._trackedFences.length; k++) {
    var _trackedFences = tracker._trackedFences[k];

    var isInFence = isDefiniteRect(_trackedFences.nwPoint, _trackedFences.sePoint) && _utils["default"].isPointInFence(coords, _trackedFences);

    var rule = null;

    if (isInFence !== lastResults[tracker._trackedFences[k][geofenceName]]) {
      if (lastResults[tracker._trackedFences[k][geofenceName]]) {
        rule = 'onexit';
      } else {
        rule = 'onenter';
      }

      lastResults[tracker._trackedFences[k][geofenceName]] = isInFence;
    }

    if (rule) {
      (function () {
        var duration = tracker._trackedFences[k].onStayDuration * 1000;

        var timeoutFuncInApp = function timeoutFuncInApp(savedK, savedCoords, duration) {
          var callBack = function callBack() {
            GeoFenceCallback['onstay'](tracker._trackedFences[savedK][geofenceName], tracker._trackedFences[savedK].objectId, savedCoords.latitude, savedCoords.longitude);
          };

          tracker._timers[tracker._trackedFences[savedK][geofenceName]] = setTimeout(callBack, duration);
        };

        var timeoutFuncRemote = function timeoutFuncRemote(savedK, savedCoords, duration, geoPoint) {
          var callBack = function callBack() {
            fenceActions.run('onstay', tracker._trackedFences[savedK][geofenceName], geoPoint, asyncHandler);
          };

          tracker._timers[tracker._trackedFences[savedK][geofenceName]] = setTimeout(callBack, duration);
        };

        if (GeoFenceCallback) {
          if (rule === 'onenter') {
            GeoFenceCallback[rule](tracker._trackedFences[k][geofenceName], tracker._trackedFences[k].objectId, coords.latitude, coords.longitude);

            if (duration > -1) {
              (function (k, coords, duration) {
                return timeoutFuncInApp(k, coords, duration);
              })(k, coords, duration);
            } else {
              GeoFenceCallback['onstay'](tracker._trackedFences[k][geofenceName], tracker._trackedFences[k].objectId, coords.latitude, coords.longitude);
            }
          } else {
            clearTimeout(tracker._timers[tracker._trackedFences[k][geofenceName]]);
            GeoFenceCallback[rule](tracker._trackedFences[k][geofenceName], tracker._trackedFences[k].objectId, coords.latitude, coords.longitude);
          }
        } else if (geoPoint) {
          geoPoint.latitude = coords.latitude;
          geoPoint.longitude = coords.longitude;

          if (rule === 'onenter') {
            fenceActions.run(rule, tracker._trackedFences[k][geofenceName], geoPoint, asyncHandler);

            if (duration > -1) {
              (function (k, coords, duration, geoPoint) {
                return timeoutFuncRemote(k, coords, duration, geoPoint);
              })(k, coords, duration, geoPoint);
            } else {
              fenceActions.run('onstay', tracker._trackedFences[k][geofenceName], geoPoint, asyncHandler);
            }
          } else {
            clearTimeout(tracker._timers[tracker._trackedFences[k][geofenceName]]);
            fenceActions.run(rule, tracker._trackedFences[k][geofenceName], geoPoint, asyncHandler);
          }
        }
      })();
    }
  }
}

function startMonitoring(geofenceName, secondParam, asyncHandler) {
  var tracker = this.geoTracker;
  var fenceActions = this.fenceActions;
  var fences = this.getFences(geofenceName);
  var isGeoPoint = false;

  if (secondParam instanceof _point["default"]) {
    isGeoPoint = true;
  }

  for (var ii = 0; ii < fences.length; ii++) {
    if (!_containsByPropName(tracker._trackedFences, fences[ii], 'geofenceName')) {
      TypesMapper[fences[ii].type](fences[ii]);
      tracker._lastResults[fences[ii].geofenceName] = false;

      tracker._trackedFences.push(fences[ii]);
    }
  }

  function _containsByPropName(collection, object, name) {
    var length = collection.length;
    var result = false;

    for (var i = 0; i < length; i++) {
      if (result = collection[i][name] === object[name]) {
        break;
      }
    }

    return result;
  }

  var getPosition = function getPosition(position) {
    var geoPoint = isGeoPoint ? secondParam : null;
    var callback = !isGeoPoint ? secondParam : null; // eslint-disable-next-line max-len

    checkPosition(tracker, fenceActions, geofenceName, position.coords, geoPoint, callback, tracker._lastResults, asyncHandler);
  };

  function errorCallback(error) {
    throw new Error('Error during current position calculation. Error ' + error.message);
  }

  function getCurPos() {
    navigator.geolocation.getCurrentPosition(getPosition, errorCallback, {
      timeout: 5000,
      enableHighAccuracy: true
    });
  }

  if (!tracker.monitoringId) {
    if (fences.length) {
      tracker.monitoringId = !_utils["default"].isMobileDevice() ? setInterval(getCurPos, INTERVAL) : navigator.geolocation.watchPosition(getPosition, errorCallback, {
        timeout: INTERVAL,
        enableHighAccuracy: true
      });
    } else {
      throw new Error('Please, add some fences to start monitoring');
    }
  }
}

/***/ }),

/***/ "./src/geo/tracker-monitor/stop-monitoring.js":
/*!****************************************************!*\
  !*** ./src/geo/tracker-monitor/stop-monitoring.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = stopMonitoring;

var _utils = _interopRequireDefault(__webpack_require__(/*! ../utils */ "./src/geo/utils/index.js"));

//TODO: refactor me
function stopMonitoring(geofenceName) {
  var tracker = this.geoTracker;

  if (geofenceName) {
    for (var i = 0; i < tracker._trackedFences.length; i++) {
      if (tracker._trackedFences[i].geofenceName === geofenceName) {
        tracker._trackedFences.splice(i, 1);

        delete tracker._lastResults[geofenceName];
      }
    }
  } else {
    tracker._lastResuls = {};
    tracker._trackedFences = [];
  }

  if (!tracker._trackedFences.length) {
    tracker.monitoringId = null;

    if (!_utils["default"].isMobileDevice()) {
      clearInterval(tracker.monitoringId);
    } else {
      navigator.geolocation.clearWatch(tracker.monitoringId);
    }
  }
}

/***/ }),

/***/ "./src/geo/tracker-monitor/tracker.js":
/*!********************************************!*\
  !*** ./src/geo/tracker-monitor/tracker.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));

var GeoTracker = function GeoTracker() {
  (0, _classCallCheck2["default"])(this, GeoTracker);
  this.monitoringId = null;
  this._timers = {};
  this._trackedFences = [];
  this._lastResults = {};
};

exports["default"] = GeoTracker;

/***/ }),

/***/ "./src/geo/utils/index.js":
/*!********************************!*\
  !*** ./src/geo/utils/index.js ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _constants = __webpack_require__(/*! ../constants */ "./src/geo/constants.js");

//TODO: refactor me
var GeoUtils = {
  calculateDistance: function calculateDistance(lat1, lon1, lat2, lon2) {
    var deltaLon = (lon1 - lon2) * Math.PI / 180;
    lat1 = lat1 * Math.PI / 180;
    lat2 = lat2 * Math.PI / 180;
    var lat1Sin = Math.sin(lat1);
    var lat1Cos = Math.cos(lat1);
    var lat2Sin = Math.sin(lat2);
    var lat2Cos = Math.cos(lat2);
    return _constants.EARTH_RADIUS * Math.acos(lat1Sin * lat2Sin + lat1Cos * lat2Cos * Math.cos(deltaLon));
  },
  updateDegree: function updateDegree(degree) {
    degree += 180;

    while (degree < 0) {
      degree += 360;
    }

    return degree === 0 ? 180 : degree % 360 - 180;
  },
  countLittleRadius: function countLittleRadius(latitude) {
    var h = Math.abs(latitude) / 180 * _constants.EARTH_RADIUS;

    var diameter = 2 * _constants.EARTH_RADIUS;
    var l_2 = (Math.pow(diameter, 2) - diameter * Math.sqrt(Math.pow(diameter, 2) - 4 * Math.pow(h, 2))) / 2;
    return diameter / 2 - Math.sqrt(l_2 - Math.pow(h, 2));
  },
  isPointInCircle: function isPointInCircle(currentPosition, center, radius) {
    var lat1 = currentPosition.latitude;
    var lon1 = currentPosition.longitude;
    var lat2 = center.latitude;
    var lon2 = center.longitude;
    return GeoUtils.calculateDistance(lat1, lon1, lat2, lon2) <= radius;
  },
  isMobileDevice: function isMobileDevice() {
    var check = false;

    (function (a) {
      if (/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(a.substr(0, 4))) {
        // eslint-disable-line max-len
        check = true;
      }
    })(navigator.userAgent || navigator.vendor || window.opera);

    return check;
  },
  isPointInRectangular: function isPointInRectangular(currentPosition, nwPoint, sePoint) {
    if (currentPosition.latitude > nwPoint.latitude || currentPosition.latitude < sePoint.latitude) {
      return false;
    }

    if (nwPoint.longitude > sePoint.longitude) {
      return currentPosition.longitude >= nwPoint.longitude || currentPosition.longitude <= sePoint.longitude;
    } else {
      return currentPosition.longitude >= nwPoint.longitude && currentPosition.longitude <= sePoint.longitude;
    }
  },
  getPointPosition: function getPointPosition(point, first, second) {
    var delta = second.longitude - first.longitude;

    if (delta < 0 && delta > -180 || delta > 180) {
      var tmp = first;
      first = second;
      second = tmp;
    }

    if (point.latitude < first.latitude === point.latitude < second.latitude) {
      return 'NO_INTERSECT';
    }

    var x = point.longitude - first.longitude;

    if (x < 0 && x > -180 || x > 180) {
      x = (x - 360) % 360;
    }

    var x2 = (second.longitude - first.longitude + 360) % 360;
    var result = x2 * (point.latitude - first.latitude) / (second.latitude - first.latitude) - x;

    if (result > 0) {
      return 'INTERSECT';
    }

    return 'NO_INTERSECT';
  },
  isPointInShape: function isPointInShape(point, shape) {
    var count = 0;

    function getIndex(i, shape) {
      return (i + 1) % shape.length;
    }

    for (var i = 0; i < shape.length; i++) {
      var position = GeoUtils.getPointPosition(point, shape[i], shape[getIndex(i, shape)]);

      switch (position) {
        case 'INTERSECT':
          {
            count++;
            break;
          }

        case 'ON_LINE':
        case 'NO_INTERSECT':
        default:
          break;
      }
    }

    return count % 2 === 1;
  },
  isPointInFence: function isPointInFence(geoPoint, geoFence) {
    return GeoUtils.isPointInRectangular(geoPoint, geoFence.nwPoint, geoFence.sePoint) || geoFence.type === 'CIRCLE' && GeoUtils.isPointInCircle(geoPoint, geoFence.nodes[0], GeoUtils.calculateDistance(geoFence.nodes[0].latitude, geoFence.nodes[0].longitude, geoFence.nodes[1].latitude, geoFence.nodes[1].longitude)) || geoFence.type === 'SHAPE' && GeoUtils.isPointInShape(geoPoint, geoFence.nodes);
  },
  getOutRectangleNodes: function getOutRectangleNodes(geoPoints) {
    var nwLat = geoPoints[0].latitude;
    var nwLon = geoPoints[0].longitude;
    var seLat = geoPoints[0].latitude;
    var seLon = geoPoints[0].longitude;
    var minLon = 0,
        maxLon = 0,
        lon = 0;

    for (var i = 1; i < geoPoints.length; i++) {
      if (geoPoints[i].latitude > nwLat) {
        nwLat = geoPoints[i].latitude;
      }

      if (geoPoints[i].latitude < seLat) {
        seLat = geoPoints[i].latitude;
      }

      var deltaLon = geoPoints[i].latitude - geoPoints[i - 1].latitude;

      if (deltaLon < 0 && deltaLon > -180 || deltaLon > 270) {
        if (deltaLon > 270) {
          deltaLon -= 360;
        }

        lon += deltaLon;

        if (lon < minLon) {
          minLon = lon;
        }
      } else if (deltaLon > 0 && deltaLon <= 180 || deltaLon <= -270) {
        if (deltaLon <= -270) {
          deltaLon += 360;
        }

        lon += deltaLon;

        if (lon > maxLon) {
          maxLon = lon;
        }
      }
    }

    nwLon += minLon;
    seLon += maxLon;

    if (seLon - nwLon >= 360) {
      seLon = 180;
      nwLon = -180;
    } else {
      seLon = GeoUtils.updateDegree(seLon);
      nwLon = GeoUtils.updateDegree(nwLon);
    }

    return [nwLat, nwLon, seLat, seLon];
  },
  getOutRectangleCircle: function getOutRectangleCircle(center, bounded) {
    var radius = GeoUtils.calculateDistance(center.latitude, center.longitude, bounded.latitude, bounded.longitude);
    var boundLat = center.latitude + 180 * radius / (Math.PI * _constants.EARTH_RADIUS) * (center.latitude > 0 ? 1 : -1);
    var littleRadius = GeoUtils.countLittleRadius(boundLat);
    var westLong, eastLong, northLat, southLat;

    if (littleRadius > radius) {
      westLong = center.longitude - 180 * radius / littleRadius;
      eastLong = 2 * center.longitude - westLong;
      westLong = GeoUtils.updateDegree(westLong);
      eastLong = eastLong % 360 === 180 ? 180 : GeoUtils.updateDegree(eastLong);
    } else {
      westLong = -180;
      eastLong = 180;
    }

    if (center.latitude > 0) {
      northLat = boundLat;
      southLat = 2 * center.latitude - boundLat;
    } else {
      southLat = boundLat;
      northLat = 2 * center.latitude - boundLat;
    }

    return [Math.min(northLat, 90), westLong, Math.max(southLat, -90), eastLong];
  },
  getOutRectangle: function getOutRectangle() {
    return arguments.length === 1 ? GeoUtils.getOutRectangleNodes(arguments[1]) : GeoUtils.getOutRectangleCircle(arguments[0], arguments[1]);
  }
};
var _default = GeoUtils;
exports["default"] = _default;

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {

var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));

var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js"));

var _typeof2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/typeof */ "./node_modules/@babel/runtime/helpers/typeof.js"));

var _backendlessRequest = _interopRequireDefault(__webpack_require__(/*! backendless-request */ "./node_modules/backendless-request/dist/backendless-request.js"));

var _request = _interopRequireDefault(__webpack_require__(/*! ./request */ "./src/request/index.js"));

var _urls = _interopRequireDefault(__webpack_require__(/*! ./urls */ "./src/urls.js"));

var _utils = _interopRequireDefault(__webpack_require__(/*! ./utils */ "./src/utils.js"));

var DEFAULT_PROPS = {
  appId: null,
  apiKey: null,
  serverURL: 'https://api.backendless.com',
  debugMode: false,
  standalone: false,
  ServerCode: null,
  XMLHttpRequest: typeof XMLHttpRequest !== 'undefined' ? XMLHttpRequest : undefined
};
var root = (typeof self === "undefined" ? "undefined" : (0, _typeof2["default"])(self)) === 'object' && self.self === self && self || (typeof global === "undefined" ? "undefined" : (0, _typeof2["default"])(global)) === 'object' && global.global === global && global;
var previousBackendless = root && root.Backendless; // Backendless supports two signatures for the initApp method
// two args - applicationId {String} and secretKey {String}
// or one argument - whole set of options {Object}

var parseInitConfig = function parseInitConfig() {
  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }

  var appId = args[0],
      apiKey = args[1];

  if (appId && (0, _typeof2["default"])(appId) === 'object') {
    return appId;
  }

  return {
    appId: appId,
    apiKey: apiKey
  };
};

var SERVICES = {
  'Logging': function Logging() {
    return __webpack_require__(/*! ./logging */ "./src/logging/index.js")["default"];
  },
  'Counters': function Counters() {
    return __webpack_require__(/*! ./counters */ "./src/counters/index.js")["default"];
  },
  'Cache': function Cache() {
    return __webpack_require__(/*! ./cache */ "./src/cache/index.js")["default"];
  },
  'Commerce': function Commerce() {
    return __webpack_require__(/*! ./commerce */ "./src/commerce/index.js")["default"];
  },
  'Users': function Users() {
    return __webpack_require__(/*! ./users */ "./src/users/index.js")["default"];
  },
  'BL': function BL() {
    return __webpack_require__(/*! ./bl */ "./src/bl/index.js")["default"];
  },
  'Geo': function Geo() {
    return __webpack_require__(/*! ./geo */ "./src/geo/index.js")["default"];
  },
  'Data': function Data() {
    return __webpack_require__(/*! ./data */ "./src/data/index.js")["default"];
  },
  'Messaging': function Messaging() {
    return __webpack_require__(/*! ./messaging */ "./src/messaging/index.js")["default"];
  },
  'Files': function Files() {
    return __webpack_require__(/*! ./files */ "./src/files/index.js")["default"];
  },
  'RT': function RT() {
    return __webpack_require__(/*! ./rt */ "./src/rt.js")["default"];
  },
  'SharedObject': function SharedObject() {
    return __webpack_require__(/*! ./rso */ "./src/rso/index.js")["default"];
  },
  'LocalCache': function LocalCache() {
    return __webpack_require__(/*! ./local-cache */ "./src/local-cache/index.js")["default"];
  }
};

var Backendless = /*#__PURE__*/function () {
  function Backendless(props) {
    (0, _classCallCheck2["default"])(this, Backendless);
    this.initConfig(props);
    this.Request = _backendlessRequest["default"];
    this.request = new _request["default"](this);
    this.urls = new _urls["default"](this);
  }
  /**
   * @param {Object} config
   */


  (0, _createClass2["default"])(Backendless, [{
    key: "initConfig",
    value: function initConfig(config) {
      for (var key in DEFAULT_PROPS) {
        if (DEFAULT_PROPS.hasOwnProperty(key)) {
          var privateKey = "__".concat(key);
          var defaultValue = this[privateKey] === undefined ? DEFAULT_PROPS[key] : this[privateKey];
          this[privateKey] = config[key] === undefined ? defaultValue : config[key];
        }
      }
    }
    /**
     * @param {string|Object} appId|config
     * @param {string} [secretKey]
     * @returns {Backendless}
     */

  }, {
    key: "initApp",
    value: function initApp() {
      var config = parseInitConfig.apply(void 0, arguments);
      var app = config.standalone ? new Backendless(this) : this;
      app.initConfig(config);
      app.resetRT();

      app.__removeService('LocalCache');

      if (app.__hasService('Logging')) {
        app.Logging.reset();
      }

      if (app.__hasService('Geo')) {
        app.Geo.resetGeofenceMonitoring();
      }

      if (app.__hasService('Users')) {
        app.Users.currentUser = null;
      }

      delete this.__device;
      return app;
    }
  }, {
    key: "__hasService",
    value: function __hasService(name) {
      return !!this["__".concat(name)];
    }
  }, {
    key: "__removeService",
    value: function __removeService(name) {
      delete this["__".concat(name)];
    }
  }, {
    key: "__getService",
    value: function __getService(name) {
      var privateName = "__".concat(name);

      if (!this[privateName]) {
        var Service = SERVICES[name]();
        this[privateName] = new Service(this);
      }

      return this[privateName];
    } ///--------SETTERS/GETTERS-------///
    ///--------standalone-------///

  }, {
    key: "setupDevice",
    value: function setupDevice(device) {
      var Device = __webpack_require__(/*! ./device */ "./src/device/index.js")["default"];

      this.__device = new Device(device);
    } ///----------UTIL METHODS--------///

  }, {
    key: "getCurrentUserToken",
    value: function getCurrentUserToken() {
      return this.Users.getCurrentUserToken();
    }
  }, {
    key: "setCurrentUserToken",
    value: function setCurrentUserToken(userToken) {
      this.Users.setCurrentUserToken(userToken);
    }
  }, {
    key: "noConflict",
    value: function noConflict() {
      if (root) {
        root.Backendless = previousBackendless;
      }

      return this;
    } ///-------------------------------------///
    ///-------------- SERVICES -------------///

  }, {
    key: "resetRT",
    value: function resetRT() {
      if (this.__RT) {
        this.__RT.terminate();

        delete this.__RT;
      }
    }
  }, {
    key: "standalone",
    get: function get() {
      return this.__standalone;
    },
    set: function set(standalone) {
      throw new Error('Setting value to Backendless.standalone directly is not possible, ' + "instead you must use Backendless.initApp({ appId: [APP_ID], apiKey: [API_KEY], standalone: ".concat(standalone, " })"));
    } ///--------applicationId-------///

  }, {
    key: "applicationId",
    get: function get() {
      return this.__appId;
    },
    set: function set(appId) {
      throw new Error("Setting '".concat(appId, "' value to Backendless.applicationId directly is not possible, ") + "instead you must use Backendless.initApp('".concat(appId, "', API_KEY)"));
    } ///--------secretKey-------///

  }, {
    key: "secretKey",
    get: function get() {
      return this.__apiKey;
    },
    set: function set(apiKey) {
      throw new Error("Setting '".concat(apiKey, "' value to Backendless.secretKey directly is not possible, ") + "instead you must use Backendless.initApp(APP_ID, '".concat(apiKey, "')"));
    } ///--------serverURL-------///

  }, {
    key: "serverURL",
    get: function get() {
      return this.__serverURL;
    },
    set: function set(serverURL) {
      this.__serverURL = serverURL;
    } ///--------appPath-------///

  }, {
    key: "appPath",
    get: function get() {
      return [this.serverURL, this.applicationId, this.secretKey].join('/');
    },
    set: function set(appPath) {
      throw new Error("Setting '".concat(appPath, "' value to Backendless.appPath directly is not possible, ") + 'instead you must use Backendless.initApp(APP_ID, API_KEY) for setup the value');
    } ///--------debugMode-------///

  }, {
    key: "debugMode",
    get: function get() {
      return this.__debugMode;
    },
    set: function set(debugMode) {
      debugMode = !!debugMode;

      if (this.__debugMode !== debugMode) {
        this.__debugMode = debugMode;

        if (this.__RT) {
          this.RT.setDebugMode(debugMode);
        }
      }
    } ///--------XMLHttpRequestMode-------///

  }, {
    key: "XMLHttpRequest",
    get: function get() {
      return this.__XMLHttpRequest;
    },
    set: function set(XMLHttpRequest) {
      this.__XMLHttpRequest = XMLHttpRequest;
    } ///--------ServerCode-------///

  }, {
    key: "ServerCode",
    get: function get() {
      return this.__ServerCode;
    },
    set: function set(ServerCode) {
      this.__ServerCode = ServerCode;
    } ///--------device-------///

  }, {
    key: "device",
    get: function get() {
      if (!this.__device) {
        throw new Error('Device is not defined. Please, run the Backendless.setupDevice');
      }

      return this.__device;
    },
    set: function set(props) {
      throw new Error('Setting value to Backendless.device directly is not possible, ' + 'instead you must use Backendless.setupDevice(deviceProperties) for setup the device');
    }
  }, {
    key: "Utils",
    get: function get() {
      return _utils["default"];
    }
  }, {
    key: "browser",
    get: function get() {
      return __webpack_require__(/*! ./user-agent */ "./src/user-agent.js").getUserAgent();
    }
  }, {
    key: "Logging",
    get: function get() {
      return this.__getService('Logging');
    }
  }, {
    key: "Counters",
    get: function get() {
      return this.__getService('Counters');
    }
  }, {
    key: "Cache",
    get: function get() {
      return this.__getService('Cache');
    }
  }, {
    key: "Commerce",
    get: function get() {
      return this.__getService('Commerce');
    }
  }, {
    key: "Users",
    get: function get() {
      return this.__getService('Users');
    }
  }, {
    key: "User",
    get: function get() {
      return __webpack_require__(/*! ./users/user */ "./src/users/user.js")["default"];
    }
  }, {
    key: "UserService",
    get: function get() {
      return this.Users;
    }
  }, {
    key: "BL",
    get: function get() {
      return this.__getService('BL');
    }
  }, {
    key: "CustomServices",
    get: function get() {
      return this.BL.CustomServices;
    }
  }, {
    key: "Events",
    get: function get() {
      return this.BL.Events;
    }
  }, {
    key: "Geo",
    get: function get() {
      return this.__getService('Geo');
    }
  }, {
    key: "Data",
    get: function get() {
      return this.__getService('Data');
    }
  }, {
    key: "Messaging",
    get: function get() {
      return this.__getService('Messaging');
    }
  }, {
    key: "Files",
    get: function get() {
      return this.__getService('Files');
    }
  }, {
    key: "RT",
    get: function get() {
      return this.__getService('RT');
    }
  }, {
    key: "SharedObject",
    get: function get() {
      return this.__getService('SharedObject');
    }
  }, {
    key: "LocalCache",
    get: function get() {
      return this.__getService('LocalCache');
    } ///-------------- SERVICES -------------///
    ///-------------------------------------///
    ///-------------------------------------///
    ///--------BACKWARD COMPATIBILITY-------///
    //TODO: do we need to remove it?

  }, {
    key: "GeoQuery",
    get: function get() {
      return this.Geo.Query;
    }
  }, {
    key: "GeoPoint",
    get: function get() {
      return this.Geo.Point;
    }
  }, {
    key: "GeoCluster",
    get: function get() {
      return this.Geo.Cluster;
    }
    /** @deprecated */

  }, {
    key: "Persistence",
    get: function get() {
      return this.Data;
    }
  }, {
    key: "DataQueryBuilder",
    get: function get() {
      return this.Data.QueryBuilder;
    }
  }, {
    key: "LoadRelationsQueryBuilder",
    get: function get() {
      return this.Data.LoadRelationsQueryBuilder;
    }
  }, {
    key: "Bodyparts",
    get: function get() {
      return this.Messaging.Bodyparts;
    }
  }, {
    key: "PublishOptions",
    get: function get() {
      return this.Messaging.PublishOptions;
    }
  }, {
    key: "DeliveryOptions",
    get: function get() {
      return this.Messaging.DeliveryOptions;
    }
  }, {
    key: "PublishOptionsHeaders",
    get: function get() {
      return this.Messaging.PublishOptionsHeaders;
    }
  }, {
    key: "EmailEnvelope",
    get: function get() {
      return this.Messaging.EmailEnvelope;
    }
    /** @deprecated */

  }, {
    key: "SubscriptionOptions",
    get: function get() {
      return this.Messaging.SubscriptionOptions;
    } ///--------BACKWARD COMPATIBILITY-------///
    ///-------------------------------------///

  }]);
  return Backendless;
}();

var backendless = new Backendless(DEFAULT_PROPS);

if (root) {
  root.Backendless = backendless;
}

var _default = backendless;
exports["default"] = _default;
module.exports = backendless;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node_modules/webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js")))

/***/ }),

/***/ "./src/local-cache/cache.js":
/*!**********************************!*\
  !*** ./src/local-cache/cache.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));

var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js"));

var Cache = /*#__PURE__*/function () {
  function Cache(app) {
    (0, _classCallCheck2["default"])(this, Cache);
    this.app = app;
    this.__storage = {};
  }

  (0, _createClass2["default"])(Cache, [{
    key: "exists",
    value: function exists(key) {
      return this.get(key) !== undefined;
    }
  }, {
    key: "set",
    value: function set(key, value) {
      return this.storage[key] = this.serialize(value);
    }
  }, {
    key: "get",
    value: function get(key) {
      var result = this.storage[key];
      return result && this.deserialize(result);
    }
  }, {
    key: "remove",
    value: function remove(key) {
      return delete this.storage[key];
    }
  }, {
    key: "clear",
    value: function clear() {
      this.storage = {};
    }
  }, {
    key: "flushExpired",
    value: function flushExpired() {}
  }, {
    key: "getCachePolicy",
    value: function getCachePolicy()
    /** key */
    {}
  }, {
    key: "getAll",
    value: function getAll() {
      var result = {};

      for (var key in this.storage) {
        if (this.storage.hasOwnProperty(key)) {
          result[key] = this.get(key);
        }
      }

      return result;
    }
  }, {
    key: "serialize",
    value: function serialize(value) {
      return JSON.stringify(value);
    }
  }, {
    key: "deserialize",
    value: function deserialize(value) {
      if (typeof value !== 'string') {
        return undefined;
      }

      try {
        return JSON.parse(value);
      } catch (e) {
        return value || undefined;
      }
    }
  }, {
    key: "storage",
    get: function get() {
      return this.__storage;
    },
    set: function set(storage) {
      return this.__storage = storage;
    }
  }]);
  return Cache;
}();

exports["default"] = Cache;

/***/ }),

/***/ "./src/local-cache/index.js":
/*!**********************************!*\
  !*** ./src/local-cache/index.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _construct2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/construct */ "./node_modules/@babel/runtime/helpers/construct.js"));

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));

var _utils = _interopRequireDefault(__webpack_require__(/*! ../utils */ "./src/utils.js"));

var _cache = _interopRequireDefault(__webpack_require__(/*! ./cache */ "./src/local-cache/cache.js"));

var _localStorageCache = _interopRequireDefault(__webpack_require__(/*! ./local-storage-cache */ "./src/local-cache/local-storage-cache.js"));

var LocalCache = function LocalCache() {
  (0, _classCallCheck2["default"])(this, LocalCache);

  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }

  var cache = _utils["default"].isLocalStorageSupported ? (0, _construct2["default"])(_localStorageCache["default"], args) : (0, _construct2["default"])(_cache["default"], args);
  cache.flushExpired();
  cache.Keys = {
    USER_TOKEN: 'user-token',
    CURRENT_USER_ID: 'current-user-id',
    STAY_LOGGED_IN: 'stayLoggedIn'
  };
  return cache;
};

exports["default"] = LocalCache;

/***/ }),

/***/ "./src/local-cache/local-storage-cache.js":
/*!************************************************!*\
  !*** ./src/local-cache/local-storage-cache.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));

var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js"));

var _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ "./node_modules/@babel/runtime/helpers/inherits.js"));

var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"));

var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "./node_modules/@babel/runtime/helpers/getPrototypeOf.js"));

var _utils = _interopRequireDefault(__webpack_require__(/*! ../utils */ "./src/utils.js"));

var _cache = _interopRequireDefault(__webpack_require__(/*! ./cache */ "./src/local-cache/cache.js"));

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2["default"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2["default"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2["default"])(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

var STORAGE_KEY_NAMESPACE = 'Backendless';

var composeStorageKey = function composeStorageKey(app) {
  var applicationId = app.applicationId,
      standalone = app.standalone;
  var key = STORAGE_KEY_NAMESPACE;

  if (standalone) {
    key += "-".concat(applicationId);
  }

  return key;
};

var expired = function expired(obj) {
  if (_utils["default"].isObject(obj)) {
    var withTTL = 'cachePolicy' in obj && 'timeToLive' in obj.cachePolicy && 'created' in obj.cachePolicy && obj.cachePolicy.timeToLive !== -1;

    if (withTTL) {
      var ttl = obj['cachePolicy']['timeToLive'];
      var age = new Date().getTime() - obj['cachePolicy']['created'];
      return age > ttl;
    }
  }

  return false;
};

var addTimestamp = function addTimestamp(obj) {
  if (_utils["default"].isObject(obj)) {
    if ('cachePolicy' in obj && 'timeToLive' in obj['cachePolicy']) {
      obj['cachePolicy']['created'] = new Date().getTime();
    }
  }
};

var LocalStorageCache = /*#__PURE__*/function (_Cache) {
  (0, _inherits2["default"])(LocalStorageCache, _Cache);

  var _super = _createSuper(LocalStorageCache);

  function LocalStorageCache() {
    var _this;

    (0, _classCallCheck2["default"])(this, LocalStorageCache);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));
    _this.__storageKey = composeStorageKey(_this.app);
    _this.__storage = window.localStorage;

    _this.initStorage();

    return _this;
  }

  (0, _createClass2["default"])(LocalStorageCache, [{
    key: "initStorage",
    value: function initStorage() {
      if (!this.storage) {
        this.storage = {};
      }
    }
  }, {
    key: "exists",
    value: function exists(key) {
      return this.get(key) !== undefined;
    }
  }, {
    key: "set",
    value: function set(key, value) {
      if (value === undefined) {
        return this.remove(key);
      }

      var storage = this.storage;
      addTimestamp(value);
      storage[key] = value;
      this.storage = storage;
      return value;
    }
  }, {
    key: "get",
    value: function get(key) {
      var storage = this.storage;
      var value = storage[key];

      if (expired(value)) {
        delete storage[key];
        this.storage = storage;
        return;
      }

      if (value && value['cachePolicy']) {
        delete value['cachePolicy'];
      }

      return value;
    }
  }, {
    key: "remove",
    value: function remove(key) {
      key = key.replace(/([^A-Za-z0-9-])/g, ''); //TODO maybe we have to check always

      var storage = this.storage;

      if (storage.hasOwnProperty(key)) {
        delete storage[key];
        this.storage = storage;
      }
    }
  }, {
    key: "getAll",
    value: function getAll() {
      var storage = this.storage;
      var result = {};

      for (var key in storage) {
        if (storage.hasOwnProperty(key)) {
          var value = storage[key]; //TODO maybe we have to filter expired

          if (value !== null && value.hasOwnProperty('cachePolicy')) {
            delete value['cachePolicy'];
          }

          result[key] = value;
        }
      }

      return result;
    }
  }, {
    key: "flushExpired",
    value: function flushExpired() {
      var storage = this.storage;

      for (var key in storage) {
        if (storage.hasOwnProperty(key)) {
          var value = storage[key];

          if (expired(value)) {
            delete storage[key];
          }
        }
      }

      this.storage = storage;
    }
  }, {
    key: "getCachePolicy",
    value: function getCachePolicy(key) {
      var storage = this.storage;
      var value = storage[key];
      return value ? value['cachePolicy'] : undefined;
    }
  }, {
    key: "storage",
    get: function get() {
      return this.deserialize(this.__storage.getItem(this.__storageKey)) || {};
    },
    set: function set(storage) {
      this.__storage.setItem(this.__storageKey, this.serialize(storage));
    }
  }]);
  return LocalStorageCache;
}(_cache["default"]);

exports["default"] = LocalStorageCache;

/***/ }),

/***/ "./src/logging/collector.js":
/*!**********************************!*\
  !*** ./src/logging/collector.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));

var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js"));

var _utils = _interopRequireDefault(__webpack_require__(/*! ../utils */ "./src/utils.js"));

var _async = _interopRequireDefault(__webpack_require__(/*! ../request/async */ "./src/request/async.js"));

var LoggingCollector = /*#__PURE__*/function () {
  /**
   * @param {Backendless} app
   */
  function LoggingCollector(app) {
    (0, _classCallCheck2["default"])(this, LoggingCollector);
    this.app = app;
    this.flush = _utils["default"].promisified(this.flush);
    this.flushSync = _utils["default"]["synchronized"](this.flush);
    this.reset();
  }

  (0, _createClass2["default"])(LoggingCollector, [{
    key: "reset",
    value: function reset() {
      this.lastFlushListeners = [];
      this.loggers = {};
      this.pool = [];
      this.numOfMessages = 10;
      this.timeFrequency = 1;
    }
  }, {
    key: "getLogger",
    value: function getLogger(loggerName) {
      if (!_utils["default"].isString(loggerName)) {
        throw new Error("Invalid 'loggerName' value. LoggerName must be a string value");
      }

      var _require = __webpack_require__(/*! ./logger */ "./src/logging/logger.js"),
          Logger = _require["default"];

      var logger = this.loggers[loggerName] || new Logger(loggerName, this);
      this.loggers[loggerName] = logger;
      return logger;
    }
  }, {
    key: "push",
    value: function push(logger, logLevel, message, exception) {
      var messageObj = {
        logger: logger,
        message: message,
        exception: exception,
        'log-level': logLevel,
        timestamp: Date.now()
      };
      this.pool.push(messageObj);
      this.checkMessagesLen();
    }
  }, {
    key: "checkMessagesLen",
    value: function checkMessagesLen() {
      if (this.pool.length >= this.numOfMessages) {
        this.sendRequest();
      }
    }
  }, {
    key: "sendRequest",
    value: function sendRequest() {
      var _this = this;

      if (!this.flushInterval) {
        this.flushInterval = setTimeout(function () {
          return _this.flush();
        }, this.timeFrequency * 1000);
      }
    }
  }, {
    key: "setLogReportingPolicy",
    value: function setLogReportingPolicy(numOfMessages, timeFrequency) {
      this.numOfMessages = numOfMessages;
      this.timeFrequency = timeFrequency; //TODO: check when set new timeFrequency

      this.checkMessagesLen();
    }
  }, {
    key: "flush",
    value: function flush(asyncHandler) {
      if (this.pool.length) {
        if (this.flushInterval) {
          clearTimeout(this.flushInterval);
          delete this.flushInterval;
        }

        var listeners;
        var loggingCollector = this;

        var cb = function cb(method) {
          return function () {
            var _arguments = arguments;
            listeners.forEach(function (callbacks) {
              callbacks[method].apply(null, _arguments);
            });

            if (listeners === loggingCollector.lastFlushListeners) {
              loggingCollector.lastFlushListeners = null;
            }
          };
        };

        if (asyncHandler) {
          listeners = this.lastFlushListeners = this.lastFlushListeners ? this.lastFlushListeners.splice(0) : [];
          listeners.push(asyncHandler);
        }

        this.app.request.put({
          isAsync: !!asyncHandler,
          asyncHandler: asyncHandler && new _async["default"](cb('success'), cb('fault')),
          url: this.app.urls.logging(),
          data: this.pool
        });
        this.pool = [];
      } else if (asyncHandler) {
        if (this.lastFlushListeners) {
          this.lastFlushListeners.push(asyncHandler);
        } else {
          setTimeout(asyncHandler.success, 0);
        }
      }
    }
  }]);
  return LoggingCollector;
}();

var _default = LoggingCollector;
exports["default"] = _default;

/***/ }),

/***/ "./src/logging/index.js":
/*!******************************!*\
  !*** ./src/logging/index.js ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));

var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js"));

var _applyDecoratedDescriptor2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/applyDecoratedDescriptor */ "./node_modules/@babel/runtime/helpers/applyDecoratedDescriptor.js"));

var _decorators = __webpack_require__(/*! ../decorators */ "./src/decorators/index.js");

var _collector = _interopRequireDefault(__webpack_require__(/*! ./collector */ "./src/logging/collector.js"));

var _dec, _class;

var Logging = (_dec = (0, _decorators.deprecated)('Backendless.Logging', 'Backendless.Logging.flush'), (_class = /*#__PURE__*/function () {
  function Logging(app) {
    (0, _classCallCheck2["default"])(this, Logging);
    this.app = app;
    this.loggingCollector = new _collector["default"](app);
  }

  (0, _createClass2["default"])(Logging, [{
    key: "getLogger",
    value: function getLogger() {
      var _this$loggingCollecto;

      return (_this$loggingCollecto = this.loggingCollector).getLogger.apply(_this$loggingCollecto, arguments);
    }
  }, {
    key: "flushSync",
    value: function flushSync() {
      var _this$loggingCollecto2;

      return (_this$loggingCollecto2 = this.loggingCollector).flushSync.apply(_this$loggingCollecto2, arguments);
    }
  }, {
    key: "flush",
    value: function flush() {
      var _this$loggingCollecto3;

      return (_this$loggingCollecto3 = this.loggingCollector).flush.apply(_this$loggingCollecto3, arguments);
    }
  }, {
    key: "reset",
    value: function reset() {
      var _this$loggingCollecto4;

      return (_this$loggingCollecto4 = this.loggingCollector).reset.apply(_this$loggingCollecto4, arguments);
    }
  }, {
    key: "setLogReportingPolicy",
    value: function setLogReportingPolicy() {
      var _this$loggingCollecto5;

      return (_this$loggingCollecto5 = this.loggingCollector).setLogReportingPolicy.apply(_this$loggingCollecto5, arguments);
    }
  }]);
  return Logging;
}(), ((0, _applyDecoratedDescriptor2["default"])(_class.prototype, "flushSync", [_dec], Object.getOwnPropertyDescriptor(_class.prototype, "flushSync"), _class.prototype)), _class));
var _default = Logging;
exports["default"] = _default;

/***/ }),

/***/ "./src/logging/logger.js":
/*!*******************************!*\
  !*** ./src/logging/logger.js ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));

var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js"));

var Logger = /*#__PURE__*/function () {
  /**
   * @param {string} name
   * @param {LoggingCollector} loggingCollector
   */
  function Logger(name, loggingCollector) {
    (0, _classCallCheck2["default"])(this, Logger);
    this.name = name;
    this.loggingCollector = loggingCollector;
  }

  (0, _createClass2["default"])(Logger, [{
    key: "debug",
    value: function debug(message) {
      return this.loggingCollector.push(this.name, 'DEBUG', message);
    }
  }, {
    key: "info",
    value: function info(message) {
      return this.loggingCollector.push(this.name, 'INFO', message);
    }
  }, {
    key: "warn",
    value: function warn(message, exception) {
      return this.loggingCollector.push(this.name, 'WARN', message, exception);
    }
  }, {
    key: "error",
    value: function error(message, exception) {
      return this.loggingCollector.push(this.name, 'ERROR', message, exception);
    }
  }, {
    key: "fatal",
    value: function fatal(message, exception) {
      return this.loggingCollector.push(this.name, 'FATAL', message, exception);
    }
  }, {
    key: "trace",
    value: function trace(message) {
      return this.loggingCollector.push(this.name, 'TRACE', message);
    }
  }]);
  return Logger;
}();

exports["default"] = Logger;

/***/ }),

/***/ "./src/messaging/channel/index.js":
/*!****************************************!*\
  !*** ./src/messaging/channel/index.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));

var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js"));

var _get2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/get */ "./node_modules/@babel/runtime/helpers/get.js"));

var _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ "./node_modules/@babel/runtime/helpers/inherits.js"));

var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"));

var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "./node_modules/@babel/runtime/helpers/getPrototypeOf.js"));

var _applyDecoratedDescriptor2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/applyDecoratedDescriptor */ "./node_modules/@babel/runtime/helpers/applyDecoratedDescriptor.js"));

var _utils = _interopRequireDefault(__webpack_require__(/*! ../../utils */ "./src/utils.js"));

var _rt = __webpack_require__(/*! ../../rt */ "./src/rt.js");

var _dec, _class;

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2["default"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2["default"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2["default"])(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

var ListenerTypes = _utils["default"].mirrorKeys({
  MESSAGE: null
});

var Channel = (_dec = _rt.RTScopeConnector.connectionRequired(), (_class = /*#__PURE__*/function (_RTScopeConnector) {
  (0, _inherits2["default"])(Channel, _RTScopeConnector);

  var _super = _createSuper(Channel);

  function Channel(options, app) {
    var _this;

    (0, _classCallCheck2["default"])(this, Channel);
    _this = _super.call(this, options);
    _this.app = app;

    _this.connect();

    return _this;
  }

  (0, _createClass2["default"])(Channel, [{
    key: "getScopeOptions",
    value: function getScopeOptions() {
      var name = this.options.name;
      return {
        channel: name
      };
    }
  }, {
    key: "connect",
    value: function connect() {
      if (this.app) {
        return (0, _get2["default"])((0, _getPrototypeOf2["default"])(Channel.prototype), "connect", this).call(this);
      }
    }
  }, {
    key: "publish",
    value: function publish(message, publishOptions, deliveryTarget) {
      return this.app.Messaging.publish(this.options.name, message, publishOptions, deliveryTarget);
    }
  }, {
    key: "addMessageListener",
    value: function addMessageListener(selector, callback, onError) {
      if (typeof selector === 'function') {
        onError = callback;
        callback = selector;
        selector = undefined;
      }

      this.addSubscription(ListenerTypes.MESSAGE, this.app.RT.subscriptions.onPubSubMessage, {
        callback: callback,
        onError: onError,
        params: {
          selector: selector
        }
      });
    }
  }, {
    key: "removeMessageListener",
    value: function removeMessageListener(selector, callback) {
      if (typeof selector === 'function') {
        callback = selector;
        selector = undefined;
      }

      if (selector && typeof selector !== 'string') {
        throw new Error('Selector must be a string.');
      }

      if (typeof callback !== 'function') {
        throw new Error('Callback must be a function.');
      }

      var matcher = function matcher(subscription) {
        if (selector) {
          return subscription.params.selector === selector && subscription.callback === callback;
        }

        return subscription.callback === callback;
      };

      this.stopSubscription(ListenerTypes.MESSAGE, {
        matcher: matcher
      });
    }
  }, {
    key: "removeMessageListeners",
    value: function removeMessageListeners(selector) {
      if (typeof selector !== 'string') {
        throw new Error('Selector must be a string.');
      }

      var matcher = function matcher(subscription) {
        return subscription.params.selector === selector;
      };

      this.stopSubscription(ListenerTypes.MESSAGE, {
        matcher: matcher
      });
    }
  }, {
    key: "removeAllMessageListeners",
    value: function removeAllMessageListeners() {
      this.stopSubscription(ListenerTypes.MESSAGE, {});
    }
  }, {
    key: "addCommandListener",
    value: function addCommandListener(callback, onError) {
      (0, _get2["default"])((0, _getPrototypeOf2["default"])(Channel.prototype), "addCommandListener", this).call(this, callback, onError);
      return this;
    }
  }, {
    key: "addUserStatusListener",
    value: function addUserStatusListener(callback, onError) {
      (0, _get2["default"])((0, _getPrototypeOf2["default"])(Channel.prototype), "addUserStatusListener", this).call(this, callback, onError);
      return this;
    }
  }, {
    key: "removeCommandListeners",
    value: function removeCommandListeners(callback) {
      (0, _get2["default"])((0, _getPrototypeOf2["default"])(Channel.prototype), "removeCommandListeners", this).call(this, callback);
      return this;
    }
  }, {
    key: "removeUserStatusListeners",
    value: function removeUserStatusListeners(callback) {
      (0, _get2["default"])((0, _getPrototypeOf2["default"])(Channel.prototype), "removeUserStatusListeners", this).call(this, callback);
      return this;
    }
  }, {
    key: "addConnectListener",
    value: function addConnectListener(callback, onError) {
      (0, _get2["default"])((0, _getPrototypeOf2["default"])(Channel.prototype), "addConnectListener", this).call(this, callback, onError);
      return this;
    }
  }, {
    key: "removeConnectListeners",
    value: function removeConnectListeners(callback, onError) {
      (0, _get2["default"])((0, _getPrototypeOf2["default"])(Channel.prototype), "removeConnectListeners", this).call(this, callback, onError);
      return this;
    }
  }, {
    key: "removeAllListeners",
    value: function removeAllListeners() {
      (0, _get2["default"])((0, _getPrototypeOf2["default"])(Channel.prototype), "removeAllListeners", this).call(this);
      return this;
    }
  }, {
    key: "send",
    value: function send(type, data) {
      return (0, _get2["default"])((0, _getPrototypeOf2["default"])(Channel.prototype), "send", this).call(this, type, data);
    }
  }, {
    key: "join",
    value: function join() {
      (0, _get2["default"])((0, _getPrototypeOf2["default"])(Channel.prototype), "connect", this).call(this);
    }
  }, {
    key: "leave",
    value: function leave() {
      (0, _get2["default"])((0, _getPrototypeOf2["default"])(Channel.prototype), "disconnect", this).call(this);
    }
  }, {
    key: "isJoined",
    value: function isJoined() {
      return (0, _get2["default"])((0, _getPrototypeOf2["default"])(Channel.prototype), "isConnected", this).call(this);
    }
  }, {
    key: "connectSubscriber",
    get: function get() {
      return this.app.RT.subscriptions.connectToPubSub;
    }
  }, {
    key: "usersSubscriber",
    get: function get() {
      return this.app.RT.subscriptions.onPubSubUserStatus;
    }
  }, {
    key: "commandSubscriber",
    get: function get() {
      return this.app.RT.subscriptions.onPubSubCommand;
    }
  }, {
    key: "commandSender",
    get: function get() {
      return this.app.RT.methods.sendPubSubCommand;
    }
  }]);
  return Channel;
}(_rt.RTScopeConnector), ((0, _applyDecoratedDescriptor2["default"])(_class.prototype, "addMessageListener", [_dec], Object.getOwnPropertyDescriptor(_class.prototype, "addMessageListener"), _class.prototype)), _class));
exports["default"] = Channel;

/***/ }),

/***/ "./src/messaging/helpers/body-parts.js":
/*!*********************************************!*\
  !*** ./src/messaging/helpers/body-parts.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));

var Bodyparts = function Bodyparts(args) {
  (0, _classCallCheck2["default"])(this, Bodyparts);
  args = args || {};
  this.textmessage = args && args.textmessage;
  this.htmlmessage = args && args.htmlmessage;
};

exports["default"] = Bodyparts;

/***/ }),

/***/ "./src/messaging/helpers/delivery-options.js":
/*!***************************************************!*\
  !*** ./src/messaging/helpers/delivery-options.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));

var DeliveryOptions = function DeliveryOptions(args) {
  (0, _classCallCheck2["default"])(this, DeliveryOptions);
  args = args || {};
  this.publishPolicy = args.publishPolicy || undefined;
  this.pushBroadcast = args.pushBroadcast || undefined;
  this.pushSinglecast = args.pushSinglecast || undefined;
  this.publishAt = args.publishAt || undefined;
  this.repeatEvery = args.repeatEvery || undefined;
  this.repeatExpiresAt = args.repeatExpiresAt || undefined;
};

exports["default"] = DeliveryOptions;

/***/ }),

/***/ "./src/messaging/helpers/email-envelope.js":
/*!*************************************************!*\
  !*** ./src/messaging/helpers/email-envelope.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));

var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js"));

var _utils = _interopRequireDefault(__webpack_require__(/*! ../../utils */ "./src/utils.js"));

var EmailEnvelope = /*#__PURE__*/function () {
  (0, _createClass2["default"])(EmailEnvelope, null, [{
    key: "create",

    /**
     *
     * @param {Object} data
     * @returns {EmailEnvelope}
     */
    value: function create(data) {
      return new EmailEnvelope(data);
    }
  }]);

  function EmailEnvelope(data) {
    (0, _classCallCheck2["default"])(this, EmailEnvelope);
    data = data || {};
    this.addresses = data.addresses || [];
    this.ccAddresses = data.ccAddresses || [];
    this.bccAddresses = data.bccAddresses || [];
    this.query = data.query || null;
  }
  /**
   *
   * @param {Array|String} addresses
   * @returns {EmailEnvelope}
   */


  (0, _createClass2["default"])(EmailEnvelope, [{
    key: "setTo",
    value: function setTo(addresses) {
      this.addresses = _utils["default"].castArray(addresses);
      return this;
    }
    /**
     *
     * @param {Array|String} addresses
     * @returns {EmailEnvelope}
     */

  }, {
    key: "addTo",
    value: function addTo(addresses) {
      this.addresses = this.addresses.concat(_utils["default"].castArray(addresses));
      return this;
    }
    /**
     *
     * @returns {Array} - addresses
     */

  }, {
    key: "getTo",
    value: function getTo() {
      return this.addresses;
    }
    /**
     *
     * @param {Array|String} addresses
     * @returns {EmailEnvelope}
     */

  }, {
    key: "setCc",
    value: function setCc(addresses) {
      this.ccAddresses = _utils["default"].castArray(addresses);
      return this;
    }
    /**
     *
     * @param {Array|String} addresses
     * @returns {EmailEnvelope}
     */

  }, {
    key: "addCc",
    value: function addCc(addresses) {
      this.ccAddresses = this.ccAddresses.concat(_utils["default"].castArray(addresses));
      return this;
    }
    /**
     *
     * @returns {Array} - cc-addresses
     */

  }, {
    key: "getCc",
    value: function getCc() {
      return this.ccAddresses;
    }
    /**
     *
     * @param {Array|String} addresses
     * @returns {EmailEnvelope}
     */

  }, {
    key: "setBcc",
    value: function setBcc(addresses) {
      this.bccAddresses = _utils["default"].castArray(addresses);
      return this;
    }
    /**
     *
     * @param {Array|String} addresses
     * @returns {EmailEnvelope}
     */

  }, {
    key: "addBcc",
    value: function addBcc(addresses) {
      this.bccAddresses = this.bccAddresses.concat(_utils["default"].castArray(addresses));
      return this;
    }
    /**
     *
     * @returns {Array} - bcc-addresses
     */

  }, {
    key: "getBcc",
    value: function getBcc() {
      return this.bccAddresses;
    }
    /**
     *
     * @param {String|null} query
     * @returns {EmailEnvelope}
     */

  }, {
    key: "setQuery",
    value: function setQuery(query) {
      this.query = query;
      return this;
    }
    /**
     *
     * @returns {String} - query
     */

  }, {
    key: "getQuery",
    value: function getQuery() {
      return this.query;
    }
  }, {
    key: "toJSON",
    value: function toJSON() {
      var data = {};

      if (this.addresses.length > 0) {
        data.addresses = this.addresses;
      }

      if (this.ccAddresses.length > 0) {
        data['cc-addresses'] = this.ccAddresses;
      }

      if (this.bccAddresses.length > 0) {
        data['bcc-addresses'] = this.bccAddresses;
      }

      if (this.query) {
        data.criteria = this.query;
      }

      return data;
    }
  }]);
  return EmailEnvelope;
}();

exports["default"] = EmailEnvelope;

/***/ }),

/***/ "./src/messaging/helpers/index.js":
/*!****************************************!*\
  !*** ./src/messaging/helpers/index.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "PublishOptionsHeaders", {
  enumerable: true,
  get: function get() {
    return _publishOptionsHeader["default"];
  }
});
Object.defineProperty(exports, "PublishOptions", {
  enumerable: true,
  get: function get() {
    return _publishOptions["default"];
  }
});
Object.defineProperty(exports, "DeliveryOptions", {
  enumerable: true,
  get: function get() {
    return _deliveryOptions["default"];
  }
});
Object.defineProperty(exports, "Bodyparts", {
  enumerable: true,
  get: function get() {
    return _bodyParts["default"];
  }
});
Object.defineProperty(exports, "EmailEnvelope", {
  enumerable: true,
  get: function get() {
    return _emailEnvelope["default"];
  }
});
Object.defineProperty(exports, "SubscriptionOptions", {
  enumerable: true,
  get: function get() {
    return _subscriptionsOptions["default"];
  }
});

var _publishOptionsHeader = _interopRequireDefault(__webpack_require__(/*! ./publish-options-header */ "./src/messaging/helpers/publish-options-header.js"));

var _publishOptions = _interopRequireDefault(__webpack_require__(/*! ./publish-options */ "./src/messaging/helpers/publish-options.js"));

var _deliveryOptions = _interopRequireDefault(__webpack_require__(/*! ./delivery-options */ "./src/messaging/helpers/delivery-options.js"));

var _bodyParts = _interopRequireDefault(__webpack_require__(/*! ./body-parts */ "./src/messaging/helpers/body-parts.js"));

var _emailEnvelope = _interopRequireDefault(__webpack_require__(/*! ./email-envelope */ "./src/messaging/helpers/email-envelope.js"));

var _subscriptionsOptions = _interopRequireDefault(__webpack_require__(/*! ./subscriptions-options */ "./src/messaging/helpers/subscriptions-options.js"));

/***/ }),

/***/ "./src/messaging/helpers/publish-options-header.js":
/*!*********************************************************!*\
  !*** ./src/messaging/helpers/publish-options-header.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var PublishOptionsHeaders = {
  MESSAGE_TAG: 'message',
  IOS_ALERT_TAG: 'ios-alert',
  IOS_BADGE_TAG: 'ios-badge',
  IOS_SOUND_TAG: 'ios-sound',
  ANDROID_TICKER_TEXT_TAG: 'android-ticker-text',
  ANDROID_CONTENT_TITLE_TAG: 'android-content-title',
  ANDROID_CONTENT_TEXT_TAG: 'android-content-text',
  ANDROID_ACTION_TAG: 'android-action',
  WP_TYPE_TAG: 'wp-type',
  WP_TITLE_TAG: 'wp-title',
  WP_TOAST_SUBTITLE_TAG: 'wp-subtitle',
  WP_TOAST_PARAMETER_TAG: 'wp-parameter',
  WP_TILE_BACKGROUND_IMAGE: 'wp-backgroundImage',
  WP_TILE_COUNT: 'wp-count',
  WP_TILE_BACK_TITLE: 'wp-backTitle',
  WP_TILE_BACK_BACKGROUND_IMAGE: 'wp-backImage',
  WP_TILE_BACK_CONTENT: 'wp-backContent',
  WP_RAW_DATA: 'wp-raw'
};
var _default = PublishOptionsHeaders;
exports["default"] = _default;

/***/ }),

/***/ "./src/messaging/helpers/publish-options.js":
/*!**************************************************!*\
  !*** ./src/messaging/helpers/publish-options.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));

var PublishOptions = function PublishOptions(args) {
  (0, _classCallCheck2["default"])(this, PublishOptions);
  args = args || {};
  this.publisherId = args.publisherId || undefined;
  this.headers = args.headers || undefined;
  this.subtopic = args.subtopic || undefined;
};

exports["default"] = PublishOptions;

/***/ }),

/***/ "./src/messaging/helpers/subscriptions-options.js":
/*!********************************************************!*\
  !*** ./src/messaging/helpers/subscriptions-options.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));

/** @deprecated */
var SubscriptionOptions = function SubscriptionOptions(args) {
  (0, _classCallCheck2["default"])(this, SubscriptionOptions);
  // eslint-disable-next-line no-console
  console.warn('"SubscriptionOptions" is deprecated and nowhere used.'); // eslint-disable-next-line no-console

  console.warn('"SubscriptionOptions" class will be removed in the nearest release.');
  args = args || {};
  this.subscriberId = args.subscriberId || undefined;
  this.subtopic = args.subtopic || undefined;
  this.selector = args.selector || undefined;
};

exports["default"] = SubscriptionOptions;

/***/ }),

/***/ "./src/messaging/index.js":
/*!********************************!*\
  !*** ./src/messaging/index.js ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _applyDecoratedDescriptor2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/applyDecoratedDescriptor */ "./node_modules/@babel/runtime/helpers/applyDecoratedDescriptor.js"));

var _extends2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/extends */ "./node_modules/@babel/runtime/helpers/extends.js"));

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));

var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js"));

var _utils = _interopRequireDefault(__webpack_require__(/*! ../utils */ "./src/utils.js"));

var _decorators = __webpack_require__(/*! ../decorators */ "./src/decorators/index.js");

var _channel = _interopRequireDefault(__webpack_require__(/*! ./channel */ "./src/messaging/channel/index.js"));

var _helpers = __webpack_require__(/*! ./helpers */ "./src/messaging/helpers/index.js");

var _methods = __webpack_require__(/*! ./methods */ "./src/messaging/methods/index.js");

var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _dec7, _dec8, _obj, _init, _init2, _init3, _init4, _init5, _init6, _init7, _init8;

var Messaging = /*#__PURE__*/function () {
  function Messaging(app) {
    (0, _classCallCheck2["default"])(this, Messaging);
    this.app = app;
    this.Bodyparts = _helpers.Bodyparts;
    this.PublishOptions = _helpers.PublishOptions;
    this.DeliveryOptions = _helpers.DeliveryOptions;
    this.PublishOptionsHeaders = _helpers.PublishOptionsHeaders;
    this.EmailEnvelope = _helpers.EmailEnvelope;
    /** @deprecated */

    this.SubscriptionOptions = _helpers.SubscriptionOptions;
  }

  (0, _createClass2["default"])(Messaging, [{
    key: "subscribe",
    value: function subscribe(channelName) {
      if (!channelName || typeof channelName !== 'string') {
        throw new Error('"channelName" must be non empty string');
      }

      if (channelName.indexOf('/') >= 0) {
        throw new Error('"channelName" can not contains slash chars');
      }

      return new _channel["default"]({
        name: channelName.trim()
      }, this.app);
    }
  }]);
  return Messaging;
}();

(0, _extends2["default"])(Messaging.prototype, (_dec = (0, _decorators.deprecated)('Backendless.Messaging', 'Backendless.Messaging.publish'), _dec2 = (0, _decorators.deprecated)('Backendless.Messaging', 'Backendless.Messaging.sendEmail'), _dec3 = (0, _decorators.deprecated)('Backendless.Messaging', 'Backendless.Messaging.sendEmailFromTemplate'), _dec4 = (0, _decorators.deprecated)('Backendless.Messaging', 'Backendless.Messaging.cancel'), _dec5 = (0, _decorators.deprecated)('Backendless.Messaging', 'Backendless.Messaging.registerDevice'), _dec6 = (0, _decorators.deprecated)('Backendless.Messaging', 'Backendless.Messaging.getRegistrations'), _dec7 = (0, _decorators.deprecated)('Backendless.Messaging', 'Backendless.Messaging.unregisterDevice'), _dec8 = (0, _decorators.deprecated)('Backendless.Messaging', 'Backendless.Messaging.getMessageStatus'), (_obj = {
  publishSync: _utils["default"]["synchronized"](_methods.publish),
  publish: _utils["default"].promisified(_methods.publish),
  pushWithTemplate: _utils["default"].promisified(_methods.pushWithTemplate),
  sendEmailSync: _utils["default"]["synchronized"](_methods.sendEmail),
  sendEmail: _utils["default"].promisified(_methods.sendEmail),
  sendEmailFromTemplateSync: _utils["default"]["synchronized"](_methods.sendEmailFromTemplate),
  sendEmailFromTemplate: _utils["default"].promisified(_methods.sendEmailFromTemplate),
  cancelSync: _utils["default"]["synchronized"](_methods.cancel),
  cancel: _utils["default"].promisified(_methods.cancel),
  registerDeviceSync: _utils["default"]["synchronized"](_methods.registerDevice),
  registerDevice: _utils["default"].promisified(_methods.registerDevice),
  getRegistrationsSync: _utils["default"]["synchronized"](_methods.getRegistrations),
  getRegistrations: _utils["default"].promisified(_methods.getRegistrations),
  unregisterDeviceSync: _utils["default"]["synchronized"](_methods.unregisterDevice),
  unregisterDevice: _utils["default"].promisified(_methods.unregisterDevice),
  getMessageStatusSync: _utils["default"]["synchronized"](_methods.getMessageStatus),
  getMessageStatus: _utils["default"].promisified(_methods.getMessageStatus),
  getPushTemplates: _utils["default"].promisified(_methods.getPushTemplates)
}, ((0, _applyDecoratedDescriptor2["default"])(_obj, "publishSync", [_dec], (_init = Object.getOwnPropertyDescriptor(_obj, "publishSync"), _init = _init ? _init.value : undefined, {
  enumerable: true,
  configurable: true,
  writable: true,
  initializer: function initializer() {
    return _init;
  }
}), _obj), (0, _applyDecoratedDescriptor2["default"])(_obj, "sendEmailSync", [_dec2], (_init2 = Object.getOwnPropertyDescriptor(_obj, "sendEmailSync"), _init2 = _init2 ? _init2.value : undefined, {
  enumerable: true,
  configurable: true,
  writable: true,
  initializer: function initializer() {
    return _init2;
  }
}), _obj), (0, _applyDecoratedDescriptor2["default"])(_obj, "sendEmailFromTemplateSync", [_dec3], (_init3 = Object.getOwnPropertyDescriptor(_obj, "sendEmailFromTemplateSync"), _init3 = _init3 ? _init3.value : undefined, {
  enumerable: true,
  configurable: true,
  writable: true,
  initializer: function initializer() {
    return _init3;
  }
}), _obj), (0, _applyDecoratedDescriptor2["default"])(_obj, "cancelSync", [_dec4], (_init4 = Object.getOwnPropertyDescriptor(_obj, "cancelSync"), _init4 = _init4 ? _init4.value : undefined, {
  enumerable: true,
  configurable: true,
  writable: true,
  initializer: function initializer() {
    return _init4;
  }
}), _obj), (0, _applyDecoratedDescriptor2["default"])(_obj, "registerDeviceSync", [_dec5], (_init5 = Object.getOwnPropertyDescriptor(_obj, "registerDeviceSync"), _init5 = _init5 ? _init5.value : undefined, {
  enumerable: true,
  configurable: true,
  writable: true,
  initializer: function initializer() {
    return _init5;
  }
}), _obj), (0, _applyDecoratedDescriptor2["default"])(_obj, "getRegistrationsSync", [_dec6], (_init6 = Object.getOwnPropertyDescriptor(_obj, "getRegistrationsSync"), _init6 = _init6 ? _init6.value : undefined, {
  enumerable: true,
  configurable: true,
  writable: true,
  initializer: function initializer() {
    return _init6;
  }
}), _obj), (0, _applyDecoratedDescriptor2["default"])(_obj, "unregisterDeviceSync", [_dec7], (_init7 = Object.getOwnPropertyDescriptor(_obj, "unregisterDeviceSync"), _init7 = _init7 ? _init7.value : undefined, {
  enumerable: true,
  configurable: true,
  writable: true,
  initializer: function initializer() {
    return _init7;
  }
}), _obj), (0, _applyDecoratedDescriptor2["default"])(_obj, "getMessageStatusSync", [_dec8], (_init8 = Object.getOwnPropertyDescriptor(_obj, "getMessageStatusSync"), _init8 = _init8 ? _init8.value : undefined, {
  enumerable: true,
  configurable: true,
  writable: true,
  initializer: function initializer() {
    return _init8;
  }
}), _obj)), _obj)));
var _default = Messaging;
exports["default"] = _default;

/***/ }),

/***/ "./src/messaging/methods/cancel.js":
/*!*****************************************!*\
  !*** ./src/messaging/methods/cancel.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.cancel = cancel;

function cancel(messageId, asyncHandler) {
  return this.app.request["delete"]({
    url: this.app.urls.messagingMessage(messageId),
    isAsync: !!asyncHandler,
    asyncHandler: asyncHandler
  });
}

/***/ }),

/***/ "./src/messaging/methods/get-message-status.js":
/*!*****************************************************!*\
  !*** ./src/messaging/methods/get-message-status.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getMessageStatus = getMessageStatus;

function getMessageStatus(messageId, asyncHandler) {
  if (!messageId) {
    throw Error('Message ID is required.');
  }

  return this.app.request.get({
    url: this.app.urls.messagingMessage(messageId),
    isAsync: !!asyncHandler,
    asyncHandler: asyncHandler
  });
}

/***/ }),

/***/ "./src/messaging/methods/get-push-templates.js":
/*!*****************************************************!*\
  !*** ./src/messaging/methods/get-push-templates.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getPushTemplates = getPushTemplates;

function getPushTemplates(deviceType, asyncHandler) {
  return this.app.request.get({
    url: this.app.urls.messagingPushTemplates(deviceType),
    isAsync: !!asyncHandler,
    asyncHandler: asyncHandler
  });
}

/***/ }),

/***/ "./src/messaging/methods/get-registration.js":
/*!***************************************************!*\
  !*** ./src/messaging/methods/get-registration.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getRegistrations = getRegistrations;

function getRegistrations(asyncHandler) {
  var device = this.app.device;
  return this.app.request.get({
    url: this.app.urls.messagingRegistrationDevice(device.uuid),
    isAsync: !!asyncHandler,
    asyncHandler: asyncHandler
  });
}

/***/ }),

/***/ "./src/messaging/methods/index.js":
/*!****************************************!*\
  !*** ./src/messaging/methods/index.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _publish = __webpack_require__(/*! ./publish */ "./src/messaging/methods/publish.js");

Object.keys(_publish).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _publish[key];
    }
  });
});

var _sendEmail = __webpack_require__(/*! ./send-email */ "./src/messaging/methods/send-email.js");

Object.keys(_sendEmail).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _sendEmail[key];
    }
  });
});

var _sendEmailFromTemplate = __webpack_require__(/*! ./send-email-from-template */ "./src/messaging/methods/send-email-from-template.js");

Object.keys(_sendEmailFromTemplate).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _sendEmailFromTemplate[key];
    }
  });
});

var _pushWithTemplate = __webpack_require__(/*! ./push-with-template */ "./src/messaging/methods/push-with-template.js");

Object.keys(_pushWithTemplate).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _pushWithTemplate[key];
    }
  });
});

var _cancel = __webpack_require__(/*! ./cancel */ "./src/messaging/methods/cancel.js");

Object.keys(_cancel).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _cancel[key];
    }
  });
});

var _registerDevice = __webpack_require__(/*! ./register-device */ "./src/messaging/methods/register-device.js");

Object.keys(_registerDevice).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _registerDevice[key];
    }
  });
});

var _unregisterDevice = __webpack_require__(/*! ./unregister-device */ "./src/messaging/methods/unregister-device.js");

Object.keys(_unregisterDevice).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _unregisterDevice[key];
    }
  });
});

var _getRegistration = __webpack_require__(/*! ./get-registration */ "./src/messaging/methods/get-registration.js");

Object.keys(_getRegistration).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _getRegistration[key];
    }
  });
});

var _getMessageStatus = __webpack_require__(/*! ./get-message-status */ "./src/messaging/methods/get-message-status.js");

Object.keys(_getMessageStatus).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _getMessageStatus[key];
    }
  });
});

var _getPushTemplates = __webpack_require__(/*! ./get-push-templates */ "./src/messaging/methods/get-push-templates.js");

Object.keys(_getPushTemplates).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _getPushTemplates[key];
    }
  });
});

/***/ }),

/***/ "./src/messaging/methods/publish.js":
/*!******************************************!*\
  !*** ./src/messaging/methods/publish.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.publish = publish;

var _utils = _interopRequireDefault(__webpack_require__(/*! ../../utils */ "./src/utils.js"));

var _async = _interopRequireDefault(__webpack_require__(/*! ../../request/async */ "./src/request/async.js"));

var _deliveryOptions = _interopRequireDefault(__webpack_require__(/*! ../helpers/delivery-options */ "./src/messaging/helpers/delivery-options.js"));

var _publishOptions = _interopRequireDefault(__webpack_require__(/*! ../helpers/publish-options */ "./src/messaging/helpers/publish-options.js"));

function publish(channelName, message, publishOptions, deliveryTarget, asyncHandler) {
  if (publishOptions instanceof _async["default"]) {
    asyncHandler = publishOptions;
    publishOptions = undefined;
    deliveryTarget = undefined;
  }

  if (deliveryTarget instanceof _async["default"]) {
    asyncHandler = deliveryTarget;
    deliveryTarget = undefined;
  }

  var data = {
    message: message
  };

  if (publishOptions) {
    if (!(publishOptions instanceof _publishOptions["default"])) {
      throw new Error('Use PublishOption as publishOptions argument');
    }

    _utils["default"].deepExtend(data, publishOptions);
  }

  if (deliveryTarget) {
    if (!(deliveryTarget instanceof _deliveryOptions["default"])) {
      throw new Error('Use DeliveryOptions as deliveryTarget argument');
    }

    _utils["default"].deepExtend(data, deliveryTarget);
  }

  return this.app.request.post({
    url: this.app.urls.messagingChannel(channelName),
    isAsync: !!asyncHandler,
    asyncHandler: asyncHandler,
    data: data
  });
}

/***/ }),

/***/ "./src/messaging/methods/push-with-template.js":
/*!*****************************************************!*\
  !*** ./src/messaging/methods/push-with-template.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.pushWithTemplate = pushWithTemplate;

var _utils = _interopRequireDefault(__webpack_require__(/*! ../../utils */ "./src/utils.js"));

var _async = _interopRequireDefault(__webpack_require__(/*! ../../request/async */ "./src/request/async.js"));

function pushWithTemplate(templateName, templateValues, asyncHandler) {
  if (templateValues instanceof _async["default"]) {
    asyncHandler = templateValues;
    templateValues = undefined;
  }

  if (!templateName || !_utils["default"].isString(templateName)) {
    throw new Error('Push Template Name must be non empty string!');
  }

  var data = {};

  if (templateValues) {
    data.templateValues = templateValues;
  }

  return this.app.request.post({
    url: this.app.urls.messagingPushWithTemplate(templateName),
    isAsync: !!asyncHandler,
    asyncHandler: asyncHandler,
    data: data
  });
}

/***/ }),

/***/ "./src/messaging/methods/register-device.js":
/*!**************************************************!*\
  !*** ./src/messaging/methods/register-device.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.registerDevice = registerDevice;

var _utils = _interopRequireDefault(__webpack_require__(/*! ../../utils */ "./src/utils.js"));

var _async = _interopRequireDefault(__webpack_require__(/*! ../../request/async */ "./src/request/async.js"));

function registerDevice(deviceToken, channels, expiration, asyncHandler) {
  var device = this.app.device;
  asyncHandler = _utils["default"].extractResponder(arguments);
  var data = {
    deviceToken: deviceToken,
    deviceId: device.uuid,
    os: device.platform,
    osVersion: device.version
  };

  if (_utils["default"].isArray(channels)) {
    data.channels = channels;
  }

  if (_utils["default"].isNumber(expiration) || expiration instanceof Date) {
    data.expiration = expiration instanceof Date ? expiration.getTime() / 1000 : expiration;
  }

  return this.app.request.post({
    url: this.app.urls.messagingRegistrations(),
    data: data,
    isAsync: !!asyncHandler,
    asyncHandler: asyncHandler
  });
}

/***/ }),

/***/ "./src/messaging/methods/send-email-from-template.js":
/*!***********************************************************!*\
  !*** ./src/messaging/methods/send-email-from-template.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.sendEmailFromTemplate = sendEmailFromTemplate;

var _utils = _interopRequireDefault(__webpack_require__(/*! ../../utils */ "./src/utils.js"));

var _emailEnvelope = _interopRequireDefault(__webpack_require__(/*! ../helpers/email-envelope */ "./src/messaging/helpers/email-envelope.js"));

function sendEmailFromTemplate(templateName, envelopeObject, templateValues
/**, async */
) {
  var responder = _utils["default"].extractResponder(arguments);

  var isAsync = !!responder;

  if (typeof templateName !== 'string' || !templateName) {
    throw new Error('Template name is required and must be a string');
  }

  if (!(envelopeObject instanceof _emailEnvelope["default"])) {
    throw new Error('EmailEnvelope is required and should be instance of Backendless.Messaging.EmailEnvelope');
  }

  var data = envelopeObject.toJSON();
  data['template-name'] = templateName;

  if (templateValues) {
    data['template-values'] = templateValues;
  }

  return this.app.request.post({
    url: this.app.urls.emailTemplateSend(),
    isAsync: isAsync,
    asyncHandler: responder,
    data: data
  });
}

/***/ }),

/***/ "./src/messaging/methods/send-email.js":
/*!*********************************************!*\
  !*** ./src/messaging/methods/send-email.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.sendEmail = sendEmail;

var _utils = _interopRequireDefault(__webpack_require__(/*! ../../utils */ "./src/utils.js"));

var _bodyParts = _interopRequireDefault(__webpack_require__(/*! ../helpers/body-parts */ "./src/messaging/helpers/body-parts.js"));

function sendEmail(subject, bodyParts, recipients, attachments
/**, async */
) {
  var responder = _utils["default"].extractResponder(arguments);

  var isAsync = !!responder;
  var data = {};

  if (subject && !_utils["default"].isEmpty(subject) && _utils["default"].isString(subject)) {
    data.subject = subject;
  } else {
    throw new Error('Subject is required parameter and must be a nonempty string');
  }

  if (bodyParts instanceof _bodyParts["default"] && !_utils["default"].isEmpty(bodyParts)) {
    data.bodyparts = bodyParts;
  } else {
    throw new Error('Use Bodyparts as bodyParts argument, must contain at least one property');
  }

  if (recipients && _utils["default"].isArray(recipients) && !_utils["default"].isEmpty(recipients)) {
    data.to = recipients;
  } else {
    throw new Error('Recipients is required parameter, must be a nonempty array');
  }

  if (attachments) {
    if (_utils["default"].isArray(attachments)) {
      if (!_utils["default"].isEmpty(attachments)) {
        data.attachment = attachments;
      }
    }
  }

  function responseMessageStatus(res) {
    return res.status;
  }

  return this.app.request.post({
    url: this.app.urls.messagingEmail(),
    isAsync: isAsync,
    asyncHandler: _utils["default"].wrapAsync(responder, responseMessageStatus),
    data: data
  });
}

/***/ }),

/***/ "./src/messaging/methods/unregister-device.js":
/*!****************************************************!*\
  !*** ./src/messaging/methods/unregister-device.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.unregisterDevice = unregisterDevice;

function unregisterDevice(asyncHandler) {
  var device = this.app.device;
  return this.app.request["delete"]({
    url: this.app.urls.messagingRegistrationDevice(device.uuid),
    isAsync: !!asyncHandler,
    asyncHandler: asyncHandler
  });
}

/***/ }),

/***/ "./src/request/async.js":
/*!******************************!*\
  !*** ./src/request/async.js ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));

var Async = function Async(successCallback, faultCallback, context) {
  var _this = this;

  (0, _classCallCheck2["default"])(this, Async);

  if (!(faultCallback instanceof Function)) {
    context = faultCallback;
    faultCallback = undefined;
  }

  this.successCallback = successCallback;
  this.faultCallback = faultCallback;
  this.context = context; //TODO: move it to prototypes

  this.success = function (data) {
    if (_this.successCallback) {
      _this.successCallback.call(_this.context, data);
    }
  }; //TODO: move it to prototypes


  this.fault = function (data) {
    if (_this.faultCallback) {
      _this.faultCallback.call(_this.context, data);
    }
  };
};

exports["default"] = Async;

/***/ }),

/***/ "./src/request/index.js":
/*!******************************!*\
  !*** ./src/request/index.js ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));

var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js"));

var _request = __webpack_require__(/*! ./request */ "./src/request/request.js");

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var Methods = {
  GET: 'GET',
  POST: 'POST',
  PUT: 'PUT',
  DELETE: 'DELETE',
  PATCH: 'PATCH'
};

var Request = /*#__PURE__*/function () {
  function Request(app) {
    (0, _classCallCheck2["default"])(this, Request);
    this.app = app;
    this.Methods = Methods;
  }

  (0, _createClass2["default"])(Request, [{
    key: "send",
    value: function send() {
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      return _request.sendRequest.call.apply(_request.sendRequest, [this].concat(args));
    }
  }, {
    key: "get",
    value: function get(config) {
      return this.send(_objectSpread(_objectSpread({}, config), {}, {
        method: Methods.GET
      }));
    }
  }, {
    key: "post",
    value: function post(config) {
      return this.send(_objectSpread(_objectSpread({}, config), {}, {
        method: Methods.POST
      }));
    }
  }, {
    key: "put",
    value: function put(config) {
      return this.send(_objectSpread(_objectSpread({}, config), {}, {
        method: Methods.PUT
      }));
    }
  }, {
    key: "delete",
    value: function _delete(config) {
      return this.send(_objectSpread(_objectSpread({}, config), {}, {
        method: Methods.DELETE
      }));
    }
  }]);
  return Request;
}();

exports["default"] = Request;

/***/ }),

/***/ "./src/request/request-for-browser.js":
/*!********************************************!*\
  !*** ./src/request/request-for-browser.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ajaxForBrowser = ajaxForBrowser;

var _utils = _interopRequireDefault(__webpack_require__(/*! ../utils */ "./src/utils.js"));

var parseResponse = function parseResponse(xhr) {
  var result = true;

  if (xhr.responseText) {
    result = _utils["default"].tryParseJSON(xhr.responseText);
  }

  return result;
};

var badResponse = function badResponse(xhr) {
  var result = {};

  try {
    result = JSON.parse(xhr.responseText);
  } catch (e) {
    result.message = xhr.responseText;
  }

  result.statusCode = xhr.status;
  result.message = result.message || 'unknown error occurred';
  return result;
};

var sendRequest = function sendRequest(XMLHttpRequest, config, userToken) {
  var xhr = new XMLHttpRequest();

  var query = _utils["default"].toQueryParams(config.query);

  var url = config.url + (query ? '?' + query : '');
  xhr.open(config.method, url, false);

  if (userToken) {
    xhr.setRequestHeader('user-token', userToken);
  }

  if (config.form) {
    var formData = new FormData();

    for (var key in config.form) {
      var value = config.form[key];

      if (value) {
        formData.append(key, value);
      }
    }

    config.data = formData;
  } else {
    var contentType = config.data ? 'application/json' : 'application/x-www-form-urlencoded';

    if (contentType === 'application/json' && config.data && typeof config.data !== 'string') {
      config.data = JSON.stringify(config.data);
    }

    xhr.setRequestHeader('Content-Type', contentType);
  }

  xhr.send(config.data);

  if (xhr.status >= 200 && xhr.status < 300) {
    return parseResponse(xhr);
  }

  throw badResponse(xhr);
};

function ajaxForBrowser(XMLHttpRequest, config, userToken) {
  config.method = config.method || 'GET';
  config.isAsync = typeof config.isAsync === 'boolean' ? config.isAsync : false;

  try {
    return sendRequest(XMLHttpRequest, config, userToken);
  } catch (error) {
    throw error;
  }
}

/***/ }),

/***/ "./src/request/request.js":
/*!********************************!*\
  !*** ./src/request/request.js ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.sendRequest = sendRequest;

var _backendlessRequest = _interopRequireDefault(__webpack_require__(/*! backendless-request */ "./node_modules/backendless-request/dist/backendless-request.js"));

var _requestForBrowser = __webpack_require__(/*! ./request-for-browser */ "./src/request/request-for-browser.js");

function sendRequest(config) {
  var XMLHttpRequest = this.app.XMLHttpRequest;
  var userToken = this.app.getCurrentUserToken(); //--TODO remove this checking when we get rid of all sync methods

  if (config.isAsync === false || !config.asyncHandler) {
    if (XMLHttpRequest) {
      // eslint-disable-next-line no-console
      console.warn('The sync methods of the Backendless API are deprecated and will be removed in the nearest future.\n' + 'Please, use async methods instead.');
      return (0, _requestForBrowser.ajaxForBrowser)(XMLHttpRequest, config, userToken);
    }

    throw new Error('Using the sync methods of the Backendless API in Node.js are disallowed.\n' + 'Use the async methods instead.');
  } //---------------------------------------------------------------


  _backendlessRequest["default"].verbose = !!this.app.debugMode;
  _backendlessRequest["default"].XMLHttpRequest = XMLHttpRequest;
  var url = config.url;
  var method = (config.method || 'GET').toLowerCase();
  var headers = config.headers || {};

  var onError = config.asyncHandler.fault || function (error) {
    throw error;
  };

  var onSuccess = config.asyncHandler.success || function (result) {
    return result;
  };

  if (userToken) {
    headers['user-token'] = userToken;
  }

  return _backendlessRequest["default"][method](url, config.data).set(headers).query(config.query).form(config.form).then(onSuccess, onError);
}

/***/ }),

/***/ "./src/rso/connection.js":
/*!*******************************!*\
  !*** ./src/rso/connection.js ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _toConsumableArray2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ "./node_modules/@babel/runtime/helpers/toConsumableArray.js"));

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));

var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js"));

var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/assertThisInitialized */ "./node_modules/@babel/runtime/helpers/assertThisInitialized.js"));

var _get2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/get */ "./node_modules/@babel/runtime/helpers/get.js"));

var _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ "./node_modules/@babel/runtime/helpers/inherits.js"));

var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"));

var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "./node_modules/@babel/runtime/helpers/getPrototypeOf.js"));

var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));

var _applyDecoratedDescriptor2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/applyDecoratedDescriptor */ "./node_modules/@babel/runtime/helpers/applyDecoratedDescriptor.js"));

var _utils = _interopRequireDefault(__webpack_require__(/*! ../utils */ "./src/utils.js"));

var _rt = __webpack_require__(/*! ../rt */ "./src/rt.js");

var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _dec7, _dec8, _dec9, _class, _temp;

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2["default"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2["default"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2["default"])(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

var ListenerTypes = _utils["default"].mirrorKeys({
  CHANGES: null,
  CLEARED: null,
  INVOKE: null
});

var RemoteSharedObject = (_dec = _rt.RTScopeConnector.connectionRequired(), _dec2 = _rt.RTScopeConnector.connectionRequired(), _dec3 = _rt.RTScopeConnector.connectionRequired(), _dec4 = _rt.RTScopeConnector.connectionRequired(), _dec5 = _rt.RTScopeConnector.connectionRequired(true), _dec6 = _rt.RTScopeConnector.connectionRequired(true), _dec7 = _rt.RTScopeConnector.connectionRequired(true), _dec8 = _rt.RTScopeConnector.connectionRequired(true), _dec9 = _rt.RTScopeConnector.connectionRequired(true), (_class = (_temp = /*#__PURE__*/function (_RTScopeConnector) {
  (0, _inherits2["default"])(RemoteSharedObject, _RTScopeConnector);

  var _super = _createSuper(RemoteSharedObject);

  function RemoteSharedObject(options, app) {
    var _this;

    (0, _classCallCheck2["default"])(this, RemoteSharedObject);
    _this = _super.call(this, options);
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "onInvoke", function (_ref) {
      var _this$invocationTarge;

      var method = _ref.method,
          args = _ref.args;
      checkInvocationTargetMethod(_this.invocationTarget, method);

      (_this$invocationTarge = _this.invocationTarget)[method].apply(_this$invocationTarge, (0, _toConsumableArray2["default"])(args));
    });
    _this.app = app;
    _this.invocationTarget = null;

    _this.connect();

    return _this;
  }

  (0, _createClass2["default"])(RemoteSharedObject, [{
    key: "setInvocationTarget",
    value: function setInvocationTarget(invocationTarget) {
      this.invocationTarget = invocationTarget;
    }
  }, {
    key: "subscribeOnRemoteInvokes",
    value: function subscribeOnRemoteInvokes() {
      if (!this.subscribedOnRemoteInvokes) {
        this.subscribedOnRemoteInvokes = true;
        this.addSubscription(ListenerTypes.INVOKE, this.app.RT.subscriptions.onRSOInvoke, {
          callback: this.onInvoke
        });
      }
    }
  }, {
    key: "connect",
    value: function connect() {
      if (this.app) {
        return (0, _get2["default"])((0, _getPrototypeOf2["default"])(RemoteSharedObject.prototype), "connect", this).call(this);
      }
    }
  }, {
    key: "onConnect",
    value: function onConnect() {
      (0, _get2["default"])((0, _getPrototypeOf2["default"])(RemoteSharedObject.prototype), "onConnect", this).apply(this, arguments);
      this.subscribeOnRemoteInvokes();
    }
  }, {
    key: "onDisconnect",
    value: function onDisconnect() {
      this.subscribedOnRemoteInvokes = false;
      this.stopSubscription(ListenerTypes.INVOKE, {
        callback: this.onInvoke
      });
      (0, _get2["default"])((0, _getPrototypeOf2["default"])(RemoteSharedObject.prototype), "onDisconnect", this).apply(this, arguments);
    }
  }, {
    key: "addChangesListener",
    value: function addChangesListener(callback, onError) {
      this.addSubscription(ListenerTypes.CHANGES, this.app.RT.subscriptions.onRSOChanges, {
        callback: callback,
        onError: onError
      });
    }
  }, {
    key: "removeChangesListeners",
    value: function removeChangesListeners(callback) {
      this.stopSubscription(ListenerTypes.CHANGES, {
        callback: callback
      });
    }
  }, {
    key: "addClearListener",
    value: function addClearListener(callback, onError) {
      this.addSubscription(ListenerTypes.CLEARED, this.app.RT.subscriptions.onRSOClear, {
        callback: callback,
        onError: onError
      });
    }
  }, {
    key: "removeClearListeners",
    value: function removeClearListeners(callback) {
      this.stopSubscription(ListenerTypes.CLEARED, {
        callback: callback
      });
    }
  }, {
    key: "addCommandListener",
    value: function addCommandListener() {
      return (0, _get2["default"])((0, _getPrototypeOf2["default"])(RemoteSharedObject.prototype), "addCommandListener", this).apply(this, arguments);
    }
  }, {
    key: "addUserStatusListener",
    value: function addUserStatusListener() {
      return (0, _get2["default"])((0, _getPrototypeOf2["default"])(RemoteSharedObject.prototype), "addUserStatusListener", this).apply(this, arguments);
    }
  }, {
    key: "get",
    value: function get(key) {
      return this.app.RT.methods.getRSO(_objectSpread(_objectSpread({}, this.getScopeOptions()), {}, {
        key: key
      }));
    }
  }, {
    key: "set",
    value: function set(key, data) {
      return this.app.RT.methods.setRSO(_objectSpread(_objectSpread({}, this.getScopeOptions()), {}, {
        key: key,
        data: data
      }));
    }
  }, {
    key: "clear",
    value: function clear() {
      return this.app.RT.methods.clearRSO(this.getScopeOptions());
    }
  }, {
    key: "invoke",
    value: function invoke(method) {
      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        args[_key - 1] = arguments[_key];
      }

      return this.invokeOn.apply(this, [method, undefined].concat(args));
    }
  }, {
    key: "invokeOn",
    value: function invokeOn(method, targets) {
      var _this2 = this;

      for (var _len2 = arguments.length, args = new Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
        args[_key2 - 2] = arguments[_key2];
      }

      return Promise.resolve().then(function () {
        return checkInvocationTargetMethod(_this2.invocationTarget, method);
      }).then(function () {
        return _this2.app.RT.methods.invokeRSOMethod(_objectSpread(_objectSpread({}, _this2.getScopeOptions()), {}, {
          method: method,
          targets: targets,
          args: args
        }));
      });
    }
  }, {
    key: "connectSubscriber",
    get: function get() {
      return this.app.RT.subscriptions.connectToRSO;
    }
  }, {
    key: "usersSubscriber",
    get: function get() {
      return this.app.RT.subscriptions.onRSOUserStatus;
    }
  }, {
    key: "commandSubscriber",
    get: function get() {
      return this.app.RT.subscriptions.onRSOCommand;
    }
  }, {
    key: "commandSender",
    get: function get() {
      return this.app.RT.methods.sendRSOCommand;
    }
  }]);
  return RemoteSharedObject;
}(_rt.RTScopeConnector), _temp), ((0, _applyDecoratedDescriptor2["default"])(_class.prototype, "addChangesListener", [_dec], Object.getOwnPropertyDescriptor(_class.prototype, "addChangesListener"), _class.prototype), (0, _applyDecoratedDescriptor2["default"])(_class.prototype, "removeChangesListeners", [_dec2], Object.getOwnPropertyDescriptor(_class.prototype, "removeChangesListeners"), _class.prototype), (0, _applyDecoratedDescriptor2["default"])(_class.prototype, "addClearListener", [_dec3], Object.getOwnPropertyDescriptor(_class.prototype, "addClearListener"), _class.prototype), (0, _applyDecoratedDescriptor2["default"])(_class.prototype, "removeClearListeners", [_dec4], Object.getOwnPropertyDescriptor(_class.prototype, "removeClearListeners"), _class.prototype), (0, _applyDecoratedDescriptor2["default"])(_class.prototype, "get", [_dec5], Object.getOwnPropertyDescriptor(_class.prototype, "get"), _class.prototype), (0, _applyDecoratedDescriptor2["default"])(_class.prototype, "set", [_dec6], Object.getOwnPropertyDescriptor(_class.prototype, "set"), _class.prototype), (0, _applyDecoratedDescriptor2["default"])(_class.prototype, "clear", [_dec7], Object.getOwnPropertyDescriptor(_class.prototype, "clear"), _class.prototype), (0, _applyDecoratedDescriptor2["default"])(_class.prototype, "invoke", [_dec8], Object.getOwnPropertyDescriptor(_class.prototype, "invoke"), _class.prototype), (0, _applyDecoratedDescriptor2["default"])(_class.prototype, "invokeOn", [_dec9], Object.getOwnPropertyDescriptor(_class.prototype, "invokeOn"), _class.prototype)), _class));
exports["default"] = RemoteSharedObject;

function checkInvocationTargetMethod(invocationTarget, method) {
  if (!invocationTarget) {
    throw new Error('"invocationTarget" is not specified');
  }

  if (typeof invocationTarget[method] !== 'function') {
    throw new Error("Method \"".concat(method, "\" of invocationTarget is not function"));
  }
}

/***/ }),

/***/ "./src/rso/index.js":
/*!**************************!*\
  !*** ./src/rso/index.js ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));

var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js"));

var _connection = _interopRequireDefault(__webpack_require__(/*! ./connection */ "./src/rso/connection.js"));

var RemoteSharedObjects = /*#__PURE__*/function () {
  function RemoteSharedObjects(app) {
    (0, _classCallCheck2["default"])(this, RemoteSharedObjects);
    this.app = app;
  }

  (0, _createClass2["default"])(RemoteSharedObjects, [{
    key: "connect",
    value: function connect(name) {
      return new _connection["default"]({
        name: name
      }, this.app);
    }
  }]);
  return RemoteSharedObjects;
}();

exports["default"] = RemoteSharedObjects;

/***/ }),

/***/ "./src/rt.js":
/*!*******************!*\
  !*** ./src/rt.js ***!
  \*******************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = exports.RTScopeConnector = exports.RTListeners = void 0;

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));

var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js"));

var _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ "./node_modules/@babel/runtime/helpers/inherits.js"));

var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"));

var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "./node_modules/@babel/runtime/helpers/getPrototypeOf.js"));

var _backendlessRtClient = _interopRequireDefault(__webpack_require__(/*! backendless-rt-client */ "./node_modules/backendless-rt-client/dist/backendless-rt-client.js"));

var _utils = _interopRequireDefault(__webpack_require__(/*! ./utils */ "./src/utils.js"));

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2["default"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2["default"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2["default"])(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

var RTListeners = _backendlessRtClient["default"].Listeners;
exports.RTListeners = RTListeners;
var RTScopeConnector = _backendlessRtClient["default"].ScopeConnector;
exports.RTScopeConnector = RTScopeConnector;

var RT = /*#__PURE__*/function (_BackendlessRTClient) {
  (0, _inherits2["default"])(RT, _BackendlessRTClient);

  var _super = _createSuper(RT);

  function RT(app) {
    var _this;

    (0, _classCallCheck2["default"])(this, RT);
    var appId = app.applicationId,
        apiKey = app.secretKey,
        appPath = app.appPath,
        debugMode = app.debugMode;

    var clientId = _utils["default"].uuid();

    var lookupPath = "".concat(appPath, "/rt/lookup");
    _this = _super.call(this, {
      appId: appId,
      lookupPath: lookupPath,
      debugMode: debugMode,
      connectQuery: function connectQuery() {
        var userToken = app.getCurrentUserToken();
        return {
          apiKey: apiKey,
          clientId: clientId,
          userToken: userToken
        };
      }
    });
    _this.app = app;
    return _this;
  }

  (0, _createClass2["default"])(RT, [{
    key: "updateUserTokenIfNeeded",
    value: function updateUserTokenIfNeeded() {
      if (this.session) {
        var userToken = this.app.getCurrentUserToken();
        this.methods.setUserToken({
          userToken: userToken
        });
      }
    }
  }, {
    key: "setDebugMode",
    value: function setDebugMode(debugMode) {
      this.setConfig({
        debugMode: debugMode
      });
    }
  }]);
  return RT;
}(_backendlessRtClient["default"]);

exports["default"] = RT;

/***/ }),

/***/ "./src/urls.js":
/*!*********************!*\
  !*** ./src/urls.js ***!
  \*********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));

var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js"));

var Urls = /*#__PURE__*/function () {
  function Urls(app) {
    (0, _classCallCheck2["default"])(this, Urls);
    this.app = app;
  }

  (0, _createClass2["default"])(Urls, [{
    key: "root",
    value: function root() {
      return this.app.appPath;
    } //bl

  }, {
    key: "blServices",
    value: function blServices() {
      return "".concat(this.root(), "/services");
    }
  }, {
    key: "blServiceMethod",
    value: function blServiceMethod(name, method) {
      return "".concat(this.blServices(), "/").concat(name, "/").concat(method);
    }
  }, {
    key: "blEvent",
    value: function blEvent(eventName) {
      return "".concat(this.root(), "/servercode/events/").concat(eventName);
    } //logging

  }, {
    key: "logging",
    value: function logging() {
      return "".concat(this.root(), "/log");
    } //cache

  }, {
    key: "cache",
    value: function cache() {
      return "".concat(this.root(), "/cache");
    }
  }, {
    key: "cacheItem",
    value: function cacheItem(key) {
      return "".concat(this.cache(), "/").concat(key);
    }
  }, {
    key: "cacheItemExpireIn",
    value: function cacheItemExpireIn(key) {
      return "".concat(this.cacheItem(key), "/expireIn");
    }
  }, {
    key: "cacheItemExpireAt",
    value: function cacheItemExpireAt(key) {
      return "".concat(this.cacheItem(key), "/expireAt");
    }
  }, {
    key: "cacheItemCheck",
    value: function cacheItemCheck(key) {
      return "".concat(this.cacheItem(key), "/check");
    } //counters

  }, {
    key: "counters",
    value: function counters() {
      return "".concat(this.root(), "/counters");
    }
  }, {
    key: "counter",
    value: function counter(name) {
      return "".concat(this.counters(), "/").concat(name);
    }
  }, {
    key: "counterAddAndGet",
    value: function counterAddAndGet(name) {
      return "".concat(this.counter(name), "/incrementby/get");
    }
  }, {
    key: "counterGetAndAdd",
    value: function counterGetAndAdd(name) {
      return "".concat(this.counter(name), "/get/incrementby");
    }
  }, {
    key: "counterIncrementAndGet",
    value: function counterIncrementAndGet(name) {
      return "".concat(this.counter(name), "/increment/get");
    }
  }, {
    key: "counterDecrementAndGet",
    value: function counterDecrementAndGet(name) {
      return "".concat(this.counter(name), "/decrement/get");
    }
  }, {
    key: "counterGetAndDecrement",
    value: function counterGetAndDecrement(name) {
      return "".concat(this.counter(name), "/get/decrement");
    }
  }, {
    key: "counterGetAndIncrement",
    value: function counterGetAndIncrement(name) {
      return "".concat(this.counter(name), "/get/increment");
    }
  }, {
    key: "counterCompareAndSet",
    value: function counterCompareAndSet(name) {
      return "".concat(this.counter(name), "/get/compareandset");
    }
  }, {
    key: "counterReset",
    value: function counterReset(name) {
      return "".concat(this.counter(name), "/reset");
    } //data

  }, {
    key: "data",
    value: function data() {
      return "".concat(this.root(), "/data");
    }
  }, {
    key: "dataTable",
    value: function dataTable(tableName) {
      return "".concat(this.data(), "/").concat(tableName);
    }
  }, {
    key: "dataTableFind",
    value: function dataTableFind(tableName) {
      return "".concat(this.dataTable(tableName), "/find");
    }
  }, {
    key: "dataTableObject",
    value: function dataTableObject(tableName, objectId) {
      return "".concat(this.dataTable(tableName), "/").concat(objectId);
    }
  }, {
    key: "dataTableObjectRelation",
    value: function dataTableObjectRelation(tableName, objectId, columnName) {
      return "".concat(this.dataTableObject(tableName, objectId), "/").concat(columnName);
    }
  }, {
    key: "dataTableCount",
    value: function dataTableCount(tableName) {
      return "".concat(this.dataTable(tableName), "/count");
    }
  }, {
    key: "dataTableProps",
    value: function dataTableProps(tableName) {
      return "".concat(this.dataTable(tableName), "/properties");
    }
  }, {
    key: "dataBulkTable",
    value: function dataBulkTable(tableName) {
      return "".concat(this.data(), "/bulk/").concat(tableName);
    }
  }, {
    key: "dataBulkTableDelete",
    value: function dataBulkTableDelete(tableName) {
      return "".concat(this.dataBulkTable(tableName), "/delete");
    }
  }, {
    key: "dataObjectPermission",
    value: function dataObjectPermission(tableName, permissionType, objectId) {
      return "".concat(this.dataTable(tableName), "/permissions/").concat(permissionType, "/").concat(encodeURIComponent(objectId));
    } //messaging

  }, {
    key: "messaging",
    value: function messaging() {
      return "".concat(this.root(), "/messaging");
    }
  }, {
    key: "messagingPush",
    value: function messagingPush() {
      return "".concat(this.messaging(), "/push");
    }
  }, {
    key: "messagingPushTemplates",
    value: function messagingPushTemplates(deviceType) {
      return "".concat(this.messaging(), "/pushtemplates/").concat(deviceType);
    }
  }, {
    key: "messagingPushWithTemplate",
    value: function messagingPushWithTemplate(templateName) {
      return "".concat(this.messagingPush(), "/").concat(templateName);
    }
  }, {
    key: "messagingEmail",
    value: function messagingEmail() {
      return "".concat(this.messaging(), "/email");
    }
  }, {
    key: "messagingChannel",
    value: function messagingChannel(channel) {
      return "".concat(this.messaging(), "/").concat(channel);
    }
  }, {
    key: "messagingMessage",
    value: function messagingMessage(messageId) {
      return "".concat(this.messaging(), "/").concat(messageId);
    }
  }, {
    key: "messagingRegistrations",
    value: function messagingRegistrations() {
      return "".concat(this.messaging(), "/registrations");
    }
  }, {
    key: "messagingRegistrationDevice",
    value: function messagingRegistrationDevice(deviceId) {
      return "".concat(this.messagingRegistrations(), "/").concat(deviceId);
    }
  }, {
    key: "emailTemplate",
    value: function emailTemplate() {
      return "".concat(this.root(), "/emailtemplate");
    }
  }, {
    key: "emailTemplateSend",
    value: function emailTemplateSend() {
      return "".concat(this.emailTemplate(), "/send");
    } //geo

  }, {
    key: "geo",
    value: function geo() {
      return "".concat(this.root(), "/geo");
    }
  }, {
    key: "geoRelative",
    value: function geoRelative() {
      return "".concat(this.geo(), "/relative");
    }
  }, {
    key: "geoPoints",
    value: function geoPoints() {
      return "".concat(this.geo(), "/points");
    }
  }, {
    key: "geoPoint",
    value: function geoPoint(pointId) {
      return "".concat(this.geoPoints(), "/").concat(pointId);
    }
  }, {
    key: "geoPointMetaData",
    value: function geoPointMetaData(pointId) {
      return "".concat(this.geoPoint(pointId), "/metadata");
    }
  }, {
    key: "geoCategories",
    value: function geoCategories() {
      return "".concat(this.geo(), "/categories");
    }
  }, {
    key: "geoCategory",
    value: function geoCategory(name) {
      return "".concat(this.geoCategories(), "/").concat(name);
    }
  }, {
    key: "geoClusters",
    value: function geoClusters() {
      return "".concat(this.geo(), "/clusters");
    }
  }, {
    key: "geoClusterPoints",
    value: function geoClusterPoints(clusterId) {
      return "".concat(this.geoClusters(), "/").concat(clusterId, "/points");
    }
  }, {
    key: "geoCount",
    value: function geoCount() {
      return "".concat(this.geo(), "/count");
    }
  }, {
    key: "geoFences",
    value: function geoFences(geoFence) {
      return "".concat(this.geo(), "/fences").concat(geoFence ? '?geoFence=' + geoFence : '');
    }
  }, {
    key: "geoFence",
    value: function geoFence(action, geoFenceName) {
      return "".concat(this.geo(), "/fence/").concat(action, "?geoFence=").concat(geoFenceName);
    } //commerce

  }, {
    key: "commerce",
    value: function commerce() {
      return "".concat(this.root(), "/commerce/googleplay");
    }
  }, {
    key: "commerceValidate",
    value: function commerceValidate(name, productId, token) {
      return "".concat(this.commerce(), "/validate/").concat(name, "/inapp/").concat(productId, "/purchases/").concat(token);
    }
  }, {
    key: "commerceSubCancel",
    value: function commerceSubCancel(name, subId, token) {
      return "".concat(this.commerce(), "/").concat(name, "/subscription/").concat(subId, "/purchases/").concat(token, "/cancel");
    }
  }, {
    key: "commerceSubStatus",
    value: function commerceSubStatus(name, subId, token) {
      return "".concat(this.commerce(), "/").concat(name, "/subscription/").concat(subId, "/purchases/").concat(token);
    } //files

  }, {
    key: "files",
    value: function files() {
      return "".concat(this.root(), "/files");
    }
  }, {
    key: "filePath",
    value: function filePath(path) {
      return "".concat(this.files(), "/").concat(path);
    }
  }, {
    key: "fileCopy",
    value: function fileCopy() {
      return "".concat(this.files(), "/copy");
    }
  }, {
    key: "fileMove",
    value: function fileMove() {
      return "".concat(this.files(), "/move");
    }
  }, {
    key: "fileRename",
    value: function fileRename() {
      return "".concat(this.files(), "/rename");
    }
  }, {
    key: "filePermissions",
    value: function filePermissions() {
      return "".concat(this.files(), "/permissions");
    }
  }, {
    key: "filePermission",
    value: function filePermission(type, url) {
      return "".concat(this.filePermissions(), "/").concat(type, "/").concat(encodeURIComponent(url));
    }
  }, {
    key: "fileBinaryPath",
    value: function fileBinaryPath(path) {
      return "".concat(this.files(), "/binary/").concat(path);
    } //users

  }, {
    key: "users",
    value: function users() {
      return "".concat(this.root(), "/users");
    }
  }, {
    key: "userObject",
    value: function userObject(objectId) {
      return "".concat(this.users(), "/").concat(objectId);
    }
  }, {
    key: "userRegister",
    value: function userRegister() {
      return "".concat(this.users(), "/register");
    }
  }, {
    key: "userLogin",
    value: function userLogin() {
      return "".concat(this.users(), "/login");
    }
  }, {
    key: "userLogout",
    value: function userLogout() {
      return "".concat(this.users(), "/logout");
    }
  }, {
    key: "userRoles",
    value: function userRoles() {
      return "".concat(this.users(), "/userroles");
    }
  }, {
    key: "userRoleOperation",
    value: function userRoleOperation(operation) {
      return "".concat(this.users(), "/").concat(operation);
    }
  }, {
    key: "userClassProps",
    value: function userClassProps() {
      return "".concat(this.users(), "/userclassprops");
    }
  }, {
    key: "userRestorePassword",
    value: function userRestorePassword(email) {
      return "".concat(this.users(), "/restorepassword/").concat(encodeURIComponent(email));
    }
  }, {
    key: "userTokenCheck",
    value: function userTokenCheck(token) {
      return "".concat(this.users(), "/isvalidusertoken/").concat(token);
    }
  }, {
    key: "userResendConfirmation",
    value: function userResendConfirmation(email) {
      return "".concat(this.users(), "/resendconfirmation/").concat(email);
    }
  }, {
    key: "userSocial",
    value: function userSocial() {
      return "".concat(this.users(), "/social");
    }
  }, {
    key: "userSocialOAuth",
    value: function userSocialOAuth(socialType) {
      return "".concat(this.userSocial(), "/oauth/").concat(socialType.toLowerCase(), "/request_url");
    }
  }, {
    key: "userSocialLogin",
    value: function userSocialLogin(socialType) {
      return "".concat(this.userSocial(), "/").concat(socialType.toLowerCase(), "/sdk/login");
    }
  }, {
    key: "guestLogin",
    value: function guestLogin() {
      return "".concat(this.users(), "/register/guest");
    }
  }, {
    key: "userStatus",
    value: function userStatus(userId) {
      return "".concat(this.userObject(userId), "/status");
    }
  }]);
  return Urls;
}();

exports["default"] = Urls;

/***/ }),

/***/ "./src/user-agent.js":
/*!***************************!*\
  !*** ./src/user-agent.js ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getUserAgent = getUserAgent;

function getUserAgent() {
  var _require = __webpack_require__(/*! ./utils */ "./src/utils.js"),
      Utils = _require["default"];

  var ua = 'NodeJS';

  if (Utils.isBrowser) {
    ua = navigator.userAgent ? navigator.userAgent.toLowerCase() : 'hybrid-app';
  }

  var match = /(chrome)[ \/]([\w.]+)/.exec(ua) || /(webkit)[ \/]([\w.]+)/.exec(ua) || /(opera)(?:.*version|)[ \/]([\w.]+)/.exec(ua) || /(msie) ([\w.]+)/.exec(ua) || ua.indexOf('compatible') < 0 && /(mozilla)(?:.*? rv:([\w.]+)|)/.exec(ua) || [];
  var matched = {
    browser: match[1] || '',
    version: match[2] || '0'
  };
  var browser = {};

  if (matched.browser) {
    browser[matched.browser] = true;
    browser.version = matched.version;
  }

  return browser;
}

/***/ }),

/***/ "./src/users/current-user.js":
/*!***********************************!*\
  !*** ./src/users/current-user.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.setLocalCurrentUser = setLocalCurrentUser;
exports.getLocalCurrentUser = getLocalCurrentUser;
exports.getCurrentUserToken = getCurrentUserToken;
exports.setCurrentUserToken = setCurrentUserToken;
exports.getCurrentUser = getCurrentUser;
exports.isValidLogin = isValidLogin;
exports.loggedInUser = loggedInUser;

var _utils = _interopRequireDefault(__webpack_require__(/*! ../utils */ "./src/utils.js"));

var _async = _interopRequireDefault(__webpack_require__(/*! ../request/async */ "./src/request/async.js"));

var _utils2 = __webpack_require__(/*! ./utils */ "./src/users/utils.js");

function setLocalCurrentUser(user) {
  this.currentUser = user || null;

  if (this.app.LocalCache.get('user-token')) {
    this.app.LocalCache.set('user-token', this.currentUser && this.currentUser['user-token'] || undefined);
  }

  if (this.app.LocalCache.get('current-user-id')) {
    this.app.LocalCache.set('current-user-id', this.currentUser && this.currentUser.objectId || undefined);
  }

  this.app.RT.updateUserTokenIfNeeded();
}

function getLocalCurrentUser() {
  return this.currentUser;
}

function getCurrentUserToken() {
  if (this.currentUser && this.currentUser['user-token']) {
    return this.currentUser['user-token'] || null;
  }

  return this.app.LocalCache.get('user-token') || null;
}

function setCurrentUserToken(userToken) {
  userToken = userToken || null;

  if (this.currentUser) {
    this.currentUser['user-token'] = userToken;
  }

  if (this.app.LocalCache.get('user-token')) {
    this.app.LocalCache.set('user-token', userToken);
  }

  this.app.RT.updateUserTokenIfNeeded();
}

function getCurrentUser(asyncHandler) {
  var _this = this;

  if (this.currentUser) {
    var userFromResponse = _utils2.getUserFromResponse.call(this, this.currentUser);

    return asyncHandler ? asyncHandler.success(userFromResponse) : userFromResponse;
  }

  if (this.currentUserRequest && asyncHandler) {
    this.currentUserRequest.then(function (result) {
      return asyncHandler.success(result);
    })["catch"](function (error) {
      return asyncHandler.fault(error);
    });
    return this.currentUserRequest;
  }

  var stayLoggedIn = this.app.LocalCache.get('stayLoggedIn');
  var currentUserId = stayLoggedIn && this.app.LocalCache.get('current-user-id');

  if (currentUserId) {
    var Data = this.app.Data;
    var User = this.app.User;
    return this.currentUserRequest = Data.of(User).findById(currentUserId).then(function (result) {
      _this.currentUserRequest = null;
      _this.currentUser = _utils2.getUserFromResponse.call(_this, result);
      return asyncHandler.success(_this.currentUser);
    })["catch"](function (error) {
      _this.currentUserRequest = null;
      asyncHandler.fault(error);
      throw error;
    });
  }

  return asyncHandler ? asyncHandler.success(null) : null;
}

function isValidLogin()
/** async */
{
  var userToken = this.getCurrentUserToken();

  var responder = _utils["default"].extractResponder(arguments);

  var isAsync = !!responder;

  if (userToken) {
    if (!isAsync) {
      try {
        var result = this.app.request.get({
          url: this.app.urls.userTokenCheck(userToken)
        });
        return !!result;
      } catch (e) {
        return false;
      }
    }

    return this.app.request.get({
      url: this.app.urls.userTokenCheck(userToken),
      isAsync: isAsync,
      asyncHandler: responder
    });
  }

  if (!isAsync) {
    return !!this.getCurrentUser();
  }

  this.getCurrentUser(new _async["default"](function (user) {
    return responder.success(!!user);
  }, function () {
    return responder.success(false);
  }));
}

function loggedInUser() {
  return this.app.LocalCache.get('current-user-id');
}

/***/ }),

/***/ "./src/users/describe-class.js":
/*!*************************************!*\
  !*** ./src/users/describe-class.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.describeUserClass = describeUserClass;

var _utils = _interopRequireDefault(__webpack_require__(/*! ../utils */ "./src/utils.js"));

function describeUserClass()
/** async */
{
  var responder = _utils["default"].extractResponder(arguments);

  var isAsync = !!responder;
  return this.app.request.get({
    url: this.app.urls.userClassProps(),
    isAsync: isAsync,
    asyncHandler: responder
  });
}

/***/ }),

/***/ "./src/users/email-confirmation.js":
/*!*****************************************!*\
  !*** ./src/users/email-confirmation.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.resendEmailConfirmation = resendEmailConfirmation;

var _utils = _interopRequireDefault(__webpack_require__(/*! ../utils */ "./src/utils.js"));

var _async = _interopRequireDefault(__webpack_require__(/*! ../request/async */ "./src/request/async.js"));

function resendEmailConfirmation(emailAddress
/** async */
) {
  if (!emailAddress || emailAddress instanceof _async["default"]) {
    throw new Error('Email cannot be empty');
  }

  var responder = _utils["default"].extractResponder(arguments);

  var isAsync = !!responder;
  return this.app.request.post({
    url: this.app.urls.userResendConfirmation(emailAddress),
    isAsync: isAsync,
    asyncHandler: responder
  });
}

/***/ }),

/***/ "./src/users/index.js":
/*!****************************!*\
  !*** ./src/users/index.js ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _applyDecoratedDescriptor2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/applyDecoratedDescriptor */ "./node_modules/@babel/runtime/helpers/applyDecoratedDescriptor.js"));

var _extends2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/extends */ "./node_modules/@babel/runtime/helpers/extends.js"));

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));

var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js"));

var _utils = _interopRequireDefault(__webpack_require__(/*! ../utils */ "./src/utils.js"));

var _decorators = __webpack_require__(/*! ../decorators */ "./src/decorators/index.js");

var _register = __webpack_require__(/*! ./register */ "./src/users/register.js");

var _roles = __webpack_require__(/*! ./roles */ "./src/users/roles.js");

var _login = __webpack_require__(/*! ./login */ "./src/users/login.js");

var _loginAsGuest = __webpack_require__(/*! ./login-as-guest */ "./src/users/login-as-guest.js");

var _logout = __webpack_require__(/*! ./logout */ "./src/users/logout.js");

var _update = __webpack_require__(/*! ./update */ "./src/users/update.js");

var _describeClass = __webpack_require__(/*! ./describe-class */ "./src/users/describe-class.js");

var _restorePassword = __webpack_require__(/*! ./restore-password */ "./src/users/restore-password.js");

var _emailConfirmation = __webpack_require__(/*! ./email-confirmation */ "./src/users/email-confirmation.js");

var _status = __webpack_require__(/*! ./status */ "./src/users/status.js");

var _social = __webpack_require__(/*! ./social */ "./src/users/social/index.js");

var _currentUser = __webpack_require__(/*! ./current-user */ "./src/users/current-user.js");

var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _dec7, _dec8, _dec9, _dec10, _dec11, _dec12, _dec13, _dec14, _dec15, _dec16, _obj, _init, _init2, _init3, _init4, _init5, _init6, _init7, _init8, _init9, _init10, _init11, _init12, _init13, _init14, _init15, _init16;

var Users = /*#__PURE__*/function () {
  function Users(app) {
    (0, _classCallCheck2["default"])(this, Users);
    this.app = app;
  }

  (0, _createClass2["default"])(Users, [{
    key: "getCurrentUserId",
    value: function getCurrentUserId() {
      if (this.currentUser) {
        return this.currentUser.objectId;
      }

      return this.app.LocalCache.get(this.app.LocalCache.Keys.CURRENT_USER_ID) || null;
    }
  }]);
  return Users;
}();

(0, _extends2["default"])(Users.prototype, (_dec = (0, _decorators.deprecated)('Backendless.Users', 'Backendless.Users.register'), _dec2 = (0, _decorators.deprecated)('Backendless.Users', 'Backendless.Users.getUserRoles'), _dec3 = (0, _decorators.deprecated)('Backendless.Users', 'Backendless.Users.assignRole'), _dec4 = (0, _decorators.deprecated)('Backendless.Users', 'Backendless.Users.unassignRole'), _dec5 = (0, _decorators.deprecated)('Backendless.Users', 'Backendless.Users.login'), _dec6 = (0, _decorators.deprecated)('Backendless.Users', 'Backendless.Users.loginAsGuest'), _dec7 = (0, _decorators.deprecated)('Backendless.Users', 'Backendless.Users.describeUserClass'), _dec8 = (0, _decorators.deprecated)('Backendless.Users', 'Backendless.Users.restorePassword'), _dec9 = (0, _decorators.deprecated)('Backendless.Users', 'Backendless.Users.logout'), _dec10 = (0, _decorators.deprecated)('Backendless.Users', 'Backendless.Users.getCurrentUser'), _dec11 = (0, _decorators.deprecated)('Backendless.Users', 'Backendless.Users.update'), _dec12 = (0, _decorators.deprecated)('Backendless.Users', 'Backendless.Users.loginWithFacebook'), _dec13 = (0, _decorators.deprecated)('Backendless.Users', 'Backendless.Users.loginWithGooglePlus'), _dec14 = (0, _decorators.deprecated)('Backendless.Users', 'Backendless.Users.loginWithTwitter'), _dec15 = (0, _decorators.deprecated)('Backendless.Users', 'Backendless.Users.isValidLogin'), _dec16 = (0, _decorators.deprecated)('Backendless.Users', 'Backendless.Users.resendEmailConfirmation'), (_obj = {
  registerSync: _utils["default"]["synchronized"](_register.register),
  register: _utils["default"].promisified(_register.register),
  getUserRolesSync: _utils["default"]["synchronized"](_roles.getUserRoles),
  getUserRoles: _utils["default"].promisified(_roles.getUserRoles),
  assignRoleSync: _utils["default"]["synchronized"](_roles.assignRole),
  assignRole: _utils["default"].promisified(_roles.assignRole),
  unassignRoleSync: _utils["default"]["synchronized"](_roles.unassignRole),
  unassignRole: _utils["default"].promisified(_roles.unassignRole),
  loginSync: _utils["default"]["synchronized"](_login.login),
  login: _utils["default"].promisified(_login.login),
  loginAsGuestSync: _utils["default"]["synchronized"](_loginAsGuest.loginAsGuest),
  loginAsGuest: _utils["default"].promisified(_loginAsGuest.loginAsGuest),
  describeUserClassSync: _utils["default"]["synchronized"](_describeClass.describeUserClass),
  describeUserClass: _utils["default"].promisified(_describeClass.describeUserClass),
  restorePasswordSync: _utils["default"]["synchronized"](_restorePassword.restorePassword),
  restorePassword: _utils["default"].promisified(_restorePassword.restorePassword),
  logoutSync: _utils["default"]["synchronized"](_logout.logout),
  logout: _utils["default"].promisified(_logout.logout),
  getCurrentUserSync: _utils["default"]["synchronized"](_currentUser.getCurrentUser),
  getCurrentUser: _utils["default"].promisified(_currentUser.getCurrentUser),
  updateSync: _utils["default"]["synchronized"](_update.update),
  update: _utils["default"].promisified(_update.update),
  loginWithFacebookSync: _utils["default"]["synchronized"](_social.loginWithFacebook),
  loginWithFacebook: _utils["default"].promisified(_social.loginWithFacebook),
  loginWithFacebookSdk: _social.loginWithFacebookSdk,
  loginWithGooglePlusSync: _utils["default"]["synchronized"](_social.loginWithGooglePlus),
  loginWithGooglePlus: _utils["default"].promisified(_social.loginWithGooglePlus),
  loginWithGooglePlusSdk: _social.loginWithGooglePlusSdk,
  loginWithTwitterSync: _utils["default"]["synchronized"](_social.loginWithTwitter),
  loginWithTwitter: _utils["default"].promisified(_social.loginWithTwitter),
  isValidLoginSync: _utils["default"]["synchronized"](_currentUser.isValidLogin),
  isValidLogin: _utils["default"].promisified(_currentUser.isValidLogin),
  resendEmailConfirmationSync: _utils["default"]["synchronized"](_emailConfirmation.resendEmailConfirmation),
  resendEmailConfirmation: _utils["default"].promisified(_emailConfirmation.resendEmailConfirmation),
  loggedInUser: _currentUser.loggedInUser,
  getCurrentUserToken: _currentUser.getCurrentUserToken,
  setCurrentUserToken: _currentUser.setCurrentUserToken,
  getLocalCurrentUser: _currentUser.getLocalCurrentUser,
  setLocalCurrentUser: _currentUser.setLocalCurrentUser,
  enableUser: _utils["default"].promisified(_status.enableUser),
  disableUser: _utils["default"].promisified(_status.disableUser)
}, ((0, _applyDecoratedDescriptor2["default"])(_obj, "registerSync", [_dec], (_init = Object.getOwnPropertyDescriptor(_obj, "registerSync"), _init = _init ? _init.value : undefined, {
  enumerable: true,
  configurable: true,
  writable: true,
  initializer: function initializer() {
    return _init;
  }
}), _obj), (0, _applyDecoratedDescriptor2["default"])(_obj, "getUserRolesSync", [_dec2], (_init2 = Object.getOwnPropertyDescriptor(_obj, "getUserRolesSync"), _init2 = _init2 ? _init2.value : undefined, {
  enumerable: true,
  configurable: true,
  writable: true,
  initializer: function initializer() {
    return _init2;
  }
}), _obj), (0, _applyDecoratedDescriptor2["default"])(_obj, "assignRoleSync", [_dec3], (_init3 = Object.getOwnPropertyDescriptor(_obj, "assignRoleSync"), _init3 = _init3 ? _init3.value : undefined, {
  enumerable: true,
  configurable: true,
  writable: true,
  initializer: function initializer() {
    return _init3;
  }
}), _obj), (0, _applyDecoratedDescriptor2["default"])(_obj, "unassignRoleSync", [_dec4], (_init4 = Object.getOwnPropertyDescriptor(_obj, "unassignRoleSync"), _init4 = _init4 ? _init4.value : undefined, {
  enumerable: true,
  configurable: true,
  writable: true,
  initializer: function initializer() {
    return _init4;
  }
}), _obj), (0, _applyDecoratedDescriptor2["default"])(_obj, "loginSync", [_dec5], (_init5 = Object.getOwnPropertyDescriptor(_obj, "loginSync"), _init5 = _init5 ? _init5.value : undefined, {
  enumerable: true,
  configurable: true,
  writable: true,
  initializer: function initializer() {
    return _init5;
  }
}), _obj), (0, _applyDecoratedDescriptor2["default"])(_obj, "loginAsGuestSync", [_dec6], (_init6 = Object.getOwnPropertyDescriptor(_obj, "loginAsGuestSync"), _init6 = _init6 ? _init6.value : undefined, {
  enumerable: true,
  configurable: true,
  writable: true,
  initializer: function initializer() {
    return _init6;
  }
}), _obj), (0, _applyDecoratedDescriptor2["default"])(_obj, "describeUserClassSync", [_dec7], (_init7 = Object.getOwnPropertyDescriptor(_obj, "describeUserClassSync"), _init7 = _init7 ? _init7.value : undefined, {
  enumerable: true,
  configurable: true,
  writable: true,
  initializer: function initializer() {
    return _init7;
  }
}), _obj), (0, _applyDecoratedDescriptor2["default"])(_obj, "restorePasswordSync", [_dec8], (_init8 = Object.getOwnPropertyDescriptor(_obj, "restorePasswordSync"), _init8 = _init8 ? _init8.value : undefined, {
  enumerable: true,
  configurable: true,
  writable: true,
  initializer: function initializer() {
    return _init8;
  }
}), _obj), (0, _applyDecoratedDescriptor2["default"])(_obj, "logoutSync", [_dec9], (_init9 = Object.getOwnPropertyDescriptor(_obj, "logoutSync"), _init9 = _init9 ? _init9.value : undefined, {
  enumerable: true,
  configurable: true,
  writable: true,
  initializer: function initializer() {
    return _init9;
  }
}), _obj), (0, _applyDecoratedDescriptor2["default"])(_obj, "getCurrentUserSync", [_dec10], (_init10 = Object.getOwnPropertyDescriptor(_obj, "getCurrentUserSync"), _init10 = _init10 ? _init10.value : undefined, {
  enumerable: true,
  configurable: true,
  writable: true,
  initializer: function initializer() {
    return _init10;
  }
}), _obj), (0, _applyDecoratedDescriptor2["default"])(_obj, "updateSync", [_dec11], (_init11 = Object.getOwnPropertyDescriptor(_obj, "updateSync"), _init11 = _init11 ? _init11.value : undefined, {
  enumerable: true,
  configurable: true,
  writable: true,
  initializer: function initializer() {
    return _init11;
  }
}), _obj), (0, _applyDecoratedDescriptor2["default"])(_obj, "loginWithFacebookSync", [_dec12], (_init12 = Object.getOwnPropertyDescriptor(_obj, "loginWithFacebookSync"), _init12 = _init12 ? _init12.value : undefined, {
  enumerable: true,
  configurable: true,
  writable: true,
  initializer: function initializer() {
    return _init12;
  }
}), _obj), (0, _applyDecoratedDescriptor2["default"])(_obj, "loginWithGooglePlusSync", [_dec13], (_init13 = Object.getOwnPropertyDescriptor(_obj, "loginWithGooglePlusSync"), _init13 = _init13 ? _init13.value : undefined, {
  enumerable: true,
  configurable: true,
  writable: true,
  initializer: function initializer() {
    return _init13;
  }
}), _obj), (0, _applyDecoratedDescriptor2["default"])(_obj, "loginWithTwitterSync", [_dec14], (_init14 = Object.getOwnPropertyDescriptor(_obj, "loginWithTwitterSync"), _init14 = _init14 ? _init14.value : undefined, {
  enumerable: true,
  configurable: true,
  writable: true,
  initializer: function initializer() {
    return _init14;
  }
}), _obj), (0, _applyDecoratedDescriptor2["default"])(_obj, "isValidLoginSync", [_dec15], (_init15 = Object.getOwnPropertyDescriptor(_obj, "isValidLoginSync"), _init15 = _init15 ? _init15.value : undefined, {
  enumerable: true,
  configurable: true,
  writable: true,
  initializer: function initializer() {
    return _init15;
  }
}), _obj), (0, _applyDecoratedDescriptor2["default"])(_obj, "resendEmailConfirmationSync", [_dec16], (_init16 = Object.getOwnPropertyDescriptor(_obj, "resendEmailConfirmationSync"), _init16 = _init16 ? _init16.value : undefined, {
  enumerable: true,
  configurable: true,
  writable: true,
  initializer: function initializer() {
    return _init16;
  }
}), _obj)), _obj)));
var _default = Users;
exports["default"] = _default;

/***/ }),

/***/ "./src/users/login-as-guest.js":
/*!*************************************!*\
  !*** ./src/users/login-as-guest.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.loginAsGuest = loginAsGuest;

var _utils = _interopRequireDefault(__webpack_require__(/*! ../utils */ "./src/utils.js"));

var _utils2 = __webpack_require__(/*! ./utils */ "./src/users/utils.js");

function loginAsGuest(stayLoggedIn)
/** async */
{
  stayLoggedIn = stayLoggedIn === true;
  this.app.LocalCache.remove('user-token');
  this.app.LocalCache.remove('current-user-id');
  this.app.LocalCache.set('stayLoggedIn', false);

  var responder = _utils["default"].extractResponder(arguments);

  var isAsync = !!responder;

  if (responder) {
    responder = _utils2.wrapAsync.call(this, responder, stayLoggedIn);
  }

  var result = this.app.request.post({
    url: this.app.urls.guestLogin(),
    isAsync: isAsync,
    asyncHandler: responder
  });

  if (!isAsync && result) {
    this.setLocalCurrentUser((0, _utils2.parseResponse)(result, stayLoggedIn));
    result = _utils2.getUserFromResponse.call(this, this.getLocalCurrentUser());
  }

  return result;
}

/***/ }),

/***/ "./src/users/login.js":
/*!****************************!*\
  !*** ./src/users/login.js ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.login = login;

var _utils = _interopRequireDefault(__webpack_require__(/*! ../utils */ "./src/utils.js"));

var _async = _interopRequireDefault(__webpack_require__(/*! ../request/async */ "./src/request/async.js"));

var _utils2 = __webpack_require__(/*! ./utils */ "./src/users/utils.js");

function login(login, password, stayLoggedIn)
/** async */
{
  var data = {};

  if (typeof login === 'string' && arguments.length === 2 && password instanceof _async["default"]) {
    data.objectId = login;
  } else {
    if (!login) {
      throw new Error('Login can not be empty');
    }

    if (!password) {
      throw new Error('Password can not be empty');
    }

    data.login = login;
    data.password = password;
  }

  stayLoggedIn = stayLoggedIn === true;
  this.app.LocalCache.remove('user-token');
  this.app.LocalCache.remove('current-user-id');
  this.app.LocalCache.set('stayLoggedIn', false);

  var responder = _utils["default"].extractResponder(arguments);

  var isAsync = !!responder;

  if (responder) {
    responder = _utils2.wrapAsync.call(this, responder, stayLoggedIn);
  }

  var result = this.app.request.post({
    url: this.app.urls.userLogin(),
    isAsync: isAsync,
    asyncHandler: responder,
    data: data
  });

  if (!isAsync && result) {
    this.setLocalCurrentUser(_utils2.parseResponse.call(this, result, stayLoggedIn));
    result = _utils2.getUserFromResponse.call(this, this.getLocalCurrentUser());
  }

  return result;
}

/***/ }),

/***/ "./src/users/logout.js":
/*!*****************************!*\
  !*** ./src/users/logout.js ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.logout = logout;

var _utils = _interopRequireDefault(__webpack_require__(/*! ../utils */ "./src/utils.js"));

function logout()
/** async */
{
  var context = this;

  var responder = _utils["default"].extractResponder(arguments);

  var isAsync = !!responder;
  var errorCallback = isAsync ? responder.fault : null;
  var successCallback = isAsync ? responder.success : null;
  var result = {};

  var logoutUser = function logoutUser() {
    context.app.LocalCache.remove('user-token');
    context.app.LocalCache.remove('current-user-id');
    context.app.LocalCache.remove('stayLoggedIn');
    context.setLocalCurrentUser(null);
  };

  var onLogoutSuccess = function onLogoutSuccess() {
    logoutUser();

    if (_utils["default"].isFunction(successCallback)) {
      successCallback();
    }
  };

  var onLogoutError = function onLogoutError(e) {
    if (_utils["default"].isObject(e) && [3064, 3091, 3090, 3023].indexOf(e.code) !== -1) {
      logoutUser();
    }

    if (_utils["default"].isFunction(errorCallback)) {
      errorCallback(e);
    }
  };

  if (responder) {
    responder.fault = onLogoutError;
    responder.success = onLogoutSuccess;
  }

  try {
    result = this.app.request.get({
      url: this.app.urls.userLogout(),
      isAsync: isAsync,
      asyncHandler: responder
    });
  } catch (e) {
    onLogoutError(e);
  }

  if (isAsync) {
    return result;
  } else {
    logoutUser();
  }
}

/***/ }),

/***/ "./src/users/register.js":
/*!*******************************!*\
  !*** ./src/users/register.js ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.register = register;

var _utils = _interopRequireDefault(__webpack_require__(/*! ../utils */ "./src/utils.js"));

var _async = _interopRequireDefault(__webpack_require__(/*! ../request/async */ "./src/request/async.js"));

var _user = _interopRequireDefault(__webpack_require__(/*! ./user */ "./src/users/user.js"));

function register(user
/** async */
) {
  var responder = _utils["default"].extractResponder(arguments);

  var isAsync = !!responder;
  var result = this.app.request.post({
    url: this.app.urls.userRegister(),
    isAsync: isAsync,
    asyncHandler: responder && wrapAsync(responder),
    data: enrichWithLocaleInfo(user)
  });
  return isAsync ? result : parseResponse(result);
}

function enrichWithLocaleInfo(user) {
  if (!user.blUserLocale) {
    var clientUserLocale = getClientUserLocale();

    if (clientUserLocale) {
      user.blUserLocale = clientUserLocale;
    }
  }

  return user;
}

function getClientUserLocale() {
  if (typeof navigator === 'undefined') {
    return;
  }

  var language = '';

  if (navigator.languages && navigator.languages.length) {
    language = navigator.languages[0];
  } else {
    language = navigator.userLanguage || navigator.language || navigator.browserLanguage || navigator.systemLanguage || '';
  }

  return language.slice(0, 2).toLowerCase();
}

function parseResponse(data) {
  return _utils["default"].deepExtend(new _user["default"](), data);
}

function wrapAsync(asyncHandler) {
  var onSuccess = function onSuccess(data) {
    return asyncHandler.success(parseResponse(data));
  };

  var onError = function onError(error) {
    return asyncHandler.fault(error);
  };

  return new _async["default"](onSuccess, onError);
}

/***/ }),

/***/ "./src/users/restore-password.js":
/*!***************************************!*\
  !*** ./src/users/restore-password.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.restorePassword = restorePassword;

var _utils = _interopRequireDefault(__webpack_require__(/*! ../utils */ "./src/utils.js"));

function restorePassword(emailAddress
/** async */
) {
  if (!emailAddress) {
    throw new Error('emailAddress can not be empty');
  }

  var responder = _utils["default"].extractResponder(arguments);

  var isAsync = !!responder;
  return this.app.request.get({
    url: this.app.urls.userRestorePassword(emailAddress),
    isAsync: isAsync,
    asyncHandler: responder
  });
}

/***/ }),

/***/ "./src/users/roles.js":
/*!****************************!*\
  !*** ./src/users/roles.js ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getUserRoles = getUserRoles;
exports.assignRole = assignRole;
exports.unassignRole = unassignRole;

var _utils = _interopRequireDefault(__webpack_require__(/*! ../utils */ "./src/utils.js"));

var _utils2 = __webpack_require__(/*! ./utils */ "./src/users/utils.js");

function roleHelper(identity, rolename, asyncHandler, operation) {
  if (!identity) {
    throw new Error('User identity can not be empty');
  }

  if (!rolename) {
    throw new Error('Rolename can not be empty');
  }

  var responder = _utils["default"].extractResponder(arguments);

  return this.app.request.post({
    url: this.app.urls.userRoleOperation(operation),
    isAsync: !!responder,
    asyncHandler: responder,
    data: {
      user: identity,
      roleName: rolename
    }
  });
}

function getUserRoles()
/** async */
{
  var responder = _utils["default"].extractResponder(arguments);

  var isAsync = !!responder;
  var result = this.app.request.get({
    url: this.app.urls.userRoles(),
    isAsync: isAsync,
    asyncHandler: responder
  });
  return isAsync ? result : _utils2.parseResponse.call(this, result);
}

function assignRole(identity, rolename, asyncHandler) {
  return roleHelper.call(this, identity, rolename, asyncHandler, 'assignRole');
}

function unassignRole(identity, rolename, asyncHandler) {
  return roleHelper.call(this, identity, rolename, asyncHandler, 'unassignRole');
}

/***/ }),

/***/ "./src/users/social/container.js":
/*!***************************************!*\
  !*** ./src/users/social/container.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SocialContainer = void 0;

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));

var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js"));

//TODO: refactor me
var SocialContainer = /*#__PURE__*/function () {
  function SocialContainer(socialType, container) {
    (0, _classCallCheck2["default"])(this, SocialContainer);
    this.socialType = socialType;
    this.container = container;

    if (container) {
      this.processContainer();
    } else {
      this.createContainer();
    }
  }

  (0, _createClass2["default"])(SocialContainer, [{
    key: "processContainer",
    value: function processContainer() {
      var _this = this;

      var client;
      var container = this.container[0];
      var loadingMsg = document.createElement('div');
      loadingMsg.innerHTML = 'Loading...';
      container.appendChild(loadingMsg);
      container.style.cursor = 'wait';

      this.closeContainer = function () {
        container.style.cursor = 'default';
        container.removeChild(client);
      };

      this.removeLoading = function () {
        container.removeChild(loadingMsg);
      };

      this.doAuthorizationActivity = function (url) {
        _this.removeLoading();

        client = document.createElement('iframe');
        client.frameBorder = 0;
        client.width = container.style.width;
        client.height = container.style.height;
        client.id = 'SocialAuthFrame';
        client.setAttribute('src', url + '&amp;output=embed');
        container.appendChild(client);

        client.onload = function () {
          container.style.cursor = 'default';
        };
      };
    }
  }, {
    key: "createContainer",
    value: function createContainer() {
      var container = window.open('', this.socialType + ' authorization', 'resizable=yes, scrollbars=yes, titlebar=yes, top=10, left=10');
      var body = container.document.getElementsByTagName('body')[0];
      body.innerHTML = 'Loading...';
      container.document.getElementsByTagName('html')[0].style.cursor = 'wait';

      this.closeContainer = function () {
        container.close();
      };

      this.removeLoading = function () {
        body.innerHTML = null;
      };

      this.doAuthorizationActivity = function (url) {
        container.location.href = url;

        container.onload = function () {
          container.document.getElementsByTagName('html')[0].style.cursor = 'default';
        };
      };
    }
  }]);
  return SocialContainer;
}();

exports.SocialContainer = SocialContainer;

/***/ }),

/***/ "./src/users/social/facebook.js":
/*!**************************************!*\
  !*** ./src/users/social/facebook.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.loginWithFacebook = loginWithFacebook;
exports.loginWithFacebookSdk = loginWithFacebookSdk;

var _async = _interopRequireDefault(__webpack_require__(/*! ../../request/async */ "./src/request/async.js"));

var _utils = _interopRequireDefault(__webpack_require__(/*! ../../utils */ "./src/utils.js"));

var _login = __webpack_require__(/*! ./login */ "./src/users/social/login.js");

var _request = __webpack_require__(/*! ./request */ "./src/users/social/request.js");

function loginWithFacebook(fieldsMapping, permissions, stayLoggedIn, asyncHandler) {
  console.warn( // eslint-disable-line no-console
  'Method "loginWithFacebook" is deprecated. and will be removed in the nearest release.\n' + 'Use method "loginWithFacebookSdk" instead.');
  return _login.loginSocial.call(this, 'Facebook', fieldsMapping, permissions, null, stayLoggedIn, asyncHandler);
}

function loginWithFacebookSdk(accessToken, fieldsMapping, stayLoggedIn, options) {
  var context = this;

  _utils["default"].checkPromiseSupport();

  if (typeof accessToken !== 'string') {
    options = stayLoggedIn;
    stayLoggedIn = fieldsMapping;
    fieldsMapping = accessToken;
    accessToken = null;
  }

  return new Promise(function (resolve, reject) {
    function loginRequest() {
      var asyncHandler = new _async["default"](resolve, reject);
      return _request.sendSocialLoginRequest.call(context, accessToken, 'facebook', fieldsMapping, stayLoggedIn, asyncHandler);
    }

    if (accessToken || !fieldsMapping) {
      return loginRequest();
    } // eslint-disable-next-line no-console


    console.warn('You must pass "accessToken" as the first argument into ' + ' "loginWithFacebook(accessToken:String, fieldsMapping:Object, stayLoggedIn?:Boolean)" method');

    if (!FB) {
      return reject(new Error('Facebook SDK not found'));
    }

    FB.getLoginStatus(function (response) {
      if (response.status === 'connected') {
        loginRequest(accessToken = response.authResponse.accessToken);
      } else {
        FB.login(function (response) {
          return loginRequest(accessToken = response.authResponse.accessToken);
        }, options);
      }
    });
  });
}

/***/ }),

/***/ "./src/users/social/google.js":
/*!************************************!*\
  !*** ./src/users/social/google.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.loginWithGooglePlus = loginWithGooglePlus;
exports.loginWithGooglePlusSdk = loginWithGooglePlusSdk;

var _async = _interopRequireDefault(__webpack_require__(/*! ../../request/async */ "./src/request/async.js"));

var _utils = _interopRequireDefault(__webpack_require__(/*! ../../utils */ "./src/utils.js"));

var _login = __webpack_require__(/*! ./login */ "./src/users/social/login.js");

var _request = __webpack_require__(/*! ./request */ "./src/users/social/request.js");

function loginWithGooglePlus(fieldsMapping, permissions, container, stayLoggedIn, asyncHandler) {
  console.warn( // eslint-disable-line no-console
  'Method "loginWithGooglePlus" is deprecated. and will be removed in the nearest release.\n' + 'Use method "loginWithGooglePlusSdk" instead.');
  return _login.loginSocial.call(this, 'GooglePlus', fieldsMapping, permissions, container, stayLoggedIn, asyncHandler);
}

function loginWithGooglePlusSdk(accessToken, fieldsMapping, stayLoggedIn) {
  var context = this;

  _utils["default"].checkPromiseSupport();

  if (typeof accessToken !== 'string') {
    stayLoggedIn = fieldsMapping;
    fieldsMapping = accessToken;
    accessToken = null;
  }

  return new Promise(function (resolve, reject) {
    function loginRequest() {
      var asyncHandler = new _async["default"](resolve, reject);
      return _request.sendSocialLoginRequest.call(context, accessToken, 'googleplus', fieldsMapping, stayLoggedIn, asyncHandler);
    }

    if (accessToken || !fieldsMapping) {
      return loginRequest();
    }

    console.warn( // eslint-disable-line no-console
    'You must pass "accessToken" as the first argument into ' + '"loginWithGooglePlusSdk(accessToken:String, fieldsMapping:Object, stayLoggedIn?:Boolean)" method');

    if (!gapi) {
      return reject(new Error('Google Plus SDK not found'));
    }

    gapi.auth.authorize({
      client_id: fieldsMapping.client_id,
      scope: 'https://www.googleapis.com/auth/plus.login'
    }, function (_ref) {
      var access_token = _ref.access_token,
          error = _ref.error;

      if (error) {
        reject(error);
      } else {
        loginRequest(accessToken = access_token);
      }
    });
  });
}

/***/ }),

/***/ "./src/users/social/index.js":
/*!***********************************!*\
  !*** ./src/users/social/index.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "loginWithTwitter", {
  enumerable: true,
  get: function get() {
    return _twitter.loginWithTwitter;
  }
});
Object.defineProperty(exports, "loginWithFacebook", {
  enumerable: true,
  get: function get() {
    return _facebook.loginWithFacebook;
  }
});
Object.defineProperty(exports, "loginWithFacebookSdk", {
  enumerable: true,
  get: function get() {
    return _facebook.loginWithFacebookSdk;
  }
});
Object.defineProperty(exports, "loginWithGooglePlus", {
  enumerable: true,
  get: function get() {
    return _google.loginWithGooglePlus;
  }
});
Object.defineProperty(exports, "loginWithGooglePlusSdk", {
  enumerable: true,
  get: function get() {
    return _google.loginWithGooglePlusSdk;
  }
});

var _twitter = __webpack_require__(/*! ./twitter */ "./src/users/social/twitter.js");

var _facebook = __webpack_require__(/*! ./facebook */ "./src/users/social/facebook.js");

var _google = __webpack_require__(/*! ./google */ "./src/users/social/google.js");

/***/ }),

/***/ "./src/users/social/login.js":
/*!***********************************!*\
  !*** ./src/users/social/login.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.loginSocial = loginSocial;

var _utils = _interopRequireDefault(__webpack_require__(/*! ../../utils */ "./src/utils.js"));

var _async = _interopRequireDefault(__webpack_require__(/*! ../../request/async */ "./src/request/async.js"));

var _utils2 = __webpack_require__(/*! ../utils */ "./src/users/utils.js");

var _container = __webpack_require__(/*! ./container */ "./src/users/social/container.js");

function loginSocial(socialType, fieldsMapping, permissions, container, stayLoggedIn, asyncHandler) {
  var socialContainer = new _container.SocialContainer(socialType, container);
  var serverURL = this.app.serverURL;
  asyncHandler = _utils["default"].extractResponder(arguments);
  asyncHandler = _utils2.wrapAsync.call(this, asyncHandler, stayLoggedIn);
  addWindowEventListener('message', window, function (e) {
    if (e.origin === serverURL) {
      var result = JSON.parse(e.data);

      if (result.fault) {
        asyncHandler.fault(result.fault);
      } else {
        asyncHandler.success(result);
      }

      removeWindowEventListener('message', window);
      socialContainer.closeContainer();
    }
  });
  var interimCallback = new _async["default"](function (r) {
    socialContainer.doAuthorizationActivity(r);
  }, function (e) {
    socialContainer.closeContainer();
    asyncHandler.fault(e);
  });
  var request = {};
  request.fieldsMapping = fieldsMapping || {};
  request.permissions = permissions || [];
  this.app.request.post({
    url: this.app.urls.userSocialOAuth(socialType),
    isAsync: true,
    asyncHandler: interimCallback,
    data: request
  });
}

function addWindowEventListener(event, elem, func) {
  if (elem.addEventListener) {
    elem.addEventListener(event, func, false);
  } else if (elem.attachEvent) {
    elem.attachEvent('on' + event, func);
  } else {
    elem[event] = func;
  }
}

function removeWindowEventListener(event, elem) {
  if (elem.removeEventListener) {
    elem.removeEventListener(event, null, false);
  } else if (elem.detachEvent) {
    elem.detachEvent('on' + event, null);
  }

  elem[event] = null;
}

/***/ }),

/***/ "./src/users/social/request.js":
/*!*************************************!*\
  !*** ./src/users/social/request.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.sendSocialLoginRequest = sendSocialLoginRequest;

var _async = _interopRequireDefault(__webpack_require__(/*! ../../request/async */ "./src/request/async.js"));

var _utils = __webpack_require__(/*! ../utils */ "./src/users/utils.js");

function sendSocialLoginRequest(accessToken, socialType, fieldsMapping, stayLoggedIn, asyncHandler) {
  if (!accessToken) {
    return asyncHandler.fault('"accessToken" is missing.');
  }

  var context = this;
  var interimCallback = new _async["default"](function (r) {
    context.setLocalCurrentUser(_utils.parseResponse.call(context, r));
    context.app.LocalCache.set('stayLoggedIn', !!stayLoggedIn);
    asyncHandler.success(_utils.getUserFromResponse.call(context, context.getLocalCurrentUser()));
  }, function (e) {
    asyncHandler.fault(e);
  });
  this.app.request.post({
    url: this.app.urls.userSocialLogin(socialType),
    isAsync: true,
    asyncHandler: interimCallback,
    data: {
      accessToken: accessToken,
      fieldsMapping: fieldsMapping
    }
  });
}

/***/ }),

/***/ "./src/users/social/twitter.js":
/*!*************************************!*\
  !*** ./src/users/social/twitter.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.loginWithTwitter = loginWithTwitter;

var _login = __webpack_require__(/*! ./login */ "./src/users/social/login.js");

function loginWithTwitter(fieldsMapping, stayLoggedIn, asyncHandler) {
  return _login.loginSocial.call(this, 'Twitter', fieldsMapping, null, null, stayLoggedIn, asyncHandler);
}

/***/ }),

/***/ "./src/users/status.js":
/*!*****************************!*\
  !*** ./src/users/status.js ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.enableUser = enableUser;
exports.disableUser = disableUser;

var _utils = _interopRequireDefault(__webpack_require__(/*! ../utils */ "./src/utils.js"));

function enableUser(userId, asyncHandler) {
  return setUserStatus.call(this, userId, 'ENABLED', arguments);
}

function disableUser(userId, asyncHandler) {
  return setUserStatus.call(this, userId, 'DISABLED', arguments);
}

function setUserStatus(userId, userStatus, args) {
  if (!userId) {
    throw new Error('User objectId can not be empty');
  }

  var responder = _utils["default"].extractResponder(args);

  var isAsync = !!responder;
  return this.app.request.put({
    url: this.app.urls.userStatus(userId),
    data: {
      userStatus: userStatus
    },
    isAsync: isAsync,
    asyncHandler: responder
  });
}

/***/ }),

/***/ "./src/users/update.js":
/*!*****************************!*\
  !*** ./src/users/update.js ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.update = update;

var _utils = _interopRequireDefault(__webpack_require__(/*! ../utils */ "./src/utils.js"));

var _async = _interopRequireDefault(__webpack_require__(/*! ../request/async */ "./src/request/async.js"));

var _user = _interopRequireDefault(__webpack_require__(/*! ./user */ "./src/users/user.js"));

function update(user
/** async */
) {
  var responder = _utils["default"].extractResponder(arguments);

  var isAsync = !!responder;
  var result = this.app.request.put({
    url: this.app.urls.userObject(user.objectId),
    isAsync: isAsync,
    asyncHandler: responder && wrapAsync(responder),
    data: user
  });
  return isAsync ? result : parseResponse(result);
}

function parseResponse(data) {
  return _utils["default"].deepExtend(new _user["default"](), data);
}

function wrapAsync(asyncHandler) {
  //TODO: will be removed after remove all the "{methodName}Sync" methods
  var onSuccess = function onSuccess(data) {
    return asyncHandler.success(parseResponse(data));
  };

  var onError = function onError(error) {
    return asyncHandler.fault(error);
  };

  return new _async["default"](onSuccess, onError);
}

/***/ }),

/***/ "./src/users/user.js":
/*!***************************!*\
  !*** ./src/users/user.js ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));

var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js"));

var User = /*#__PURE__*/function () {
  (0, _createClass2["default"])(User, null, [{
    key: "className",
    get: function get() {
      return 'Users';
    }
  }]);

  function User(user) {
    var _this = this;

    (0, _classCallCheck2["default"])(this, User);
    user = user || {};
    Object.keys(user).map(function (userProp) {
      _this[userProp] = user[userProp];
    }); //TODO: must be moved

    this.___class = User.className;
  }

  return User;
}(); //TODO: must be removed


exports["default"] = User;
User.prototype.___class = User.className;

/***/ }),

/***/ "./src/users/utils.js":
/*!****************************!*\
  !*** ./src/users/utils.js ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.parseResponse = parseResponse;
exports.getUserFromResponse = getUserFromResponse;
exports.wrapAsync = wrapAsync;

var _utils = _interopRequireDefault(__webpack_require__(/*! ../utils */ "./src/utils.js"));

var _async = _interopRequireDefault(__webpack_require__(/*! ../request/async */ "./src/request/async.js"));

var _user = _interopRequireDefault(__webpack_require__(/*! ./user */ "./src/users/user.js"));

function parseResponse(data, stayLoggedIn) {
  var user = new _user["default"]();

  _utils["default"].deepExtend(user, data);

  if (stayLoggedIn) {
    this.app.LocalCache.set('stayLoggedIn', stayLoggedIn);
  }

  return user;
}

function getUserFromResponse(user) {
  this.app.LocalCache.set('current-user-id', user.objectId);
  var userToken = user['user-token'];

  if (userToken && this.app.LocalCache.get('stayLoggedIn')) {
    this.app.LocalCache.set('user-token', userToken);
  }

  return new _user["default"](user);
}

function wrapAsync(asyncHandler, stayLoggedIn) {
  var context = this;

  var success = function success(data) {
    context.setLocalCurrentUser(parseResponse.call(context, _utils["default"].tryParseJSON(data), stayLoggedIn));
    asyncHandler.success(getUserFromResponse.call(context, context.getLocalCurrentUser()));
  };

  var error = function error(data) {
    asyncHandler.fault(data);
  };

  return new _async["default"](success, error);
}

/***/ }),

/***/ "./src/utils.js":
/*!**********************!*\
  !*** ./src/utils.js ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _typeof2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/typeof */ "./node_modules/@babel/runtime/helpers/typeof.js"));

var _async = _interopRequireDefault(__webpack_require__(/*! ./request/async */ "./src/request/async.js"));

var Utils = {
  isObject: function isObject(obj) {
    return obj === Object(obj);
  },
  isArray: Array.isArray || function (obj) {
    return Object.prototype.toString.call(obj).slice(8, -1) === 'Array';
  },
  isString: function isString(obj) {
    return Object.prototype.toString.call(obj).slice(8, -1) === 'String';
  },
  isNumber: function isNumber(obj) {
    return Object.prototype.toString.call(obj).slice(8, -1) === 'Number';
  },
  isFunction: function isFunction(obj) {
    return Object.prototype.toString.call(obj).slice(8, -1) === 'Function';
  },
  isBoolean: function isBoolean(obj) {
    return Object.prototype.toString.call(obj).slice(8, -1) === 'Boolean';
  },
  isDate: function isDate(obj) {
    return Object.prototype.toString.call(obj).slice(8, -1) === 'Date';
  },
  isBrowser: isBrowser(),
  isLocalStorageSupported: isLocalStorageSupported(),
  castArray: function castArray(value) {
    if (Array.isArray(value)) {
      return value;
    }

    if (typeof value === 'undefined') {
      return [];
    }

    return [value];
  },
  isCustomClassInstance: function isCustomClassInstance(item) {
    if (!item || (0, _typeof2["default"])(item) !== 'object' || Array.isArray(item)) {
      return false;
    }

    return item.constructor !== Object;
  },
  isEmpty: function isEmpty(obj) {
    if (obj === null || obj === undefined) {
      return true;
    }

    if (Utils.isArray(obj) || Utils.isString(obj)) {
      return obj.length === 0;
    }

    for (var key in obj) {
      if (obj.hasOwnProperty(key) && obj[key] !== undefined && obj[key] !== null) {
        return false;
      }
    }

    return true;
  },
  toQueryParams: function toQueryParams(params) {
    params = params || {};
    var result = [];

    for (var key in params) {
      if (params.hasOwnProperty(key)) {
        result.push(key + '=' + encodeURIComponent(params[key]));
      }
    }

    return result.join('&');
  },
  tryParseJSON: function tryParseJSON(s) {
    try {
      return typeof s === 'string' ? JSON.parse(s) : s;
    } catch (e) {
      return s;
    }
  },
  getClassName: function getClassName(obj) {
    if (obj && obj.className) {
      return obj.className;
    }

    if (typeof obj === 'function') {
      if (obj.name) {
        return obj.name;
      }
    }

    if (obj && (0, _typeof2["default"])(obj) === 'object' && !Array.isArray(obj)) {
      if (obj.___class) {
        return obj.___class;
      }

      if (obj.constructor !== Object) {
        return Utils.getClassName(obj.constructor);
      }
    }

    return null;
  },
  encodeArrayToUriComponent: function encodeArrayToUriComponent(arr) {
    return arr.map(function (item) {
      return encodeURIComponent(item);
    }).join(',');
  },
  deepExtend: function deepExtend(destination, source) {
    var classToTableMap = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

    //TODO: refactor it
    for (var property in source) {
      if (source[property] !== undefined && source.hasOwnProperty(property)) {
        destination[property] = destination[property] || {};
        destination[property] = classWrapper(source[property], classToTableMap);

        if (destination[property] && destination[property].hasOwnProperty(property) && destination[property][property] && destination[property][property].hasOwnProperty('__originSubID')) {
          destination[property][property] = classWrapper(destination[property], classToTableMap);
        }
      }
    }

    return destination;
  },
  extractResponder: function extractResponder(args) {
    for (var i = 0; i < args.length; i++) {
      if (args[i] instanceof _async["default"]) {
        return args[i];
      }
    }
  },
  wrapAsync: function wrapAsync(asyncHandler, parser, context) {
    //TODO: should we remove it?
    if (asyncHandler instanceof _async["default"] && !parser) {
      return asyncHandler;
    }

    var success = function success(data) {
      if (parser) {
        data = parser.call(context, data);
      }

      asyncHandler.success(data);
    };

    var error = function error(data) {
      asyncHandler.fault(data);
    };

    return new _async["default"](success, error);
  },
  promisified: function promisified(method) {
    return function () {
      Utils.checkPromiseSupport();
      var args = [].slice.call(arguments);
      var context = this;
      var fn = typeof method === 'function' ? method : context[method];
      return new Promise(function (resolve, reject) {
        args.push(new _async["default"](resolve, reject, context));
        fn.apply(context, args);
      });
    };
  },
  "synchronized": function synchronized(method) {
    return function () {
      // eslint-disable-next-line no-console
      console.warn('Using of sync methods is an outdated approach. Please use async methods.');
      var context = this;
      var fn = typeof method === 'function' ? method : context[method];
      return fn.apply(context, arguments);
    };
  },
  checkPromiseSupport: function checkPromiseSupport() {
    if (typeof Promise === 'undefined') {
      throw new Error('This browser doesn\'t support Promise API. Please use polyfill.\n' + 'More info is in the Backendless JS-SDK docs: https://backendless.com/docs/js/doc.html#sync-and-async-calls');
    }
  },
  mirrorKeys: function mirrorKeys(obj) {
    var mirroredObject = {};

    for (var key in obj) {
      if (obj.hasOwnProperty(key)) {
        mirroredObject[key] = key;
      }
    }

    return mirroredObject;
  },
  uuid: function uuid() {
    var chr4 = function chr4() {
      return Math.random().toString(16).slice(-4).toUpperCase();
    };

    var chr8 = function chr8() {
      return "".concat(chr4()).concat(chr4());
    };

    var chr12 = function chr12() {
      return "".concat(chr4()).concat(chr4()).concat(chr4());
    };

    return "".concat(chr8(), "-").concat(chr4(), "-").concat(chr4(), "-").concat(chr4(), "-").concat(chr12());
  }
};

function isBrowser() {
  return (typeof self === "undefined" ? "undefined" : (0, _typeof2["default"])(self)) === 'object' && self.self === self && (typeof window === "undefined" ? "undefined" : (0, _typeof2["default"])(window)) === 'object' && window === self;
}

function isLocalStorageSupported() {
  try {
    if (isBrowser() && window.localStorage) {
      localStorage.setItem('localStorageTest', true);
      localStorage.removeItem('localStorageTest');
      return true;
    }
  } catch (e) {}

  return false;
}

function classWrapper(obj, classToTableMap) {
  //TODO: refactor it
  var wrapper = function wrapper(obj) {
    var wrapperName = null;
    var Wrapper = null;

    for (var property in obj) {
      if (obj.hasOwnProperty(property)) {
        if (property === '___class') {
          wrapperName = obj[property];
          break;
        }
      }
    }

    if (wrapperName) {
      try {
        Wrapper = classToTableMap[wrapperName] || eval(wrapperName);
        obj = Utils.deepExtend(new Wrapper(), obj, classToTableMap);
      } catch (e) {}
    }

    return obj;
  };

  if (obj && (0, _typeof2["default"])(obj) === 'object') {
    if (Array.isArray(obj)) {
      for (var i = obj.length; i--;) {
        obj[i] = wrapper(obj[i]);
      }
    } else {
      obj = wrapper(obj);
    }
  }

  return obj;
}

var _default = Utils;
exports["default"] = _default;

/***/ })

/******/ });
});
//# sourceMappingURL=backendless.js.map