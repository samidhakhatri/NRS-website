"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _utils = _interopRequireDefault(require("../../utils"));

var _async = _interopRequireDefault(require("../../request/async"));

var _point = _interopRequireDefault(require("../point"));

//TODO: refactor me
var GeoFenceActions = /*#__PURE__*/function () {
  function GeoFenceActions(app) {
    (0, _classCallCheck2["default"])(this, GeoFenceActions);
    this.app = app;
  }

  (0, _createClass2["default"])(GeoFenceActions, [{
    key: "run",
    value: function run(action, geoFenceName, geoPoint, asyncHandler) {
      if (geoPoint instanceof _async["default"]) {
        asyncHandler = geoPoint;
        geoPoint = undefined;
      }

      if (!_utils["default"].isString(geoFenceName)) {
        throw new Error("Invalid value for parameter 'geoFenceName'. Geo Fence Name must be a String");
      }

      if (geoPoint && !(geoPoint instanceof _point["default"]) && !geoPoint.objectId) {
        throw new Error('Method argument must be a valid instance of GeoPoint persisted on the server');
      }

      return this.app.request.post({
        url: this.app.urls.geoFence(action, geoFenceName),
        isAsync: !!asyncHandler,
        data: geoPoint,
        asyncHandler: asyncHandler
      });
    }
  }, {
    key: "enter",
    value: function enter(geoFenceName, geoPoint, asyncHandler) {
      return this.run('onenter', geoFenceName, geoPoint, asyncHandler);
    }
  }, {
    key: "stay",
    value: function stay(geoFenceName, geoPoint, asyncHandler) {
      return this.run('onstay', geoFenceName, geoPoint, asyncHandler);
    }
  }, {
    key: "exit",
    value: function exit(geoFenceName, geoPoint, asyncHandler) {
      return this.run('onexit', geoFenceName, geoPoint, asyncHandler);
    }
  }]);
  return GeoFenceActions;
}();

exports["default"] = GeoFenceActions;