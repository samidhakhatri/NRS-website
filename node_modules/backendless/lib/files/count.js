"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getFileCount = getFileCount;

var _utils = _interopRequireDefault(require("../utils"));

var _async = _interopRequireDefault(require("../request/async"));

function getFileCount(path, pattern, sub, countDirectories, asyncHandler) {
  if (countDirectories instanceof _async["default"]) {
    asyncHandler = countDirectories;
    countDirectories = undefined;
  } else if (sub instanceof _async["default"]) {
    asyncHandler = sub;
    sub = undefined;
    countDirectories = undefined;
  } else if (pattern instanceof _async["default"]) {
    asyncHandler = pattern;
    pattern = undefined;
    sub = undefined;
    countDirectories = undefined;
  }

  var query = {
    action: 'count',
    pattern: pattern !== undefined ? pattern : '*',
    sub: !!sub,
    countDirectories: !!countDirectories
  };

  if (!path || !_utils["default"].isString(path)) {
    throw new Error('Files "path" must not be empty and must be String');
  }

  if (!query.pattern || !_utils["default"].isString(query.pattern)) {
    throw new Error('Files "path" must not be empty and must be String');
  }

  return this.app.request.get({
    url: this.app.urls.filePath(path),
    query: query,
    isAsync: !!asyncHandler,
    asyncHandler: asyncHandler
  });
}