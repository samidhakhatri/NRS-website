"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = exports.RTScopeConnector = exports.RTListeners = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _backendlessRtClient = _interopRequireDefault(require("backendless-rt-client"));

var _utils = _interopRequireDefault(require("./utils"));

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2["default"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2["default"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2["default"])(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

var RTListeners = _backendlessRtClient["default"].Listeners;
exports.RTListeners = RTListeners;
var RTScopeConnector = _backendlessRtClient["default"].ScopeConnector;
exports.RTScopeConnector = RTScopeConnector;

var RT = /*#__PURE__*/function (_BackendlessRTClient) {
  (0, _inherits2["default"])(RT, _BackendlessRTClient);

  var _super = _createSuper(RT);

  function RT(app) {
    var _this;

    (0, _classCallCheck2["default"])(this, RT);
    var appId = app.applicationId,
        apiKey = app.secretKey,
        appPath = app.appPath,
        debugMode = app.debugMode;

    var clientId = _utils["default"].uuid();

    var lookupPath = "".concat(appPath, "/rt/lookup");
    _this = _super.call(this, {
      appId: appId,
      lookupPath: lookupPath,
      debugMode: debugMode,
      connectQuery: function connectQuery() {
        var userToken = app.getCurrentUserToken();
        return {
          apiKey: apiKey,
          clientId: clientId,
          userToken: userToken
        };
      }
    });
    _this.app = app;
    return _this;
  }

  (0, _createClass2["default"])(RT, [{
    key: "updateUserTokenIfNeeded",
    value: function updateUserTokenIfNeeded() {
      if (this.session) {
        var userToken = this.app.getCurrentUserToken();
        this.methods.setUserToken({
          userToken: userToken
        });
      }
    }
  }, {
    key: "setDebugMode",
    value: function setDebugMode(debugMode) {
      this.setConfig({
        debugMode: debugMode
      });
    }
  }]);
  return RT;
}(_backendlessRtClient["default"]);

exports["default"] = RT;